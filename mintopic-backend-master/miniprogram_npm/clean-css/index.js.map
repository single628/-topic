{"version":3,"sources":["index.js","lib/clean.js","lib/imports/inliner.js","lib/urls/rewrite.js","lib/urls/reduce.js","lib/utils/split.js","lib/utils/object.js","lib/urls/rebase.js","lib/tokenizer/tokenize.js","lib/tokenizer/extract-properties.js","lib/tokenizer/extract-selectors.js","lib/source-maps/track.js","lib/selectors/simple.js","lib/selectors/clean-up.js","lib/colors/rgb.js","lib/colors/hsl.js","lib/colors/hex-name-shortener.js","lib/properties/wrap-for-optimizing.js","lib/properties/restore-from-optimizing.js","lib/properties/compactable.js","lib/properties/break-up.js","lib/properties/invalid-property-error.js","lib/properties/can-override.js","lib/properties/restore.js","lib/properties/clone.js","lib/properties/remove-unused.js","lib/selectors/advanced.js","lib/properties/optimizer.js","lib/properties/populate-components.js","lib/properties/override-compactor.js","lib/properties/has-inherit.js","lib/properties/every-combination.js","lib/properties/vendor-prefixes.js","lib/stringifier/one-time.js","lib/stringifier/helpers.js","lib/properties/shorthand-compactor.js","lib/selectors/remove-duplicates.js","lib/selectors/merge-adjacent.js","lib/selectors/is-special.js","lib/selectors/reduce-non-adjacent.js","lib/utils/clone-array.js","lib/selectors/merge-non-adjacent-by-selector.js","lib/selectors/extractor.js","lib/selectors/reorderable.js","lib/selectors/merge-non-adjacent-by-body.js","lib/selectors/restructure.js","lib/selectors/remove-duplicate-media-queries.js","lib/selectors/merge-media-queries.js","lib/stringifier/simple.js","lib/stringifier/source-maps.js","lib/text/comments-processor.js","lib/text/escape-store.js","lib/utils/quote-scanner.js","lib/text/expressions-processor.js","lib/text/free-text-processor.js","lib/text/urls-processor.js","lib/utils/compatibility.js","lib/utils/input-source-map-tracker.js","lib/utils/source-tracker.js","lib/utils/source-reader.js","lib/properties/validator.js"],"names":[],"mappings":";;;;;;;AAAA;AACA;;ACDA;AACA;AACA;AACA,ACHA;ADIA,ACHA;ADIA,ACHA;ADIA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,ACHA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA;AFOA,ACHA,AENA,ADGA,AENA;AJaA,ACHA,AENA,ADGA,AENA;AJaA,ACHA,AENA,ADGA,AENA;AJaA,ACHA,AENA,ADGA,AGTA,ADGA;AJaA,ACHA,AENA,ADGA,AGTA,ADGA;AJaA,ACHA,AENA,ADGA,AGTA,ADGA;AJaA,ACHA,AKfA,AHSA,ADGA,AGTA,ADGA;AJaA,ACHA,AKfA,AHSA,ADGA,AGTA,ADGA;AJaA,ACHA,AKfA,AHSA,ADGA,AGTA,ADGA;AJaA,ACHA,AMlBA,ADGA,AHSA,ADGA,AGTA,ADGA;AJaA,ACHA,AMlBA,ADGA,AHSA,ADGA,AGTA,ADGA;AJaA,ACHA,AMlBA,ADGA,AHSA,ADGA,AGTA,ADGA;AJaA,ACHA,AOrBA,ADGA,ADGA,AHSA,ADGA,AGTA,ADGA;AJaA,ACHA,AOrBA,ADGA,ADGA,AHSA,ADGA,AGTA,ADGA;AJaA,ACHA,AOrBA,ADGA,ADGA,AHSA,ADGA,AGTA,ADGA;AJaA,ACHA,AOrBA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AOrBA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AOrBA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AS3BA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AS3BA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AS3BA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AU9BA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AU9BA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AU9BA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AWjCA,ADGA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AWjCA,ADGA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,ACHA,AWjCA,ADGA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,AavCA,AZoCA,AWjCA,ADGA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,AavCA,AZoCA,AWjCA,ADGA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,AavCA,AZoCA,AWjCA,ADGA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,Ac1CA,ADGA,AZoCA,AWjCA,ADGA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,Ac1CA,ADGA,AZoCA,AWjCA,ADGA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,Ac1CA,ADGA,AZoCA,AWjCA,ADGA,ADGA,AFMA,ACHA,AFMA,ADGA,AHSA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,AWjCA,ADGA,ADGA,AFMA,ADGA,ADGA,AHSA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,AWjCA,ADGA,ADGA,AFMA,ADGA,ADGA,AHSA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,AWjCA,ADGA,ADGA,AFMA,ADGA,ADGA,AHSA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,Ae7CA,AJYA,ADGA,ADGA,AFMA,ADGA,ADGA,AHSA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,Ae7CA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,Ae7CA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,AgBhDA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,AgBhDA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,AgBhDA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,AiBnDA,ADGA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,ADGA,AZoCA,AiBnDA,ADGA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AiBnDA,ADGA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,ADGA,ADGA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,ADGA,ADGA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,ADGA,ADGA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,ADGA,AENA,AHSA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,ADGA,AENA,AHSA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,ADGA,AENA,AHSA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AENA,AHSA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AENA,AHSA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AENA,AHSA,ADGA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AENA,AHSA,AKfA,ANkBA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AENA,AHSA,AKfA,ANkBA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AENA,AHSA,AKfA,ANkBA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AENA,AHSA,AKfA,ANkBA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AENA,AHSA,AKfA,ANkBA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,ADGA,AKfA,ANkBA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AMlBA,APqBA,AKfA,ANkBA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AMlBA,APqBA,AKfA,ANkBA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AMlBA,APqBA,AKfA,ANkBA,AJYA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA,AENA;AJaA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AMlBA,APqBA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AMlBA,APqBA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AMlBA,APqBA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AQxBA,AFMA,APqBA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AQxBA,AFMA,APqBA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AQxBA,AFMA,APqBA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AQxBA,ACHA,AHSA,APqBA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AQxBA,ACHA,AHSA,APqBA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AQxBA,ACHA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AQxBA,AENA,ADGA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AQxBA,AENA,ADGA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AQxBA,AENA,ADGA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AWjCA,AHSA,AENA,ADGA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AWjCA,AHSA,AENA,ADGA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AWjCA,AHSA,AENA,ADGA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AYpCA,ADGA,AHSA,AENA,ADGA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AYpCA,ADGA,AHSA,AENA,ADGA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AYpCA,ADGA,AHSA,AENA,ADGA,AV8BA,AKfA,ANkBA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AYpCA,ADGA,AHSA,AENA,ADGA,AV8BA,AKfA,AS3BA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AYpCA,ADGA,AHSA,AENA,ADGA,AV8BA,AKfA,AS3BA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AENA,ALeA,AYpCA,ADGA,AHSA,AENA,ADGA,AV8BA,AKfA,AS3BA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AFMA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,ADGA,AHSA,AENA,ADGA,AV8BA,AKfA,AS3BA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AsBlEA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,ADGA,AHSA,AENA,ADGA,AV8BA,AKfA,AS3BA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AsBlEA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AS3BA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AsBlEA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AS3BA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AS3BA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AS3BA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,ADGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AuBrEA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AuBrEA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AuBrEA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AwBxEA,ADGA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,ADGA,AbuCA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AwBxEA,ADGA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AwBxEA,ADGA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,AV8BA,AKfA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AyB3EA,ADGA,ADGA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,ALeA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AyB3EA,ADGA,ADGA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ADGA,ALeA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AyB3EA,ADGA,ADGA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,ADGA;AFOA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ANkBA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AyB3EA,ADGA,AENA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ANkBA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AyB3EA,ADGA,AENA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ANkBA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AyB3EA,ADGA,AENA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ANkBA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AwBxEA,AENA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AYpCA,AJYA,AENA,ANkBA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AwBxEA,AENA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AHSA,Af6CA,AS3BA,AbuCA,AwBxEA,AENA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AbuCA,AwBxEA,AIZA,AFMA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AbuCA,AwBxEA,AIZA,AFMA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AbuCA,AwBxEA,AIZA,AFMA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AbuCA,A6BvFA,ALeA,AIZA,AFMA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AbuCA,A6BvFA,ALeA,AIZA,AFMA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AbuCA,A6BvFA,ALeA,AIZA,AFMA,AHSA,AxBwEA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AIZA,AFMA,AHSA,AOrBA,A/B6FA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AIZA,AFMA,AHSA,AOrBA,A/B6FA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AIZA,AFMA,AHSA,AOrBA,A/B6FA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AOrBA,AHSA,AFMA,AHSA,AOrBA,A/B6FA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA,AoC5GA;AvCsHA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AOrBA,AHSA,AFMA,AHSA,AOrBA,A/B6FA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AOrBA,AHSA,AFMA,AHSA,AOrBA,A/B6FA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AOrBA,AHSA,AFMA,AHSA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AOrBA,AHSA,AFMA,AHSA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AOrBA,AHSA,AFMA,AHSA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AOrBA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AOrBA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AOrBA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AU9BA,AHSA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AU9BA,AHSA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AU9BA,AHSA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,AxBwEA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AU9BA,AHSA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,Ae7CA,AvCqHA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AU9BA,AHSA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,Ae7CA,AvCqHA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,ALeA,AU9BA,AHSA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,Ae7CA,AvCqHA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,Ae7CA,ACHA,AxCwHA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,Ae7CA,ACHA,AxCwHA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AV8BA,AOrBA,AENA,AjCmGA,ADGA,AuBrEA,ADGA,Ae7CA,ACHA,AxCwHA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,ADGA,AuBrEA,Ac1CA,ACHA,ACHA,AzC2HA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,ADGA,AuBrEA,Ac1CA,ACHA,ACHA,AzC2HA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,ADGA,AuBrEA,Ac1CA,ACHA,ACHA,AzC2HA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,A1C8HA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,A1C8HA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,A1C8HA,ADGA,AJYA;AHUA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,A1C8HA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,A1C8HA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,A1C8HA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AOrBA,AHSA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,AENA,A5CoIA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,AENA,A5CoIA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,AENA,A5CoIA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,AENA,ACHA,A7CuIA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,AENA,ACHA,A7CuIA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AS3BA,AgBhDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,AENA,ACHA,A7CuIA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AyB3EA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AyB3EA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ac1CA,ACHA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AJYA,AgDhJA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AyB3EA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,A4CpIA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AyB3EA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,AJYA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AlBsDA,AyB3EA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,AJYA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,AJYA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA;AnD0JA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AMlBA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AMlBA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AMlBA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AOrBA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,AHSA,AHSA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,ANkBA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AlBsDA,AKfA,ANkBA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ANkBA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ANkBA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ANkBA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ANkBA,AFMA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ARwBA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ARwBA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ARwBA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ARwBA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ARwBA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,AbuCA,ARwBA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA,ADGA;AzD4KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,ACHA,AENA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,AENA,AHSA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A9C0IA,ADGA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AIZA,AENA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;A1D+KA,Ae7CA,Ad0CA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AYpCA,AyB3EA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,ACHA,A/C6IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,Ae7CA,ACHA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,ACHA,A9C0IA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsBlEA,AgBhDA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA,AOrBA;AzD4KA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA;AlDuJA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,AGTA,A7CuIA,AgDhJA,ACHA,ALeA;AlDuJA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,AGTA,A7CuIA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,A1C8HA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,A1C8HA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,A1C8HA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,A1C8HA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AsClHA,A1C8HA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,ArB+DA,AMlBA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AQxBA,AENA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,ANkBA,AqC/GA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,AJYA,AgDhJA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A4CpIA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A4CpIA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A4CpIA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A4CpIA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A4CpIA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A4CpIA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A4CpIA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A4CpIA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A4CpIA,ACHA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,ADGA,AU9BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,A+B7FA,Af6CA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,AkBtDA,AS3BA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;AvDsKA,A2BjFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA,A6CvIA;A5BqFA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiBlDA,AgBhDA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA,AjCmGA;AiClGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.js","sourcesContent":["module.exports = require('./lib/clean');\n","/**\n * Clean-css - https://github.com/jakubpawlowicz/clean-css\n * Released under the terms of MIT license\n *\n * Copyright (C) 2015 JakubPawlowicz.com\n */\n\nvar ImportInliner = require('./imports/inliner');\nvar rebaseUrls = require('./urls/rebase');\n\nvar tokenize = require('./tokenizer/tokenize');\nvar simpleOptimize = require('./selectors/simple');\nvar advancedOptimize = require('./selectors/advanced');\n\nvar simpleStringify = require('./stringifier/simple');\nvar sourceMapStringify = require('./stringifier/source-maps');\n\nvar CommentsProcessor = require('./text/comments-processor');\nvar ExpressionsProcessor = require('./text/expressions-processor');\nvar FreeTextProcessor = require('./text/free-text-processor');\nvar UrlsProcessor = require('./text/urls-processor');\n\nvar Compatibility = require('./utils/compatibility');\nvar InputSourceMapTracker = require('./utils/input-source-map-tracker');\nvar SourceTracker = require('./utils/source-tracker');\nvar SourceReader = require('./utils/source-reader');\nvar Validator = require('./properties/validator');\n\nvar fs = require('fs');\nvar path = require('path');\nvar url = require('url');\n\nvar override = require('./utils/object').override;\n\nvar DEFAULT_TIMEOUT = 5000;\n\nvar CleanCSS = module.exports = function CleanCSS(options) {\n  options = options || {};\n\n  this.options = {\n    advanced: undefined === options.advanced ? true : !!options.advanced,\n    aggressiveMerging: undefined === options.aggressiveMerging ? true : !!options.aggressiveMerging,\n    benchmark: options.benchmark,\n    compatibility: new Compatibility(options.compatibility).toOptions(),\n    debug: options.debug,\n    explicitRoot: !!options.root,\n    explicitTarget: !!options.target,\n    inliner: options.inliner || {},\n    keepBreaks: options.keepBreaks || false,\n    keepSpecialComments: 'keepSpecialComments' in options ? options.keepSpecialComments : '*',\n    mediaMerging: undefined === options.mediaMerging ? true : !!options.mediaMerging,\n    processImport: undefined === options.processImport ? true : !!options.processImport,\n    processImportFrom: importOptionsFrom(options.processImportFrom),\n    rebase: undefined === options.rebase ? true : !!options.rebase,\n    relativeTo: options.relativeTo,\n    restructuring: undefined === options.restructuring ? true : !!options.restructuring,\n    root: options.root || process.cwd(),\n    roundingPrecision: options.roundingPrecision,\n    semanticMerging: undefined === options.semanticMerging ? false : !!options.semanticMerging,\n    shorthandCompacting: undefined === options.shorthandCompacting ? true : !!options.shorthandCompacting,\n    sourceMap: options.sourceMap,\n    sourceMapInlineSources: !!options.sourceMapInlineSources,\n    target: !options.target || missingDirectory(options.target) || presentDirectory(options.target) ? options.target : path.dirname(options.target)\n  };\n\n  this.options.inliner.timeout = this.options.inliner.timeout || DEFAULT_TIMEOUT;\n  this.options.inliner.request = override(\n    /* jshint camelcase: false */\n    proxyOptionsFrom(process.env.HTTP_PROXY || process.env.http_proxy),\n    this.options.inliner.request || {}\n  );\n};\n\nfunction importOptionsFrom(rules) {\n  return undefined === rules ? ['all'] : rules;\n}\n\nfunction missingDirectory(filepath) {\n  return !fs.existsSync(filepath) && !/\\.css$/.test(filepath);\n}\n\nfunction presentDirectory(filepath) {\n  return fs.existsSync(filepath) && fs.statSync(filepath).isDirectory();\n}\n\nfunction proxyOptionsFrom(httpProxy) {\n  return httpProxy ?\n    {\n      hostname: url.parse(httpProxy).hostname,\n      port: parseInt(url.parse(httpProxy).port)\n    } :\n    {};\n}\n\nCleanCSS.prototype.minify = function (data, callback) {\n  var context = {\n    stats: {},\n    errors: [],\n    warnings: [],\n    options: this.options,\n    debug: this.options.debug,\n    localOnly: !callback,\n    sourceTracker: new SourceTracker(),\n    validator: new Validator(this.options.compatibility)\n  };\n\n  if (context.options.sourceMap)\n    context.inputSourceMapTracker = new InputSourceMapTracker(context);\n\n  context.sourceReader = new SourceReader(context, data);\n  data = context.sourceReader.toString();\n\n  if (context.options.processImport || data.indexOf('@shallow') > 0) {\n    // inline all imports\n    var runner = callback ?\n      process.nextTick :\n      function (callback) { return callback(); };\n\n    return runner(function () {\n      return new ImportInliner(context).process(data, {\n        localOnly: context.localOnly,\n        imports: context.options.processImportFrom,\n        whenDone: runMinifier(callback, context)\n      });\n    });\n  } else {\n    return runMinifier(callback, context)(data);\n  }\n};\n\nfunction runMinifier(callback, context) {\n  function whenSourceMapReady (data) {\n    data = context.options.debug ?\n      minifyWithDebug(context, data) :\n      minify(context, data);\n    data = withMetadata(context, data);\n\n    return callback ?\n      callback.call(null, context.errors.length > 0 ? context.errors : null, data) :\n      data;\n  }\n\n  return function (data) {\n    if (context.options.sourceMap) {\n      return context.inputSourceMapTracker.track(data, function () {\n        if (context.options.sourceMapInlineSources) {\n          return context.inputSourceMapTracker.resolveSources(function () {\n            return whenSourceMapReady(data);\n          });\n        } else {\n          return whenSourceMapReady(data);\n        }\n      });\n    } else {\n      return whenSourceMapReady(data);\n    }\n  };\n}\n\nfunction withMetadata(context, data) {\n  data.stats = context.stats;\n  data.errors = context.errors;\n  data.warnings = context.warnings;\n  return data;\n}\n\nfunction minifyWithDebug(context, data) {\n  var startedAt = process.hrtime();\n  context.stats.originalSize = context.sourceTracker.removeAll(data).length;\n\n  data = minify(context, data);\n\n  var elapsed = process.hrtime(startedAt);\n  context.stats.timeSpent = ~~(elapsed[0] * 1e3 + elapsed[1] / 1e6);\n  context.stats.efficiency = 1 - data.styles.length / context.stats.originalSize;\n  context.stats.minifiedSize = data.styles.length;\n\n  return data;\n}\n\nfunction benchmark(runner) {\n  return function (processor, action) {\n    var name =  processor.constructor.name + '#' + action;\n    var start = process.hrtime();\n    runner(processor, action);\n    var itTook = process.hrtime(start);\n    console.log('%d ms: ' + name, 1000 * itTook[0] + itTook[1] / 1000000);\n  };\n}\n\nfunction minify(context, data) {\n  var options = context.options;\n\n  var commentsProcessor = new CommentsProcessor(context, options.keepSpecialComments, options.keepBreaks, options.sourceMap);\n  var expressionsProcessor = new ExpressionsProcessor(options.sourceMap);\n  var freeTextProcessor = new FreeTextProcessor(options.sourceMap);\n  var urlsProcessor = new UrlsProcessor(context, options.sourceMap, options.compatibility.properties.urlQuotes);\n\n  var stringify = options.sourceMap ? sourceMapStringify : simpleStringify;\n\n  var run = function (processor, action) {\n    data = typeof processor == 'function' ?\n      processor(data) :\n      processor[action](data);\n  };\n\n  if (options.benchmark)\n    run = benchmark(run);\n\n  run(commentsProcessor, 'escape');\n  run(expressionsProcessor, 'escape');\n  run(urlsProcessor, 'escape');\n  run(freeTextProcessor, 'escape');\n\n  function restoreEscapes(data, prefixContent) {\n    data = freeTextProcessor.restore(data, prefixContent);\n    data = urlsProcessor.restore(data);\n    data = options.rebase ? rebaseUrls(data, context) : data;\n    data = expressionsProcessor.restore(data);\n    return commentsProcessor.restore(data);\n  }\n\n  var tokens = tokenize(data, context);\n\n  simpleOptimize(tokens, options, context);\n\n  if (options.advanced)\n    advancedOptimize(tokens, options, context, true);\n\n  return stringify(tokens, options, restoreEscapes, context.inputSourceMapTracker);\n}\n","var fs = require('fs');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar url = require('url');\n\nvar rewriteUrls = require('../urls/rewrite');\nvar split = require('../utils/split');\nvar override = require('../utils/object.js').override;\n\nvar MAP_MARKER = /\\/\\*# sourceMappingURL=(\\S+) \\*\\//;\nvar REMOTE_RESOURCE = /^(https?:)?\\/\\//;\nvar NO_PROTOCOL_RESOURCE = /^\\/\\//;\n\nfunction ImportInliner (context) {\n  this.outerContext = context;\n}\n\nImportInliner.prototype.process = function (data, context) {\n  var root = this.outerContext.options.root;\n\n  context = override(context, {\n    baseRelativeTo: this.outerContext.options.relativeTo || root,\n    debug: this.outerContext.options.debug,\n    done: [],\n    errors: this.outerContext.errors,\n    left: [],\n    inliner: this.outerContext.options.inliner,\n    rebase: this.outerContext.options.rebase,\n    relativeTo: this.outerContext.options.relativeTo || root,\n    root: root,\n    sourceReader: this.outerContext.sourceReader,\n    sourceTracker: this.outerContext.sourceTracker,\n    warnings: this.outerContext.warnings,\n    visited: []\n  });\n\n  return importFrom(data, context);\n};\n\nfunction importFrom(data, context) {\n  if (context.shallow) {\n    context.shallow = false;\n    context.done.push(data);\n    return processNext(context);\n  }\n\n  var nextStart = 0;\n  var nextEnd = 0;\n  var cursor = 0;\n  var isComment = commentScanner(data);\n\n  for (; nextEnd < data.length;) {\n    nextStart = nextImportAt(data, cursor);\n    if (nextStart == -1)\n      break;\n\n    if (isComment(nextStart)) {\n      cursor = nextStart + 1;\n      continue;\n    }\n\n    nextEnd = data.indexOf(';', nextStart);\n    if (nextEnd == -1) {\n      cursor = data.length;\n      data = '';\n      break;\n    }\n\n    var noImportPart = data.substring(0, nextStart);\n    context.done.push(noImportPart);\n    context.left.unshift([data.substring(nextEnd + 1), override(context, { shallow: false })]);\n    context.afterContent = hasContent(noImportPart);\n    return inline(data, nextStart, nextEnd, context);\n  }\n\n  // no @import matched in current data\n  context.done.push(data);\n  return processNext(context);\n}\n\nfunction rebaseMap(data, source) {\n  return data.replace(MAP_MARKER, function (match, sourceMapUrl) {\n    return REMOTE_RESOURCE.test(sourceMapUrl) ?\n      match :\n      match.replace(sourceMapUrl, url.resolve(source, sourceMapUrl));\n  });\n}\n\nfunction nextImportAt(data, cursor) {\n  var nextLowerCase = data.indexOf('@import', cursor);\n  var nextUpperCase = data.indexOf('@IMPORT', cursor);\n\n  if (nextLowerCase > -1 && nextUpperCase == -1)\n    return nextLowerCase;\n  else if (nextLowerCase == -1 && nextUpperCase > -1)\n    return nextUpperCase;\n  else\n    return Math.min(nextLowerCase, nextUpperCase);\n}\n\nfunction processNext(context) {\n  return context.left.length > 0 ?\n    importFrom.apply(null, context.left.shift()) :\n    context.whenDone(context.done.join(''));\n}\n\nfunction commentScanner(data) {\n  var commentRegex = /(\\/\\*(?!\\*\\/)[\\s\\S]*?\\*\\/)/;\n  var lastStartIndex = 0;\n  var lastEndIndex = 0;\n  var noComments = false;\n\n  // test whether an index is located within a comment\n  return function scanner(idx) {\n    var comment;\n    var localStartIndex = 0;\n    var localEndIndex = 0;\n    var globalStartIndex = 0;\n    var globalEndIndex = 0;\n\n    // return if we know there are no more comments\n    if (noComments)\n      return false;\n\n    do {\n      // idx can be still within last matched comment (many @import statements inside one comment)\n      if (idx > lastStartIndex && idx < lastEndIndex)\n        return true;\n\n      comment = data.match(commentRegex);\n\n      if (!comment) {\n        noComments = true;\n        return false;\n      }\n\n      // get the indexes relative to the current data chunk\n      lastStartIndex = localStartIndex = comment.index;\n      localEndIndex = localStartIndex + comment[0].length;\n\n      // calculate the indexes relative to the full original data\n      globalEndIndex = localEndIndex + lastEndIndex;\n      globalStartIndex = globalEndIndex - comment[0].length;\n\n      // chop off data up to and including current comment block\n      data = data.substring(localEndIndex);\n      lastEndIndex = globalEndIndex;\n    } while (globalEndIndex < idx);\n\n    return globalEndIndex > idx && idx > globalStartIndex;\n  };\n}\n\nfunction hasContent(data) {\n  var isComment = commentScanner(data);\n  var firstContentIdx = -1;\n  while (true) {\n    firstContentIdx = data.indexOf('{', firstContentIdx + 1);\n    if (firstContentIdx == -1 || !isComment(firstContentIdx))\n      break;\n  }\n\n  return firstContentIdx > -1;\n}\n\nfunction inline(data, nextStart, nextEnd, context) {\n  context.shallow = data.indexOf('@shallow') > 0;\n\n  var importDeclaration = data\n    .substring(nextImportAt(data, nextStart) + '@import'.length + 1, nextEnd)\n    .replace(/@shallow\\)$/, ')')\n    .trim();\n\n  var viaUrl = importDeclaration.indexOf('url(') === 0;\n  var urlStartsAt = viaUrl ? 4 : 0;\n  var isQuoted = /^['\"]/.exec(importDeclaration.substring(urlStartsAt, urlStartsAt + 2));\n  var urlEndsAt = isQuoted ?\n    importDeclaration.indexOf(isQuoted[0], urlStartsAt + 1) :\n    split(importDeclaration, ' ')[0].length - (viaUrl ? 1 : 0);\n\n  var importedFile = importDeclaration\n    .substring(urlStartsAt, urlEndsAt)\n    .replace(/['\"]/g, '')\n    .replace(/\\)$/, '')\n    .trim();\n\n  var mediaQuery = importDeclaration\n    .substring(urlEndsAt + 1)\n    .replace(/^\\)/, '')\n    .trim();\n\n  var isRemote = context.isRemote || REMOTE_RESOURCE.test(importedFile);\n\n  if (isRemote && (context.localOnly || !allowedResource(importedFile, true, context.imports))) {\n    if (context.afterContent || hasContent(context.done.join('')))\n      context.warnings.push('Ignoring remote @import of \"' + importedFile + '\" as no callback given.');\n    else\n      restoreImport(importedFile, mediaQuery, context);\n\n    return processNext(context);\n  }\n\n  if (!isRemote && !allowedResource(importedFile, false, context.imports)) {\n    if (context.afterImport)\n      context.warnings.push('Ignoring local @import of \"' + importedFile + '\" as after other inlined content.');\n    else\n      restoreImport(importedFile, mediaQuery, context);\n    return processNext(context);\n  }\n\n  if (!isRemote && context.afterContent) {\n    context.warnings.push('Ignoring local @import of \"' + importedFile + '\" as after other CSS content.');\n    return processNext(context);\n  }\n\n  var method = isRemote ? inlineRemoteResource : inlineLocalResource;\n  return method(importedFile, mediaQuery, context);\n}\n\nfunction allowedResource(importedFile, isRemote, rules) {\n  if (rules.length === 0)\n    return false;\n\n  if (isRemote && NO_PROTOCOL_RESOURCE.test(importedFile))\n    importedFile = 'http:' + importedFile;\n\n  var match = isRemote ?\n    url.parse(importedFile).host :\n    importedFile;\n  var allowed = true;\n\n  for (var i = 0; i < rules.length; i++) {\n    var rule = rules[i];\n\n    if (rule == 'all')\n      allowed = true;\n    else if (isRemote && rule == 'local')\n      allowed = false;\n    else if (isRemote && rule == 'remote')\n      allowed = true;\n    else if (!isRemote && rule == 'remote')\n      allowed = false;\n    else if (!isRemote && rule == 'local')\n      allowed = true;\n    else if (rule[0] == '!' && rule.substring(1) === match)\n      allowed = false;\n  }\n\n  return allowed;\n}\n\nfunction inlineRemoteResource(importedFile, mediaQuery, context) {\n  var importedUrl = REMOTE_RESOURCE.test(importedFile) ?\n    importedFile :\n    url.resolve(context.relativeTo, importedFile);\n  var originalUrl = importedUrl;\n\n  if (NO_PROTOCOL_RESOURCE.test(importedUrl))\n    importedUrl = 'http:' + importedUrl;\n\n  if (context.visited.indexOf(importedUrl) > -1)\n    return processNext(context);\n\n\n  if (context.debug)\n    console.error('Inlining remote stylesheet: ' + importedUrl);\n\n  context.visited.push(importedUrl);\n\n  var proxyProtocol = context.inliner.request.protocol || context.inliner.request.hostname;\n  var get =\n    ((proxyProtocol && proxyProtocol.indexOf('https://') !== 0 ) ||\n     importedUrl.indexOf('http://') === 0) ?\n    http.get :\n    https.get;\n\n  var errorHandled = false;\n  function handleError(message) {\n    if (errorHandled)\n      return;\n\n    errorHandled = true;\n    context.errors.push('Broken @import declaration of \"' + importedUrl + '\" - ' + message);\n    restoreImport(importedUrl, mediaQuery, context);\n\n    process.nextTick(function () {\n      processNext(context);\n    });\n  }\n\n  var requestOptions = override(url.parse(importedUrl), context.inliner.request);\n  if (context.inliner.request.hostname !== undefined) {\n\n    //overwrite as we always expect a http proxy currently\n    requestOptions.protocol = context.inliner.request.protocol || 'http:';\n    requestOptions.path = requestOptions.href;\n  }\n\n\n  get(requestOptions, function (res) {\n    if (res.statusCode < 200 || res.statusCode > 399) {\n      return handleError('error ' + res.statusCode);\n    } else if (res.statusCode > 299) {\n      var movedUrl = url.resolve(importedUrl, res.headers.location);\n      return inlineRemoteResource(movedUrl, mediaQuery, context);\n    }\n\n    var chunks = [];\n    var parsedUrl = url.parse(importedUrl);\n    res.on('data', function (chunk) {\n      chunks.push(chunk.toString());\n    });\n    res.on('end', function () {\n      var importedData = chunks.join('');\n      if (context.rebase)\n        importedData = rewriteUrls(importedData, { toBase: originalUrl }, context);\n      context.sourceReader.trackSource(importedUrl, importedData);\n      importedData = context.sourceTracker.store(importedUrl, importedData);\n      importedData = rebaseMap(importedData, importedUrl);\n\n      if (mediaQuery.length > 0)\n        importedData = '@media ' + mediaQuery + '{' + importedData + '}';\n\n      context.afterImport = true;\n\n      var newContext = override(context, {\n        isRemote: true,\n        relativeTo: parsedUrl.protocol + '//' + parsedUrl.host + parsedUrl.pathname\n      });\n\n      process.nextTick(function () {\n        importFrom(importedData, newContext);\n      });\n    });\n  })\n  .on('error', function (res) {\n    handleError(res.message);\n  })\n  .on('timeout', function () {\n    handleError('timeout');\n  })\n  .setTimeout(context.inliner.timeout);\n}\n\nfunction inlineLocalResource(importedFile, mediaQuery, context) {\n  var relativeTo = importedFile[0] == '/' ?\n    context.root :\n    context.relativeTo;\n\n  var fullPath = path.resolve(path.join(relativeTo, importedFile));\n\n  if (!fs.existsSync(fullPath) || !fs.statSync(fullPath).isFile()) {\n    context.errors.push('Broken @import declaration of \"' + importedFile + '\"');\n    return processNext(context);\n  }\n\n  if (context.visited.indexOf(fullPath) > -1)\n    return processNext(context);\n\n\n  if (context.debug)\n    console.error('Inlining local stylesheet: ' + fullPath);\n\n  context.visited.push(fullPath);\n\n  var importRelativeTo = path.dirname(fullPath);\n  var importedData = fs.readFileSync(fullPath, 'utf8');\n  if (context.rebase) {\n    var rewriteOptions = {\n      relative: true,\n      fromBase: importRelativeTo,\n      toBase: context.baseRelativeTo\n    };\n    importedData = rewriteUrls(importedData, rewriteOptions, context);\n  }\n\n  var relativePath = path.relative(context.root, fullPath);\n  context.sourceReader.trackSource(relativePath, importedData);\n  importedData = context.sourceTracker.store(relativePath, importedData);\n\n  if (mediaQuery.length > 0)\n    importedData = '@media ' + mediaQuery + '{' + importedData + '}';\n\n  context.afterImport = true;\n\n  var newContext = override(context, {\n    relativeTo: importRelativeTo\n  });\n\n  return importFrom(importedData, newContext);\n}\n\nfunction restoreImport(importedUrl, mediaQuery, context) {\n  var restoredImport = '@import url(' + importedUrl + ')' + (mediaQuery.length > 0 ? ' ' + mediaQuery : '') + ';';\n  context.done.push(restoredImport);\n}\n\nmodule.exports = ImportInliner;\n","var path = require('path');\nvar url = require('url');\n\nvar reduceUrls = require('./reduce');\n\nvar isWindows = process.platform == 'win32';\n\nfunction isAbsolute(uri) {\n  return uri[0] == '/';\n}\n\nfunction isSVGMarker(uri) {\n  return uri[0] == '#';\n}\n\nfunction isEscaped(uri) {\n  return uri.indexOf('__ESCAPED_URL_CLEAN_CSS__') === 0;\n}\n\nfunction isInternal(uri) {\n  return /^\\w+:\\w+/.test(uri);\n}\n\nfunction isRemote(uri) {\n  return /^[^:]+?:\\/\\//.test(uri) || uri.indexOf('//') === 0;\n}\n\nfunction isSameOrigin(uri1, uri2) {\n  return url.parse(uri1).protocol == url.parse(uri2).protocol &&\n    url.parse(uri1).host == url.parse(uri2).host;\n}\n\nfunction isImport(uri) {\n  return uri.lastIndexOf('.css') === uri.length - 4;\n}\n\nfunction isData(uri) {\n  return uri.indexOf('data:') === 0;\n}\n\nfunction absolute(uri, options) {\n  return path\n    .resolve(path.join(options.fromBase || '', uri))\n    .replace(options.toBase, '');\n}\n\nfunction relative(uri, options) {\n  return path.relative(options.toBase, path.join(options.fromBase || '', uri));\n}\n\nfunction normalize(uri) {\n  return isWindows ? uri.replace(/\\\\/g, '/') : uri;\n}\n\nfunction rebase(uri, options) {\n  if (isAbsolute(uri) || isSVGMarker(uri) || isEscaped(uri) || isInternal(uri))\n    return uri;\n\n  if (options.rebase === false && !isImport(uri))\n    return uri;\n\n  if (!options.imports && isImport(uri))\n    return uri;\n\n  if (isData(uri))\n    return '\\'' + uri + '\\'';\n\n  if (isRemote(uri) && !isRemote(options.toBase))\n    return uri;\n\n  if (isRemote(uri) && !isSameOrigin(uri, options.toBase))\n    return uri;\n\n  if (!isRemote(uri) && isRemote(options.toBase))\n    return url.resolve(options.toBase, uri);\n\n  return options.absolute ?\n    normalize(absolute(uri, options)) :\n    normalize(relative(uri, options));\n}\n\nfunction quoteFor(url) {\n  if (url.indexOf('\\'') > -1)\n    return '\"';\n  else if (url.indexOf('\"') > -1)\n    return '\\'';\n  else if (/\\s/.test(url) || /[\\(\\)]/.test(url))\n    return '\\'';\n  else\n    return '';\n}\n\nfunction rewriteUrls(data, options, context) {\n  return reduceUrls(data, context, function (originUrl, tempData) {\n    var url = originUrl.replace(/^(url\\()?\\s*['\"]?|['\"]?\\s*\\)?$/g, '');\n    var match = originUrl.match(/^(url\\()?\\s*(['\"]).*?(['\"])\\s*\\)?$/);\n    var quote;\n    if (!!options.urlQuotes && match && match[2] === match[3]) {\n      quote = match[2];\n    } else {\n      quote = quoteFor(url);\n    }\n    tempData.push('url(' + quote + rebase(url, options) + quote + ')');\n  });\n}\n\nmodule.exports = rewriteUrls;\n","var split = require('../utils/split');\n\nvar URL_PREFIX = 'url(';\nvar UPPERCASE_URL_PREFIX = 'URL(';\nvar URL_SUFFIX = ')';\nvar SINGLE_QUOTE_URL_SUFFIX = '\\')';\nvar DOUBLE_QUOTE_URL_SUFFIX = '\")';\n\nvar DATA_URI_PREFIX_PATTERN = /^\\s*['\"]?\\s*data:/;\nvar DATA_URI_TRAILER_PATTERN = /[\\s\\};,\\/!]/;\n\nvar IMPORT_URL_PREFIX = '@import';\nvar UPPERCASE_IMPORT_URL_PREFIX = '@IMPORT';\n\nvar COMMENT_END_MARKER = /\\*\\//;\n\nfunction byUrl(data, context, callback) {\n  var nextStart = 0;\n  var nextStartUpperCase = 0;\n  var nextEnd = 0;\n  var firstMatch;\n  var isDataURI = false;\n  var cursor = 0;\n  var tempData = [];\n  var hasUppercaseUrl = data.indexOf(UPPERCASE_URL_PREFIX) > -1;\n\n  for (; nextEnd < data.length;) {\n    nextStart = data.indexOf(URL_PREFIX, nextEnd);\n    nextStartUpperCase = hasUppercaseUrl ? data.indexOf(UPPERCASE_URL_PREFIX, nextEnd) : -1;\n    if (nextStart == -1 && nextStartUpperCase == -1)\n      break;\n\n    if (nextStart == -1 && nextStartUpperCase > -1)\n      nextStart = nextStartUpperCase;\n\n    if (data[nextStart + URL_PREFIX.length] == '\"') {\n      nextEnd = data.indexOf(DOUBLE_QUOTE_URL_SUFFIX, nextStart);\n    } else if (data[nextStart + URL_PREFIX.length] == '\\'') {\n      nextEnd = data.indexOf(SINGLE_QUOTE_URL_SUFFIX, nextStart);\n    } else {\n      isDataURI = DATA_URI_PREFIX_PATTERN.test(data.substring(nextStart + URL_PREFIX.length));\n\n      if (isDataURI) {\n        firstMatch = split(data.substring(nextStart), DATA_URI_TRAILER_PATTERN, false, '(', ')', true).pop();\n\n        if (firstMatch && firstMatch[firstMatch.length - 1] == URL_SUFFIX) {\n          nextEnd = nextStart + firstMatch.length - URL_SUFFIX.length;\n        } else {\n          nextEnd = -1;\n        }\n      } else {\n        nextEnd = data.indexOf(URL_SUFFIX, nextStart);\n      }\n    }\n\n\n    // Following lines are a safety mechanism to ensure\n    // incorrectly terminated urls are processed correctly.\n    if (nextEnd == -1) {\n      nextEnd = data.indexOf('}', nextStart);\n\n      if (nextEnd == -1)\n        nextEnd = data.length;\n      else\n        nextEnd--;\n\n      context.warnings.push('Broken URL declaration: \\'' + data.substring(nextStart, nextEnd + 1) + '\\'.');\n    } else {\n      if (data[nextEnd] != URL_SUFFIX)\n        nextEnd = data.indexOf(URL_SUFFIX, nextEnd);\n    }\n\n    tempData.push(data.substring(cursor, nextStart));\n\n    var url = data.substring(nextStart, nextEnd + 1);\n    callback(url, tempData);\n\n    cursor = nextEnd + 1;\n  }\n\n  return tempData.length > 0 ?\n    tempData.join('') + data.substring(cursor, data.length) :\n    data;\n}\n\nfunction byImport(data, context, callback) {\n  var nextImport = 0;\n  var nextImportUpperCase = 0;\n  var nextStart = 0;\n  var nextEnd = 0;\n  var cursor = 0;\n  var tempData = [];\n  var nextSingleQuote = 0;\n  var nextDoubleQuote = 0;\n  var untilNextQuote;\n  var withQuote;\n  var SINGLE_QUOTE = '\\'';\n  var DOUBLE_QUOTE = '\"';\n\n  for (; nextEnd < data.length;) {\n    nextImport = data.indexOf(IMPORT_URL_PREFIX, nextEnd);\n    nextImportUpperCase = data.indexOf(UPPERCASE_IMPORT_URL_PREFIX, nextEnd);\n    if (nextImport == -1 && nextImportUpperCase == -1)\n      break;\n\n    if (nextImport > -1 && nextImportUpperCase > -1 && nextImportUpperCase < nextImport)\n      nextImport = nextImportUpperCase;\n\n    nextSingleQuote = data.indexOf(SINGLE_QUOTE, nextImport);\n    nextDoubleQuote = data.indexOf(DOUBLE_QUOTE, nextImport);\n\n    if (nextSingleQuote > -1 && nextDoubleQuote > -1 && nextSingleQuote < nextDoubleQuote) {\n      nextStart = nextSingleQuote;\n      withQuote = SINGLE_QUOTE;\n    } else if (nextSingleQuote > -1 && nextDoubleQuote > -1 && nextSingleQuote > nextDoubleQuote) {\n      nextStart = nextDoubleQuote;\n      withQuote = DOUBLE_QUOTE;\n    } else if (nextSingleQuote > -1) {\n      nextStart = nextSingleQuote;\n      withQuote = SINGLE_QUOTE;\n    } else if (nextDoubleQuote > -1) {\n      nextStart = nextDoubleQuote;\n      withQuote = DOUBLE_QUOTE;\n    } else {\n      break;\n    }\n\n    tempData.push(data.substring(cursor, nextStart));\n    nextEnd = data.indexOf(withQuote, nextStart + 1);\n\n    untilNextQuote = data.substring(nextImport, nextEnd);\n    if (nextEnd == -1 || /^@import\\s+(url\\(|__ESCAPED)/i.test(untilNextQuote) || COMMENT_END_MARKER.test(untilNextQuote)) {\n      cursor = nextStart;\n      break;\n    }\n\n    var url = data.substring(nextStart, nextEnd + 1);\n    callback(url, tempData);\n\n    cursor = nextEnd + 1;\n  }\n\n  return tempData.length > 0 ?\n    tempData.join('') + data.substring(cursor, data.length) :\n    data;\n}\n\nfunction reduceAll(data, context, callback) {\n  data = byUrl(data, context, callback);\n  data = byImport(data, context, callback);\n  return data;\n}\n\nmodule.exports = reduceAll;\n","function split(value, separator, includeSeparator, openLevel, closeLevel, firstOnly) {\n  var withRegex = typeof separator != 'string';\n  var hasSeparator = withRegex ?\n    separator.test(value) :\n    value.indexOf(separator);\n\n  if (!hasSeparator)\n    return [value];\n\n  openLevel = openLevel || '(';\n  closeLevel = closeLevel || ')';\n\n  if (value.indexOf(openLevel) == -1 && !includeSeparator && !firstOnly)\n    return value.split(separator);\n\n  var BACKSLASH = '\\\\';\n  var isEscaped = false;\n  var wasEscaped = false;\n  var level = 0;\n  var cursor = 0;\n  var lastStart = 0;\n  var len = value.length;\n  var tokens = [];\n\n  while (cursor < len) {\n    isEscaped = value[cursor] == BACKSLASH;\n\n    if (wasEscaped) {\n      // no-op\n    } else\n    if (value[cursor] == openLevel) {\n      level++;\n    } else if (value[cursor] == closeLevel) {\n      level--;\n    }\n\n    if (!wasEscaped && level === 0 && cursor > 0 && cursor + 1 < len && (withRegex ? separator.test(value[cursor]) : value[cursor] == separator)) {\n      tokens.push(value.substring(lastStart, cursor + (includeSeparator ? 1 : 0)));\n      lastStart = cursor + 1;\n\n      if (firstOnly && tokens.length == 1) {\n        break;\n      }\n    }\n\n    wasEscaped = isEscaped;\n    cursor++;\n  }\n\n  if (lastStart < cursor + 1) {\n    var lastValue = value.substring(lastStart);\n    var lastCharacter = lastValue[lastValue.length - 1];\n    if (!includeSeparator && (withRegex ? separator.test(lastCharacter) : lastCharacter == separator))\n      lastValue = lastValue.substring(0, lastValue.length - 1);\n\n    tokens.push(lastValue);\n  }\n\n  return tokens;\n}\n\nmodule.exports = split;\n","module.exports = {\n  override: function (source1, source2) {\n    var target = {};\n    for (var key1 in source1)\n      target[key1] = source1[key1];\n    for (var key2 in source2)\n      target[key2] = source2[key2];\n\n    return target;\n  }\n};\n","var path = require('path');\n\nvar rewriteUrls = require('./rewrite');\n\nfunction rebaseUrls(data, context) {\n  var rebaseOpts = {\n    absolute: context.options.explicitRoot,\n    relative: !context.options.explicitRoot && context.options.explicitTarget,\n    fromBase: context.options.relativeTo\n  };\n\n  if (!rebaseOpts.absolute && !rebaseOpts.relative)\n    return data;\n\n  if (rebaseOpts.absolute && context.options.explicitTarget)\n    context.warnings.push('Both \\'root\\' and output file given so rebasing URLs as absolute paths');\n\n  if (rebaseOpts.absolute)\n    rebaseOpts.toBase = path.resolve(context.options.root);\n\n  if (rebaseOpts.relative)\n    rebaseOpts.toBase = path.resolve(context.options.target);\n\n  if (!rebaseOpts.fromBase || !rebaseOpts.toBase)\n    return data;\n\n  return rewriteUrls(data, rebaseOpts, context);\n}\n\nmodule.exports = rebaseUrls;\n","var extractProperties = require('./extract-properties');\nvar extractSelectors = require('./extract-selectors');\nvar track = require('../source-maps/track');\nvar split = require('../utils/split');\n\nvar path = require('path');\n\nvar flatBlock = /(@(font\\-face|page|\\-ms\\-viewport|\\-o\\-viewport|viewport|counter\\-style)|\\\\@.+?)/;\nvar BACKSLASH = '\\\\';\n\nfunction tokenize(data, outerContext) {\n  var chunks = split(normalize(data), '}', true, '{', '}');\n  if (chunks.length === 0)\n    return [];\n\n  var context = {\n    chunk: chunks.shift(),\n    chunks: chunks,\n    column: 0,\n    cursor: 0,\n    line: 1,\n    mode: 'top',\n    resolvePath: outerContext.options.explicitTarget ?\n      relativePathResolver(outerContext.options.root, outerContext.options.target) :\n      null,\n    source: undefined,\n    sourceMap: outerContext.options.sourceMap,\n    sourceMapInlineSources: outerContext.options.sourceMapInlineSources,\n    sourceMapTracker: outerContext.inputSourceMapTracker,\n    sourceReader: outerContext.sourceReader,\n    sourceTracker: outerContext.sourceTracker,\n    state: [],\n    track: outerContext.options.sourceMap ?\n      function (data, snapshotMetadata, fallbacks) { return [[track(data, context, snapshotMetadata, fallbacks)]]; } :\n      function () { return []; },\n    warnings: outerContext.warnings\n  };\n\n  return intoTokens(context);\n}\n\nfunction normalize(data) {\n  return data.replace(/\\r\\n/g, '\\n');\n}\n\nfunction relativePathResolver(root, target) {\n  var rebaseTo = path.relative(root, target);\n\n  return function (relativeTo, sourcePath) {\n    return relativeTo != sourcePath ?\n      path.normalize(path.join(path.relative(rebaseTo, path.dirname(relativeTo)), sourcePath)) :\n      sourcePath;\n  };\n}\n\nfunction whatsNext(context) {\n  var mode = context.mode;\n  var chunk = context.chunk;\n  var closest;\n\n  if (chunk.length == context.cursor) {\n    if (context.chunks.length === 0)\n      return null;\n\n    context.chunk = chunk = context.chunks.shift();\n    context.cursor = 0;\n  }\n\n  if (mode == 'body') {\n    if (chunk[context.cursor] == '}')\n      return [context.cursor, 'bodyEnd'];\n\n    if (chunk.indexOf('}', context.cursor) == -1)\n      return null;\n\n    closest = context.cursor + split(chunk.substring(context.cursor - 1), '}', true, '{', '}')[0].length - 2;\n    return [closest, 'bodyEnd'];\n  }\n\n  var nextSpecial = nextAt(context, '@');\n  var nextEscape = chunk.indexOf('__ESCAPED_', context.cursor);\n  var nextBodyStart = nextAt(context, '{');\n  var nextBodyEnd = nextAt(context, '}');\n\n  if (nextSpecial > -1 && context.cursor > 0 && !/\\s|\\{|\\}|\\/|_|,|;/.test(chunk.substring(nextSpecial - 1, nextSpecial))) {\n    nextSpecial = -1;\n  }\n\n  if (nextEscape > -1 && /\\S/.test(chunk.substring(context.cursor, nextEscape)))\n    nextEscape = -1;\n\n  closest = nextSpecial;\n  if (closest == -1 || (nextEscape > -1 && nextEscape < closest))\n    closest = nextEscape;\n  if (closest == -1 || (nextBodyStart > -1 && nextBodyStart < closest))\n    closest = nextBodyStart;\n  if (closest == -1 || (nextBodyEnd > -1 && nextBodyEnd < closest))\n    closest = nextBodyEnd;\n\n  if (closest == -1)\n    return;\n  if (nextEscape === closest)\n    return [closest, 'escape'];\n  if (nextBodyStart === closest)\n    return [closest, 'bodyStart'];\n  if (nextBodyEnd === closest)\n    return [closest, 'bodyEnd'];\n  if (nextSpecial === closest)\n    return [closest, 'special'];\n}\n\nfunction nextAt(context, character) {\n  var startAt = context.cursor;\n  var chunk = context.chunk;\n  var position;\n\n  while ((position = chunk.indexOf(character, startAt)) > -1) {\n    if (isEscaped(chunk, position)) {\n      startAt = position + 1;\n    } else {\n      return position;\n    }\n  }\n\n  return -1;\n}\n\nfunction isEscaped(chunk, position) {\n  var startAt = position;\n  var backslashCount = 0;\n\n  while (startAt > 0 && chunk[startAt - 1] == BACKSLASH) {\n    backslashCount++;\n    startAt--;\n  }\n\n  return backslashCount % 2 !== 0;\n}\n\nfunction intoTokens(context) {\n  var chunk = context.chunk;\n  var tokenized = [];\n  var newToken;\n  var value;\n\n  while (true) {\n    var next = whatsNext(context);\n    if (!next) {\n      var whatsLeft = context.chunk.substring(context.cursor);\n      if (whatsLeft.trim().length > 0) {\n        if (context.mode == 'body') {\n          context.warnings.push('Missing \\'}\\' after \\'' + whatsLeft + '\\'. Ignoring.');\n        } else {\n          tokenized.push(['text', [whatsLeft]]);\n        }\n        context.cursor += whatsLeft.length;\n      }\n      break;\n    }\n\n    var nextSpecial = next[0];\n    var what = next[1];\n    var nextEnd;\n    var oldMode;\n\n    chunk = context.chunk;\n\n    if (context.cursor != nextSpecial && what != 'bodyEnd') {\n      var spacing = chunk.substring(context.cursor, nextSpecial);\n      var leadingWhitespace = /^\\s+/.exec(spacing);\n\n      if (leadingWhitespace) {\n        context.cursor += leadingWhitespace[0].length;\n        context.track(leadingWhitespace[0]);\n      }\n    }\n\n    if (what == 'special') {\n      var firstOpenBraceAt = chunk.indexOf('{', nextSpecial);\n      var firstSemicolonAt = chunk.indexOf(';', nextSpecial);\n      var isSingle = firstSemicolonAt > -1 && (firstOpenBraceAt == -1 || firstSemicolonAt < firstOpenBraceAt);\n      var isBroken = firstOpenBraceAt == -1 && firstSemicolonAt == -1;\n      if (isBroken) {\n        context.warnings.push('Broken declaration: \\'' + chunk.substring(context.cursor) +  '\\'.');\n        context.cursor = chunk.length;\n      } else if (isSingle) {\n        nextEnd = chunk.indexOf(';', nextSpecial + 1);\n        value = chunk.substring(context.cursor, nextEnd + 1);\n\n        tokenized.push([\n          'at-rule',\n          [value].concat(context.track(value, true))\n        ]);\n\n        context.track(';');\n        context.cursor = nextEnd + 1;\n      } else {\n        nextEnd = chunk.indexOf('{', nextSpecial + 1);\n        value = chunk.substring(context.cursor, nextEnd);\n\n        var trimmedValue = value.trim();\n        var isFlat = flatBlock.test(trimmedValue);\n        oldMode = context.mode;\n        context.cursor = nextEnd + 1;\n        context.mode = isFlat ? 'body' : 'block';\n\n        newToken = [\n          isFlat ? 'flat-block' : 'block'\n        ];\n\n        newToken.push([trimmedValue].concat(context.track(value, true)));\n        context.track('{');\n        newToken.push(intoTokens(context));\n\n        if (typeof newToken[2] == 'string')\n          newToken[2] = extractProperties(newToken[2], [[trimmedValue]], context);\n\n        context.mode = oldMode;\n        context.track('}');\n\n        tokenized.push(newToken);\n      }\n    } else if (what == 'escape') {\n      nextEnd = chunk.indexOf('__', nextSpecial + 1);\n      var escaped = chunk.substring(context.cursor, nextEnd + 2);\n      var isStartSourceMarker = !!context.sourceTracker.nextStart(escaped);\n      var isEndSourceMarker = !!context.sourceTracker.nextEnd(escaped);\n\n      if (isStartSourceMarker) {\n        context.track(escaped);\n        context.state.push({\n          source: context.source,\n          line: context.line,\n          column: context.column\n        });\n        context.source = context.sourceTracker.nextStart(escaped).filename;\n        context.line = 1;\n        context.column = 0;\n      } else if (isEndSourceMarker) {\n        var oldState = context.state.pop();\n        context.source = oldState.source;\n        context.line = oldState.line;\n        context.column = oldState.column;\n        context.track(escaped);\n      } else {\n        if (escaped.indexOf('__ESCAPED_COMMENT_SPECIAL') === 0)\n          tokenized.push(['text', [escaped]]);\n\n        context.track(escaped);\n      }\n\n      context.cursor = nextEnd + 2;\n    } else if (what == 'bodyStart') {\n      var selectors = extractSelectors(chunk.substring(context.cursor, nextSpecial), context);\n\n      oldMode = context.mode;\n      context.cursor = nextSpecial + 1;\n      context.mode = 'body';\n\n      var body = extractProperties(intoTokens(context), selectors, context);\n\n      context.track('{');\n      context.mode = oldMode;\n\n      tokenized.push([\n        'selector',\n        selectors,\n        body\n      ]);\n    } else if (what == 'bodyEnd') {\n      // extra closing brace at the top level can be safely ignored\n      if (context.mode == 'top') {\n        var at = context.cursor;\n        var warning = chunk[context.cursor] == '}' ?\n          'Unexpected \\'}\\' in \\'' + chunk.substring(at - 20, at + 20) + '\\'. Ignoring.' :\n          'Unexpected content: \\'' + chunk.substring(at, nextSpecial + 1) + '\\'. Ignoring.';\n\n        context.warnings.push(warning);\n        context.cursor = nextSpecial + 1;\n        continue;\n      }\n\n      if (context.mode == 'block')\n        context.track(chunk.substring(context.cursor, nextSpecial));\n      if (context.mode != 'block')\n        tokenized = chunk.substring(context.cursor, nextSpecial);\n\n      context.cursor = nextSpecial + 1;\n\n      break;\n    }\n  }\n\n  return tokenized;\n}\n\nmodule.exports = tokenize;\n","var split = require('../utils/split');\n\nvar COMMA = ',';\nvar FORWARD_SLASH = '/';\n\nvar AT_RULE = 'at-rule';\n\nvar IMPORTANT_WORD = 'important';\nvar IMPORTANT_TOKEN = '!'+IMPORTANT_WORD;\nvar IMPORTANT_WORD_MATCH = new RegExp('^'+IMPORTANT_WORD+'$', 'i');\nvar IMPORTANT_TOKEN_MATCH = new RegExp('^'+IMPORTANT_TOKEN+'$', 'i');\n\nfunction selectorName(value) {\n  return value[0];\n}\n\nfunction noop() {}\n\nfunction withoutComments(string, into, heading, context) {\n  var matcher = heading ? /^__ESCAPED_COMMENT_/ : /__ESCAPED_COMMENT_/;\n  var track = heading ? context.track : noop; // don't track when comment not in a heading as we do it later in `trackComments`\n\n  while (matcher.test(string)) {\n    var startOfComment = string.indexOf('__');\n    var endOfComment = string.indexOf('__', startOfComment + 1) + 2;\n    var comment = string.substring(startOfComment, endOfComment);\n    string = string.substring(0, startOfComment) + string.substring(endOfComment);\n\n    track(comment);\n    into.push(comment);\n  }\n\n  return string;\n}\n\nfunction withoutHeadingComments(string, into, context) {\n  return withoutComments(string, into, true, context);\n}\n\nfunction withoutInnerComments(string, into, context) {\n  return withoutComments(string, into, false, context);\n}\n\nfunction trackComments(comments, into, context) {\n  for (var i = 0, l = comments.length; i < l; i++) {\n    context.track(comments[i]);\n    into.push(comments[i]);\n  }\n}\n\nfunction extractProperties(string, selectors, context) {\n  var list = [];\n  var innerComments = [];\n  var valueSeparator = /[\\s,\\/]/;\n\n  if (typeof string != 'string')\n    return [];\n\n  if (string.indexOf(')') > -1)\n    string = string.replace(/\\)([^\\s_;:,\\)])/g, context.sourceMap ? ') __ESCAPED_COMMENT_CLEAN_CSS(0,-1)__ $1' : ') $1');\n\n  if (string.indexOf('ESCAPED_URL_CLEAN_CSS') > -1)\n    string = string.replace(/(ESCAPED_URL_CLEAN_CSS[^_]+?__)/g, context.sourceMap ? '$1 __ESCAPED_COMMENT_CLEAN_CSS(0,-1)__ ' : '$1 ');\n\n  var candidates = split(string, ';', false, '{', '}');\n\n  for (var i = 0, l = candidates.length; i < l; i++) {\n    var candidate = candidates[i];\n    var firstColonAt = candidate.indexOf(':');\n\n    var atRule = candidate.trim()[0] == '@';\n    if (atRule) {\n      context.track(candidate);\n      list.push([AT_RULE, candidate.trim()]);\n      continue;\n    }\n\n    if (firstColonAt == -1) {\n      context.track(candidate);\n      if (candidate.indexOf('__ESCAPED_COMMENT_SPECIAL') > -1)\n        list.push(candidate.trim());\n      continue;\n    }\n\n    if (candidate.indexOf('{') > 0 && candidate.indexOf('{') < firstColonAt) {\n      context.track(candidate);\n      continue;\n    }\n\n    var body = [];\n    var name = candidate.substring(0, firstColonAt);\n\n    innerComments = [];\n\n    if (name.indexOf('__ESCAPED_COMMENT') > -1)\n      name = withoutHeadingComments(name, list, context);\n\n    if (name.indexOf('__ESCAPED_COMMENT') > -1)\n      name = withoutInnerComments(name, innerComments, context);\n\n    body.push([name.trim()].concat(context.track(name, true)));\n    context.track(':');\n\n    trackComments(innerComments, list, context);\n\n    var firstBraceAt = candidate.indexOf('{');\n    var isVariable = name.trim().indexOf('--') === 0;\n    if (isVariable && firstBraceAt > 0) {\n      var blockPrefix = candidate.substring(firstColonAt + 1, firstBraceAt + 1);\n      var blockSuffix = candidate.substring(candidate.indexOf('}'));\n      var blockContent = candidate.substring(firstBraceAt + 1, candidate.length - blockSuffix.length);\n\n      context.track(blockPrefix);\n      body.push(extractProperties(blockContent, selectors, context));\n      list.push(body);\n      context.track(blockSuffix);\n      context.track(i < l - 1 ? ';' : '');\n\n      continue;\n    }\n\n    var values = split(candidate.substring(firstColonAt + 1), valueSeparator, true);\n\n    if (values.length == 1 && values[0] === '') {\n      context.warnings.push('Empty property \\'' + name + '\\' inside \\'' + selectors.filter(selectorName).join(',') + '\\' selector. Ignoring.');\n      continue;\n    }\n\n    for (var j = 0, m = values.length; j < m; j++) {\n      var value = values[j];\n      var trimmed = value.trim();\n\n      if (trimmed.length === 0)\n        continue;\n\n      var lastCharacter = trimmed[trimmed.length - 1];\n      var endsWithNonSpaceSeparator = trimmed.length > 1 && (lastCharacter == COMMA || lastCharacter == FORWARD_SLASH);\n\n      if (endsWithNonSpaceSeparator)\n        trimmed = trimmed.substring(0, trimmed.length - 1);\n\n      if (trimmed.indexOf('__ESCAPED_COMMENT_CLEAN_CSS(0,-') > -1) {\n        context.track(trimmed);\n        continue;\n      }\n\n      innerComments = [];\n\n      if (trimmed.indexOf('__ESCAPED_COMMENT') > -1)\n        trimmed = withoutHeadingComments(trimmed, list, context);\n\n      if (trimmed.indexOf('__ESCAPED_COMMENT') > -1)\n        trimmed = withoutInnerComments(trimmed, innerComments, context);\n\n      if (trimmed.length === 0) {\n        trackComments(innerComments, list, context);\n        continue;\n      }\n\n      var pos = body.length - 1;\n      if (IMPORTANT_WORD_MATCH.test(trimmed) && body[pos][0] == '!') {\n        context.track(trimmed);\n        body[pos - 1][0] += IMPORTANT_TOKEN;\n        body.pop();\n        continue;\n      }\n\n      if (IMPORTANT_TOKEN_MATCH.test(trimmed) || (IMPORTANT_WORD_MATCH.test(trimmed) && body[pos][0][body[pos][0].length - 1] == '!')) {\n        context.track(trimmed);\n        body[pos][0] += trimmed;\n        continue;\n      }\n\n      body.push([trimmed].concat(context.track(value, true)));\n\n      trackComments(innerComments, list, context);\n\n      if (endsWithNonSpaceSeparator) {\n        body.push([lastCharacter]);\n        context.track(lastCharacter);\n      }\n    }\n\n    if (i < l - 1)\n      context.track(';');\n\n    list.push(body);\n  }\n\n  return list;\n}\n\nmodule.exports = extractProperties;\n","var split = require('../utils/split');\n\nfunction extractSelectors(string, context) {\n  var list = [];\n  var metadata;\n  var selectors = split(string, ',');\n\n  for (var i = 0, l = selectors.length; i < l; i++) {\n    metadata = context.track(selectors[i], true, i);\n    context.track(',');\n    list.push([selectors[i].trim()].concat(metadata));\n  }\n\n  return list;\n}\n\nmodule.exports = extractSelectors;\n","var escapePrefix = '__ESCAPED_';\n\nfunction trackPrefix(value, context, interestingContent) {\n  if (!interestingContent && value.indexOf('\\n') == -1) {\n    if (value.indexOf(escapePrefix) === 0) {\n      return value;\n    } else {\n      context.column += value.length;\n      return;\n    }\n  }\n\n  var withoutContent = 0;\n  var split = value.split('\\n');\n  var total = split.length;\n  var shift = 0;\n\n  while (true) {\n    if (withoutContent == total - 1)\n      break;\n\n    var part = split[withoutContent];\n    if (/\\S/.test(part))\n      break;\n\n    shift += part.length + 1;\n    withoutContent++;\n  }\n\n  context.line += withoutContent;\n  context.column = withoutContent > 0 ? 0 : context.column;\n  context.column += /^(\\s)*/.exec(split[withoutContent])[0].length;\n\n  return value.substring(shift).trimLeft();\n}\n\nfunction sourceFor(originalMetadata, contextMetadata, context) {\n  var source = originalMetadata.source || contextMetadata.source;\n\n  if (source && context.resolvePath)\n    return context.resolvePath(contextMetadata.source, source);\n\n  return source;\n}\n\nfunction snapshot(data, context, fallbacks) {\n  var metadata = {\n    line: context.line,\n    column: context.column,\n    source: context.source\n  };\n  var sourceContent = null;\n  var sourceMetadata = context.sourceMapTracker.isTracking(metadata.source) ?\n    context.sourceMapTracker.originalPositionFor(metadata, data, fallbacks || 0) :\n    {};\n\n  metadata.line = sourceMetadata.line || metadata.line;\n  metadata.column = sourceMetadata.column || metadata.column;\n  metadata.source = sourceMetadata.sourceResolved ?\n    sourceMetadata.source :\n    sourceFor(sourceMetadata, metadata, context);\n\n  if (context.sourceMapInlineSources) {\n    var sourceMapSourcesContent = context.sourceMapTracker.sourcesContentFor(context.source);\n    sourceContent = sourceMapSourcesContent && sourceMapSourcesContent[metadata.source] ?\n      sourceMapSourcesContent :\n      context.sourceReader.sourceAt(context.source);\n  }\n\n  return sourceContent ?\n    [metadata.line, metadata.column, metadata.source, sourceContent] :\n    [metadata.line, metadata.column, metadata.source];\n}\n\nfunction trackSuffix(data, context) {\n  var parts = data.split('\\n');\n\n  for (var i = 0, l = parts.length; i < l; i++) {\n    var part = parts[i];\n    var cursor = 0;\n\n    if (i > 0) {\n      context.line++;\n      context.column = 0;\n    }\n\n    while (true) {\n      var next = part.indexOf(escapePrefix, cursor);\n\n      if (next == -1) {\n        context.column += part.substring(cursor).length;\n        break;\n      }\n\n      context.column += next - cursor;\n      cursor += next - cursor;\n\n      var escaped = part.substring(next, part.indexOf('__', next + 1) + 2);\n      var encodedValues = escaped.substring(escaped.indexOf('(') + 1, escaped.indexOf(')')).split(',');\n      context.line += ~~encodedValues[0];\n      context.column = (~~encodedValues[0] === 0 ? context.column : 0) + ~~encodedValues[1];\n      cursor += escaped.length;\n    }\n  }\n}\n\nfunction track(data, context, snapshotMetadata, fallbacks) {\n  var untracked = trackPrefix(data, context, snapshotMetadata);\n  var metadata = snapshotMetadata ?\n    snapshot(untracked, context, fallbacks) :\n    [];\n\n  if (untracked)\n    trackSuffix(untracked, context);\n\n  return metadata;\n}\n\nmodule.exports = track;\n","var cleanUpSelectors = require('./clean-up').selectors;\nvar cleanUpBlock = require('./clean-up').block;\nvar cleanUpAtRule = require('./clean-up').atRule;\nvar split = require('../utils/split');\n\nvar RGB = require('../colors/rgb');\nvar HSL = require('../colors/hsl');\nvar HexNameShortener = require('../colors/hex-name-shortener');\n\nvar wrapForOptimizing = require('../properties/wrap-for-optimizing').all;\nvar restoreFromOptimizing = require('../properties/restore-from-optimizing');\nvar removeUnused = require('../properties/remove-unused');\n\nvar DEFAULT_ROUNDING_PRECISION = 2;\nvar CHARSET_TOKEN = '@charset';\nvar CHARSET_REGEXP = new RegExp('^' + CHARSET_TOKEN, 'i');\nvar IMPORT_REGEXP = /^@import[\"'\\s]/i;\n\nvar FONT_NUMERAL_WEIGHTS = ['100', '200', '300', '400', '500', '600', '700', '800', '900'];\nvar FONT_NAME_WEIGHTS = ['normal', 'bold', 'bolder', 'lighter'];\nvar FONT_NAME_WEIGHTS_WITHOUT_NORMAL = ['bold', 'bolder', 'lighter'];\n\nvar WHOLE_PIXEL_VALUE = /(?:^|\\s|\\()(-?\\d+)px/;\nvar TIME_VALUE = /^(\\-?[\\d\\.]+)(m?s)$/;\n\nvar valueMinifiers = {\n  'background': function (value, index, total) {\n    return index === 0 && total == 1 && (value == 'none' || value == 'transparent') ? '0 0' : value;\n  },\n  'font-weight': function (value) {\n    if (value == 'normal')\n      return '400';\n    else if (value == 'bold')\n      return '700';\n    else\n      return value;\n  },\n  'outline': function (value, index, total) {\n    return index === 0 && total == 1 && value == 'none' ? '0' : value;\n  }\n};\n\nfunction isNegative(property, idx) {\n  return property.value[idx] && property.value[idx][0][0] == '-' && parseFloat(property.value[idx][0]) < 0;\n}\n\nfunction zeroMinifier(name, value) {\n  if (value.indexOf('0') == -1)\n    return value;\n\n  if (value.indexOf('-') > -1) {\n    value = value\n      .replace(/([^\\w\\d\\-]|^)\\-0([^\\.]|$)/g, '$10$2')\n      .replace(/([^\\w\\d\\-]|^)\\-0([^\\.]|$)/g, '$10$2');\n  }\n\n  return value\n    .replace(/(^|\\s)0+([1-9])/g, '$1$2')\n    .replace(/(^|\\D)\\.0+(\\D|$)/g, '$10$2')\n    .replace(/(^|\\D)\\.0+(\\D|$)/g, '$10$2')\n    .replace(/\\.([1-9]*)0+(\\D|$)/g, function (match, nonZeroPart, suffix) {\n      return (nonZeroPart.length > 0 ? '.' : '') + nonZeroPart + suffix;\n    })\n    .replace(/(^|\\D)0\\.(\\d)/g, '$1.$2');\n}\n\nfunction zeroDegMinifier(_, value) {\n  if (value.indexOf('0deg') == -1)\n    return value;\n\n  return value.replace(/\\(0deg\\)/g, '(0)');\n}\n\nfunction whitespaceMinifier(name, value) {\n  if (name.indexOf('filter') > -1 || value.indexOf(' ') == -1)\n    return value;\n\n  value = value.replace(/\\s+/g, ' ');\n\n  if (value.indexOf('calc') > -1)\n    value = value.replace(/\\) ?\\/ ?/g, ')/ ');\n\n  return value\n    .replace(/\\( /g, '(')\n    .replace(/ \\)/g, ')')\n    .replace(/, /g, ',');\n}\n\nfunction precisionMinifier(_, value, precisionOptions) {\n  if (precisionOptions.value === -1 || value.indexOf('.') === -1)\n    return value;\n\n  return value\n    .replace(precisionOptions.regexp, function (match, number) {\n      return Math.round(parseFloat(number) * precisionOptions.multiplier) / precisionOptions.multiplier + 'px';\n    })\n    .replace(/(\\d)\\.($|\\D)/g, '$1$2');\n}\n\nfunction unitMinifier(name, value, unitsRegexp) {\n  if (/^(?:\\-moz\\-calc|\\-webkit\\-calc|calc)\\(/.test(value))\n    return value;\n\n  if (name == 'flex' || name == '-ms-flex' || name == '-webkit-flex' || name == 'flex-basis' || name == '-webkit-flex-basis')\n    return value;\n\n  if (value.indexOf('%') > 0 && (name == 'height' || name == 'max-height' || name == 'width' || name == 'max-width'))\n    return value;\n\n  return value\n    .replace(unitsRegexp, '$1' + '0' + '$2')\n    .replace(unitsRegexp, '$1' + '0' + '$2');\n}\n\nfunction multipleZerosMinifier(property) {\n  var values = property.value;\n  var spliceAt;\n\n  if (values.length == 4 && values[0][0] === '0' && values[1][0] === '0' && values[2][0] === '0' && values[3][0] === '0') {\n    if (property.name.indexOf('box-shadow') > -1)\n      spliceAt = 2;\n    else\n      spliceAt = 1;\n  }\n\n  if (spliceAt) {\n    property.value.splice(spliceAt);\n    property.dirty = true;\n  }\n}\n\nfunction colorMininifier(name, value, compatibility) {\n  if (value.indexOf('#') === -1 && value.indexOf('rgb') == -1 && value.indexOf('hsl') == -1)\n    return HexNameShortener.shorten(value);\n\n  value = value\n    .replace(/rgb\\((\\-?\\d+),(\\-?\\d+),(\\-?\\d+)\\)/g, function (match, red, green, blue) {\n      return new RGB(red, green, blue).toHex();\n    })\n    .replace(/hsl\\((-?\\d+),(-?\\d+)%?,(-?\\d+)%?\\)/g, function (match, hue, saturation, lightness) {\n      return new HSL(hue, saturation, lightness).toHex();\n    })\n    .replace(/(^|[^='\"])#([0-9a-f]{6})/gi, function (match, prefix, color) {\n      if (color[0] == color[1] && color[2] == color[3] && color[4] == color[5])\n        return prefix + '#' + color[0] + color[2] + color[4];\n      else\n        return prefix + '#' + color;\n    })\n    .replace(/(rgb|rgba|hsl|hsla)\\(([^\\)]+)\\)/g, function (match, colorFunction, colorDef) {\n      var tokens = colorDef.split(',');\n      var applies = (colorFunction == 'hsl' && tokens.length == 3) ||\n        (colorFunction == 'hsla' && tokens.length == 4) ||\n        (colorFunction == 'rgb' && tokens.length == 3 && colorDef.indexOf('%') > 0) ||\n        (colorFunction == 'rgba' && tokens.length == 4 && colorDef.indexOf('%') > 0);\n      if (!applies)\n        return match;\n\n      if (tokens[1].indexOf('%') == -1)\n        tokens[1] += '%';\n      if (tokens[2].indexOf('%') == -1)\n        tokens[2] += '%';\n      return colorFunction + '(' + tokens.join(',') + ')';\n    });\n\n  if (compatibility.colors.opacity && name.indexOf('background') == -1) {\n    value = value.replace(/(?:rgba|hsla)\\(0,0%?,0%?,0\\)/g, function (match) {\n      if (split(value, ',').pop().indexOf('gradient(') > -1)\n        return match;\n\n      return 'transparent';\n    });\n  }\n\n  return HexNameShortener.shorten(value);\n}\n\nfunction pixelLengthMinifier(_, value, compatibility) {\n  if (!WHOLE_PIXEL_VALUE.test(value))\n    return value;\n\n  return value.replace(WHOLE_PIXEL_VALUE, function (match, val) {\n    var newValue;\n    var intVal = parseInt(val);\n\n    if (intVal === 0)\n      return match;\n\n    if (compatibility.properties.shorterLengthUnits && compatibility.units.pt && intVal * 3 % 4 === 0)\n      newValue = intVal * 3 / 4 + 'pt';\n\n    if (compatibility.properties.shorterLengthUnits && compatibility.units.pc && intVal % 16 === 0)\n      newValue = intVal / 16 + 'pc';\n\n    if (compatibility.properties.shorterLengthUnits && compatibility.units.in && intVal % 96 === 0)\n      newValue = intVal / 96 + 'in';\n\n    if (newValue)\n      newValue = match.substring(0, match.indexOf(val)) + newValue;\n\n    return newValue && newValue.length < match.length ? newValue : match;\n  });\n}\n\nfunction timeUnitMinifier(_, value) {\n  if (!TIME_VALUE.test(value))\n    return value;\n\n  return value.replace(TIME_VALUE, function (match, val, unit) {\n    var newValue;\n\n    if (unit == 'ms') {\n      newValue = parseInt(val) / 1000 + 's';\n    } else if (unit == 's') {\n      newValue = parseFloat(val) * 1000 + 'ms';\n    }\n\n    return newValue.length < match.length ? newValue : match;\n  });\n}\n\nfunction minifyBorderRadius(property) {\n  var values = property.value;\n  var spliceAt;\n\n  if (values.length == 3 && values[1][0] == '/' && values[0][0] == values[2][0])\n    spliceAt = 1;\n  else if (values.length == 5 && values[2][0] == '/' && values[0][0] == values[3][0] && values[1][0] == values[4][0])\n    spliceAt = 2;\n  else if (values.length == 7 && values[3][0] == '/' && values[0][0] == values[4][0] && values[1][0] == values[5][0] && values[2][0] == values[6][0])\n    spliceAt = 3;\n  else if (values.length == 9 && values[4][0] == '/' && values[0][0] == values[5][0] && values[1][0] == values[6][0] && values[2][0] == values[7][0] && values[3][0] == values[8][0])\n    spliceAt = 4;\n\n  if (spliceAt) {\n    property.value.splice(spliceAt);\n    property.dirty = true;\n  }\n}\n\nfunction minifyFilter(property) {\n  if (property.value.length == 1) {\n    property.value[0][0] = property.value[0][0].replace(/progid:DXImageTransform\\.Microsoft\\.(Alpha|Chroma)(\\W)/, function (match, filter, suffix) {\n      return filter.toLowerCase() + suffix;\n    });\n  }\n\n  property.value[0][0] = property.value[0][0]\n    .replace(/,(\\S)/g, ', $1')\n    .replace(/ ?= ?/g, '=');\n}\n\nfunction minifyFont(property) {\n  var values = property.value;\n  var hasNumeral = FONT_NUMERAL_WEIGHTS.indexOf(values[0][0]) > -1 ||\n    values[1] && FONT_NUMERAL_WEIGHTS.indexOf(values[1][0]) > -1 ||\n    values[2] && FONT_NUMERAL_WEIGHTS.indexOf(values[2][0]) > -1;\n\n  if (hasNumeral)\n    return;\n\n  if (values[1] == '/')\n    return;\n\n  var normalCount = 0;\n  if (values[0][0] == 'normal')\n    normalCount++;\n  if (values[1] && values[1][0] == 'normal')\n    normalCount++;\n  if (values[2] && values[2][0] == 'normal')\n    normalCount++;\n\n  if (normalCount > 1)\n    return;\n\n  var toOptimize;\n  if (FONT_NAME_WEIGHTS_WITHOUT_NORMAL.indexOf(values[0][0]) > -1)\n    toOptimize = 0;\n  else if (values[1] && FONT_NAME_WEIGHTS_WITHOUT_NORMAL.indexOf(values[1][0]) > -1)\n    toOptimize = 1;\n  else if (values[2] && FONT_NAME_WEIGHTS_WITHOUT_NORMAL.indexOf(values[2][0]) > -1)\n    toOptimize = 2;\n  else if (FONT_NAME_WEIGHTS.indexOf(values[0][0]) > -1)\n    toOptimize = 0;\n  else if (values[1] && FONT_NAME_WEIGHTS.indexOf(values[1][0]) > -1)\n    toOptimize = 1;\n  else if (values[2] && FONT_NAME_WEIGHTS.indexOf(values[2][0]) > -1)\n    toOptimize = 2;\n\n  if (toOptimize !== undefined) {\n    property.value[toOptimize][0] = valueMinifiers['font-weight'](values[toOptimize][0]);\n    property.dirty = true;\n  }\n}\n\nfunction optimizeBody(properties, options) {\n  var property, name, value;\n  var _properties = wrapForOptimizing(properties);\n\n  for (var i = 0, l = _properties.length; i < l; i++) {\n    property = _properties[i];\n    name = property.name;\n\n    if (property.hack && (\n        (property.hack == 'star' || property.hack == 'underscore') && !options.compatibility.properties.iePrefixHack ||\n        property.hack == 'backslash' && !options.compatibility.properties.ieSuffixHack ||\n        property.hack == 'bang' && !options.compatibility.properties.ieBangHack))\n      property.unused = true;\n\n    if (name.indexOf('padding') === 0 && (isNegative(property, 0) || isNegative(property, 1) || isNegative(property, 2) || isNegative(property, 3)))\n      property.unused = true;\n\n    if (property.unused)\n      continue;\n\n    if (property.variable) {\n      if (property.block)\n        optimizeBody(property.value[0], options);\n      continue;\n    }\n\n    for (var j = 0, m = property.value.length; j < m; j++) {\n      value = property.value[j][0];\n\n      if (valueMinifiers[name])\n        value = valueMinifiers[name](value, j, m);\n\n      value = whitespaceMinifier(name, value);\n      value = precisionMinifier(name, value, options.precision);\n      value = pixelLengthMinifier(name, value, options.compatibility);\n      value = timeUnitMinifier(name, value);\n      value = zeroMinifier(name, value);\n      if (options.compatibility.properties.zeroUnits) {\n        value = zeroDegMinifier(name, value);\n        value = unitMinifier(name, value, options.unitsRegexp);\n      }\n      if (options.compatibility.properties.colors)\n        value = colorMininifier(name, value, options.compatibility);\n\n      property.value[j][0] = value;\n    }\n\n    multipleZerosMinifier(property);\n\n    if (name.indexOf('border') === 0 && name.indexOf('radius') > 0)\n      minifyBorderRadius(property);\n    else if (name == 'filter')\n      minifyFilter(property);\n    else if (name == 'font')\n      minifyFont(property);\n  }\n\n  restoreFromOptimizing(_properties, true);\n  removeUnused(_properties);\n}\n\nfunction cleanupCharsets(tokens) {\n  var hasCharset = false;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] != 'at-rule')\n      continue;\n\n    if (!CHARSET_REGEXP.test(token[1][0]))\n      continue;\n\n    if (hasCharset || token[1][0].indexOf(CHARSET_TOKEN) == -1) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    } else {\n      hasCharset = true;\n      tokens.splice(i, 1);\n      tokens.unshift(['at-rule', [token[1][0].replace(CHARSET_REGEXP, CHARSET_TOKEN)]]);\n    }\n  }\n}\n\nfunction buildUnitRegexp(options) {\n  var units = ['px', 'em', 'ex', 'cm', 'mm', 'in', 'pt', 'pc', '%'];\n  var otherUnits = ['ch', 'rem', 'vh', 'vm', 'vmax', 'vmin', 'vw'];\n\n  otherUnits.forEach(function (unit) {\n    if (options.compatibility.units[unit])\n      units.push(unit);\n  });\n\n  return new RegExp('(^|\\\\s|\\\\(|,)0(?:' + units.join('|') + ')(\\\\W|$)', 'g');\n}\n\nfunction buildPrecision(options) {\n  var precision = {};\n\n  precision.value = options.roundingPrecision === undefined ?\n    DEFAULT_ROUNDING_PRECISION :\n    options.roundingPrecision;\n  precision.multiplier = Math.pow(10, precision.value);\n  precision.regexp = new RegExp('(\\\\d*\\\\.\\\\d{' + (precision.value + 1) + ',})px', 'g');\n\n  return precision;\n}\n\nfunction optimize(tokens, options, context) {\n  var ie7Hack = options.compatibility.selectors.ie7Hack;\n  var adjacentSpace = options.compatibility.selectors.adjacentSpace;\n  var spaceAfterClosingBrace = options.compatibility.properties.spaceAfterClosingBrace;\n  var mayHaveCharset = false;\n  var afterContent = false;\n\n  options.unitsRegexp = buildUnitRegexp(options);\n  options.precision = buildPrecision(options);\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n      case 'selector':\n        token[1] = cleanUpSelectors(token[1], !ie7Hack, adjacentSpace);\n        optimizeBody(token[2], options);\n        afterContent = true;\n        break;\n      case 'block':\n        cleanUpBlock(token[1], spaceAfterClosingBrace);\n        optimize(token[2], options, context);\n        afterContent = true;\n        break;\n      case 'flat-block':\n        cleanUpBlock(token[1], spaceAfterClosingBrace);\n        optimizeBody(token[2], options);\n        afterContent = true;\n        break;\n      case 'at-rule':\n        cleanUpAtRule(token[1]);\n        mayHaveCharset = true;\n    }\n\n    if (token[0] == 'at-rule' && IMPORT_REGEXP.test(token[1]) && afterContent) {\n      context.warnings.push('Ignoring @import rule \"' + token[1] + '\" as it appears after rules thus browsers will ignore them.');\n      token[1] = '';\n    }\n\n    if (token[1].length === 0 || (token[2] && token[2].length === 0)) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n\n  if (mayHaveCharset)\n    cleanupCharsets(tokens);\n}\n\nmodule.exports = optimize;\n","function removeWhitespace(match, value) {\n  return '[' + value.replace(/ /g, '') + ']';\n}\n\nfunction selectorSorter(s1, s2) {\n  return s1[0] > s2[0] ? 1 : -1;\n}\n\nfunction whitespaceReplacements(_, p1, p2, p3) {\n  if (p1 && p2 && p3.length)\n    return p1 + p2 + ' ';\n  else if (p1 && p2)\n    return p1 + p2;\n  else\n    return p2;\n}\n\nvar CleanUp = {\n  selectors: function (selectors, removeUnsupported, adjacentSpace) {\n    var list = [];\n    var repeated = [];\n\n    for (var i = 0, l = selectors.length; i < l; i++) {\n      var selector = selectors[i];\n      var reduced = selector[0]\n        .replace(/\\s+/g, ' ')\n        .replace(/ ?, ?/g, ',')\n        .replace(/\\s*(\\\\)?([>+~])(\\s*)/g, whitespaceReplacements)\n        .trim();\n\n      if (adjacentSpace && reduced.indexOf('nav') > 0)\n        reduced = reduced.replace(/\\+nav(\\S|$)/, '+ nav$1');\n\n      if (removeUnsupported && (reduced.indexOf('*+html ') != -1 || reduced.indexOf('*:first-child+html ') != -1))\n        continue;\n\n      if (reduced.indexOf('*') > -1) {\n        reduced = reduced\n          .replace(/\\*([:#\\.\\[])/g, '$1')\n          .replace(/^(\\:first\\-child)?\\+html/, '*$1+html');\n      }\n\n      if (reduced.indexOf('[') > -1)\n        reduced = reduced.replace(/\\[([^\\]]+)\\]/g, removeWhitespace);\n\n      if (repeated.indexOf(reduced) == -1) {\n        selector[0] = reduced;\n        repeated.push(reduced);\n        list.push(selector);\n      }\n    }\n\n    return list.sort(selectorSorter);\n  },\n\n  selectorDuplicates: function (selectors) {\n    var list = [];\n    var repeated = [];\n\n    for (var i = 0, l = selectors.length; i < l; i++) {\n      var selector = selectors[i];\n\n      if (repeated.indexOf(selector[0]) == -1) {\n        repeated.push(selector[0]);\n        list.push(selector);\n      }\n    }\n\n    return list.sort(selectorSorter);\n  },\n\n  block: function (values, spaceAfterClosingBrace) {\n    values[0] = values[0]\n      .replace(/\\s+/g, ' ')\n      .replace(/(,|:|\\() /g, '$1')\n      .replace(/ \\)/g, ')');\n\n    if (!spaceAfterClosingBrace)\n      values[0] = values[0].replace(/\\) /g, ')');\n  },\n\n  atRule: function (values) {\n    values[0] = values[0]\n      .replace(/\\s+/g, ' ')\n      .trim();\n  }\n};\n\nmodule.exports = CleanUp;\n","function RGB(red, green, blue) {\n  this.red = red;\n  this.green = green;\n  this.blue = blue;\n}\n\nRGB.prototype.toHex = function () {\n  var red = Math.max(0, Math.min(~~this.red, 255));\n  var green = Math.max(0, Math.min(~~this.green, 255));\n  var blue = Math.max(0, Math.min(~~this.blue, 255));\n\n  // Credit: Asen  http://jsbin.com/UPUmaGOc/2/edit?js,console\n  return '#' + ('00000' + (red << 16 | green << 8 | blue).toString(16)).slice(-6);\n};\n\nmodule.exports = RGB;\n","// HSL to RGB converter. Both methods adapted from:\n// http://mjijackson.com/2008/02/rgb-to-hsl-and-rgb-to-hsv-color-model-conversion-algorithms-in-javascript\n\nfunction HSLColor(hue, saturation, lightness) {\n  this.hue = hue;\n  this.saturation = saturation;\n  this.lightness = lightness;\n}\n\nfunction hslToRgb(h, s, l) {\n  var r, g, b;\n\n  // normalize hue orientation b/w 0 and 360 degrees\n  h = h % 360;\n  if (h < 0)\n    h += 360;\n  h = ~~h / 360;\n\n  if (s < 0)\n    s = 0;\n  else if (s > 100)\n    s = 100;\n  s = ~~s / 100;\n\n  if (l < 0)\n    l = 0;\n  else if (l > 100)\n    l = 100;\n  l = ~~l / 100;\n\n  if (s === 0) {\n    r = g = b = l; // achromatic\n  } else {\n    var q = l < 0.5 ?\n      l * (1 + s) :\n      l + s - l * s;\n    var p = 2 * l - q;\n    r = hueToRgb(p, q, h + 1/3);\n    g = hueToRgb(p, q, h);\n    b = hueToRgb(p, q, h - 1/3);\n  }\n\n  return [~~(r * 255), ~~(g * 255), ~~(b * 255)];\n}\n\nfunction hueToRgb(p, q, t) {\n  if (t < 0) t += 1;\n  if (t > 1) t -= 1;\n  if (t < 1/6) return p + (q - p) * 6 * t;\n  if (t < 1/2) return q;\n  if (t < 2/3) return p + (q - p) * (2/3 - t) * 6;\n  return p;\n}\n\nHSLColor.prototype.toHex = function () {\n  var asRgb = hslToRgb(this.hue, this.saturation, this.lightness);\n  var redAsHex = asRgb[0].toString(16);\n  var greenAsHex = asRgb[1].toString(16);\n  var blueAsHex = asRgb[2].toString(16);\n\n  return '#' +\n    ((redAsHex.length == 1 ? '0' : '') + redAsHex) +\n    ((greenAsHex.length == 1 ? '0' : '') + greenAsHex) +\n    ((blueAsHex.length == 1 ? '0' : '') + blueAsHex);\n};\n\nmodule.exports = HSLColor;\n","var HexNameShortener = {};\n\nvar COLORS = {\n  aliceblue: '#f0f8ff',\n  antiquewhite: '#faebd7',\n  aqua: '#0ff',\n  aquamarine: '#7fffd4',\n  azure: '#f0ffff',\n  beige: '#f5f5dc',\n  bisque: '#ffe4c4',\n  black: '#000',\n  blanchedalmond: '#ffebcd',\n  blue: '#00f',\n  blueviolet: '#8a2be2',\n  brown: '#a52a2a',\n  burlywood: '#deb887',\n  cadetblue: '#5f9ea0',\n  chartreuse: '#7fff00',\n  chocolate: '#d2691e',\n  coral: '#ff7f50',\n  cornflowerblue: '#6495ed',\n  cornsilk: '#fff8dc',\n  crimson: '#dc143c',\n  cyan: '#0ff',\n  darkblue: '#00008b',\n  darkcyan: '#008b8b',\n  darkgoldenrod: '#b8860b',\n  darkgray: '#a9a9a9',\n  darkgreen: '#006400',\n  darkgrey: '#a9a9a9',\n  darkkhaki: '#bdb76b',\n  darkmagenta: '#8b008b',\n  darkolivegreen: '#556b2f',\n  darkorange: '#ff8c00',\n  darkorchid: '#9932cc',\n  darkred: '#8b0000',\n  darksalmon: '#e9967a',\n  darkseagreen: '#8fbc8f',\n  darkslateblue: '#483d8b',\n  darkslategray: '#2f4f4f',\n  darkslategrey: '#2f4f4f',\n  darkturquoise: '#00ced1',\n  darkviolet: '#9400d3',\n  deeppink: '#ff1493',\n  deepskyblue: '#00bfff',\n  dimgray: '#696969',\n  dimgrey: '#696969',\n  dodgerblue: '#1e90ff',\n  firebrick: '#b22222',\n  floralwhite: '#fffaf0',\n  forestgreen: '#228b22',\n  fuchsia: '#f0f',\n  gainsboro: '#dcdcdc',\n  ghostwhite: '#f8f8ff',\n  gold: '#ffd700',\n  goldenrod: '#daa520',\n  gray: '#808080',\n  green: '#008000',\n  greenyellow: '#adff2f',\n  grey: '#808080',\n  honeydew: '#f0fff0',\n  hotpink: '#ff69b4',\n  indianred: '#cd5c5c',\n  indigo: '#4b0082',\n  ivory: '#fffff0',\n  khaki: '#f0e68c',\n  lavender: '#e6e6fa',\n  lavenderblush: '#fff0f5',\n  lawngreen: '#7cfc00',\n  lemonchiffon: '#fffacd',\n  lightblue: '#add8e6',\n  lightcoral: '#f08080',\n  lightcyan: '#e0ffff',\n  lightgoldenrodyellow: '#fafad2',\n  lightgray: '#d3d3d3',\n  lightgreen: '#90ee90',\n  lightgrey: '#d3d3d3',\n  lightpink: '#ffb6c1',\n  lightsalmon: '#ffa07a',\n  lightseagreen: '#20b2aa',\n  lightskyblue: '#87cefa',\n  lightslategray: '#778899',\n  lightslategrey: '#778899',\n  lightsteelblue: '#b0c4de',\n  lightyellow: '#ffffe0',\n  lime: '#0f0',\n  limegreen: '#32cd32',\n  linen: '#faf0e6',\n  magenta: '#ff00ff',\n  maroon: '#800000',\n  mediumaquamarine: '#66cdaa',\n  mediumblue: '#0000cd',\n  mediumorchid: '#ba55d3',\n  mediumpurple: '#9370db',\n  mediumseagreen: '#3cb371',\n  mediumslateblue: '#7b68ee',\n  mediumspringgreen: '#00fa9a',\n  mediumturquoise: '#48d1cc',\n  mediumvioletred: '#c71585',\n  midnightblue: '#191970',\n  mintcream: '#f5fffa',\n  mistyrose: '#ffe4e1',\n  moccasin: '#ffe4b5',\n  navajowhite: '#ffdead',\n  navy: '#000080',\n  oldlace: '#fdf5e6',\n  olive: '#808000',\n  olivedrab: '#6b8e23',\n  orange: '#ffa500',\n  orangered: '#ff4500',\n  orchid: '#da70d6',\n  palegoldenrod: '#eee8aa',\n  palegreen: '#98fb98',\n  paleturquoise: '#afeeee',\n  palevioletred: '#db7093',\n  papayawhip: '#ffefd5',\n  peachpuff: '#ffdab9',\n  peru: '#cd853f',\n  pink: '#ffc0cb',\n  plum: '#dda0dd',\n  powderblue: '#b0e0e6',\n  purple: '#800080',\n  rebeccapurple: '#663399',\n  red: '#f00',\n  rosybrown: '#bc8f8f',\n  royalblue: '#4169e1',\n  saddlebrown: '#8b4513',\n  salmon: '#fa8072',\n  sandybrown: '#f4a460',\n  seagreen: '#2e8b57',\n  seashell: '#fff5ee',\n  sienna: '#a0522d',\n  silver: '#c0c0c0',\n  skyblue: '#87ceeb',\n  slateblue: '#6a5acd',\n  slategray: '#708090',\n  slategrey: '#708090',\n  snow: '#fffafa',\n  springgreen: '#00ff7f',\n  steelblue: '#4682b4',\n  tan: '#d2b48c',\n  teal: '#008080',\n  thistle: '#d8bfd8',\n  tomato: '#ff6347',\n  turquoise: '#40e0d0',\n  violet: '#ee82ee',\n  wheat: '#f5deb3',\n  white: '#fff',\n  whitesmoke: '#f5f5f5',\n  yellow: '#ff0',\n  yellowgreen: '#9acd32'\n};\n\nvar toHex = {};\nvar toName = {};\n\nfor (var name in COLORS) {\n  var hex = COLORS[name];\n  if (name.length < hex.length)\n    toName[hex] = name;\n  else\n    toHex[name] = hex;\n}\n\nvar toHexPattern = new RegExp('(^| |,|\\\\))(' + Object.keys(toHex).join('|') + ')( |,|\\\\)|$)', 'ig');\nvar toNamePattern = new RegExp('(' + Object.keys(toName).join('|') + ')([^a-f0-9]|$)', 'ig');\n\nfunction hexConverter(match, prefix, colorValue, suffix) {\n  return prefix + toHex[colorValue.toLowerCase()] + suffix;\n}\n\nfunction nameConverter(match, colorValue, suffix) {\n  return toName[colorValue.toLowerCase()] + suffix;\n}\n\nHexNameShortener.shorten = function (value) {\n  var hasHex = value.indexOf('#') > -1;\n  var shortened = value.replace(toHexPattern, hexConverter);\n\n  if (shortened != value)\n    shortened = shortened.replace(toHexPattern, hexConverter);\n\n  return hasHex ? shortened.replace(toNamePattern, nameConverter) : shortened;\n};\n\nmodule.exports = HexNameShortener;\n","var BACKSLASH_HACK = '\\\\';\nvar IMPORTANT_WORD = 'important';\nvar IMPORTANT_TOKEN = '!'+IMPORTANT_WORD;\nvar IMPORTANT_WORD_MATCH = new RegExp(IMPORTANT_WORD+'$', 'i');\nvar IMPORTANT_TOKEN_MATCH = new RegExp(IMPORTANT_TOKEN+'$', 'i');\nvar STAR_HACK = '*';\nvar UNDERSCORE_HACK = '_';\nvar BANG_HACK = '!';\n\nfunction wrapAll(properties) {\n  var wrapped = [];\n\n  for (var i = properties.length - 1; i >= 0; i--) {\n    if (typeof properties[i][0] == 'string')\n      continue;\n\n    var single = wrapSingle(properties[i]);\n    single.all = properties;\n    single.position = i;\n    wrapped.unshift(single);\n  }\n\n  return wrapped;\n}\n\nfunction isMultiplex(property) {\n  for (var i = 1, l = property.length; i < l; i++) {\n    if (property[i][0] == ',' || property[i][0] == '/')\n      return true;\n  }\n\n  return false;\n}\n\nfunction hackType(property) {\n  var type = false;\n  var name = property[0][0];\n  var lastValue = property[property.length - 1];\n\n  if (name[0] == UNDERSCORE_HACK) {\n    type = 'underscore';\n  } else if (name[0] == STAR_HACK) {\n    type = 'star';\n  } else if (lastValue[0][0] == BANG_HACK && !lastValue[0].match(IMPORTANT_WORD_MATCH)) {\n    type = 'bang';\n  } else if (lastValue[0].indexOf(BANG_HACK) > 0 && !lastValue[0].match(IMPORTANT_WORD_MATCH)) {\n    type = 'bang';\n  } else if (lastValue[0].indexOf(BACKSLASH_HACK) > 0 && lastValue[0].indexOf(BACKSLASH_HACK) == lastValue[0].length - BACKSLASH_HACK.length - 1) {\n    type = 'backslash';\n  } else if (lastValue[0].indexOf(BACKSLASH_HACK) === 0 && lastValue[0].length == 2) {\n    type = 'backslash';\n  }\n\n  return type;\n}\n\nfunction isImportant(property) {\n  if (property.length > 1) {\n    var p = property[property.length - 1][0];\n    if (typeof(p) === 'string') {\n      return IMPORTANT_TOKEN_MATCH.test(p);\n    }\n  }\n  return false;\n}\n\nfunction stripImportant(property) {\n  if (property.length > 0)\n    property[property.length - 1][0] = property[property.length - 1][0].replace(IMPORTANT_TOKEN_MATCH, '');\n}\n\nfunction stripPrefixHack(property) {\n  property[0][0] = property[0][0].substring(1);\n}\n\nfunction stripSuffixHack(property, hackType) {\n  var lastValue = property[property.length - 1];\n  lastValue[0] = lastValue[0]\n    .substring(0, lastValue[0].indexOf(hackType == 'backslash' ? BACKSLASH_HACK : BANG_HACK))\n    .trim();\n\n  if (lastValue[0].length === 0)\n    property.pop();\n}\n\nfunction wrapSingle(property) {\n  var _isImportant = isImportant(property);\n  if (_isImportant)\n    stripImportant(property);\n\n  var _hackType = hackType(property);\n  if (_hackType == 'star' || _hackType == 'underscore')\n    stripPrefixHack(property);\n  else if (_hackType == 'backslash' || _hackType == 'bang')\n    stripSuffixHack(property, _hackType);\n\n  var isVariable = property[0][0].indexOf('--') === 0;\n\n  return {\n    block: isVariable && property[1] && Array.isArray(property[1][0][0]),\n    components: [],\n    dirty: false,\n    hack: _hackType,\n    important: _isImportant,\n    name: property[0][0],\n    multiplex: property.length > 2 ? isMultiplex(property) : false,\n    position: 0,\n    shorthand: false,\n    unused: property.length < 2,\n    value: property.slice(1),\n    variable: isVariable\n  };\n}\n\nmodule.exports = {\n  all: wrapAll,\n  single: wrapSingle\n};\n","var compactable = require('./compactable');\n\nvar BACKSLASH_HACK = '\\\\9';\nvar IMPORTANT_TOKEN = '!important';\nvar STAR_HACK = '*';\nvar UNDERSCORE_HACK = '_';\nvar BANG_HACK = '!ie';\n\nfunction restoreImportant(property) {\n  property.value[property.value.length - 1][0] += IMPORTANT_TOKEN;\n}\n\nfunction restoreHack(property) {\n  if (property.hack == 'underscore')\n    property.name = UNDERSCORE_HACK + property.name;\n  else if (property.hack == 'star')\n    property.name = STAR_HACK + property.name;\n  else if (property.hack == 'backslash')\n    property.value[property.value.length - 1][0] += BACKSLASH_HACK;\n  else if (property.hack == 'bang')\n    property.value[property.value.length - 1][0] += ' ' + BANG_HACK;\n}\n\nfunction restoreFromOptimizing(properties, simpleMode) {\n  for (var i = properties.length - 1; i >= 0; i--) {\n    var property = properties[i];\n    var descriptor = compactable[property.name];\n    var restored;\n\n    if (property.unused)\n      continue;\n\n    if (!property.dirty && !property.important && !property.hack)\n      continue;\n\n    if (!simpleMode && descriptor && descriptor.shorthand) {\n      restored = descriptor.restore(property, compactable);\n      property.value = restored;\n    } else {\n      restored = property.value;\n    }\n\n    if (property.important)\n      restoreImportant(property);\n\n    if (property.hack)\n      restoreHack(property);\n\n    if (!('all' in property))\n      continue;\n\n    var current = property.all[property.position];\n    current[0][0] = property.name;\n\n    current.splice(1, current.length - 1);\n    Array.prototype.push.apply(current, restored);\n  }\n}\n\nmodule.exports = restoreFromOptimizing;\n","// Contains the interpretation of CSS properties, as used by the property optimizer\n\nvar breakUp = require('./break-up');\nvar canOverride = require('./can-override');\nvar restore = require('./restore');\n\n// Properties to process\n// Extend this object in order to add support for more properties in the optimizer.\n//\n// Each key in this object represents a CSS property and should be an object.\n// Such an object contains properties that describe how the represented CSS property should be handled.\n// Possible options:\n//\n// * components: array (Only specify for shorthand properties.)\n//   Contains the names of the granular properties this shorthand compacts.\n//\n// * canOverride: function (Default is canOverride.sameValue - meaning that they'll only be merged if they have the same value.)\n//   Returns whether two tokens of this property can be merged with each other.\n//   This property has no meaning for shorthands.\n//\n// * defaultValue: string\n//   Specifies the default value of the property according to the CSS standard.\n//   For shorthand, this is used when every component is set to its default value, therefore it should be the shortest possible default value of all the components.\n//\n// * shortestValue: string\n//   Specifies the shortest possible value the property can possibly have.\n//   (Falls back to defaultValue if unspecified.)\n//\n// * breakUp: function (Only specify for shorthand properties.)\n//   Breaks the shorthand up to its components.\n//\n// * restore: function (Only specify for shorthand properties.)\n//   Puts the shorthand together from its components.\n//\nvar compactable = {\n  'color': {\n    canOverride: canOverride.color,\n    defaultValue: 'transparent',\n    shortestValue: 'red'\n  },\n  'background': {\n    components: [\n      'background-image',\n      'background-position',\n      'background-size',\n      'background-repeat',\n      'background-attachment',\n      'background-origin',\n      'background-clip',\n      'background-color'\n    ],\n    breakUp: breakUp.multiplex(breakUp.background),\n    defaultValue: '0 0',\n    restore: restore.multiplex(restore.background),\n    shortestValue: '0',\n    shorthand: true\n  },\n  'background-clip': {\n    canOverride: canOverride.always,\n    defaultValue: 'border-box',\n    shortestValue: 'border-box'\n  },\n  'background-color': {\n    canOverride: canOverride.color,\n    defaultValue: 'transparent',\n    multiplexLastOnly: true,\n    nonMergeableValue: 'none',\n    shortestValue: 'red'\n  },\n  'background-image': {\n    canOverride: canOverride.backgroundImage,\n    defaultValue: 'none'\n  },\n  'background-origin': {\n    canOverride: canOverride.always,\n    defaultValue: 'padding-box',\n    shortestValue: 'border-box'\n  },\n  'background-repeat': {\n    canOverride: canOverride.always,\n    defaultValue: ['repeat'],\n    doubleValues: true\n  },\n  'background-position': {\n    canOverride: canOverride.alwaysButIntoFunction,\n    defaultValue: ['0', '0'],\n    doubleValues: true,\n    shortestValue: '0'\n  },\n  'background-size': {\n    canOverride: canOverride.alwaysButIntoFunction,\n    defaultValue: ['auto'],\n    doubleValues: true,\n    shortestValue: '0 0'\n  },\n  'background-attachment': {\n    canOverride: canOverride.always,\n    defaultValue: 'scroll'\n  },\n  'border': {\n    breakUp: breakUp.border,\n    canOverride: canOverride.border,\n    components: [\n      'border-width',\n      'border-style',\n      'border-color'\n    ],\n    defaultValue: 'none',\n    restore: restore.withoutDefaults,\n    shorthand: true\n  },\n  'border-color': {\n    canOverride: canOverride.color,\n    defaultValue: 'none',\n    shorthand: true\n  },\n  'border-style': {\n    canOverride: canOverride.always,\n    defaultValue: 'none',\n    shorthand: true\n  },\n  'border-width': {\n    canOverride: canOverride.unit,\n    defaultValue: 'medium',\n    shortestValue: '0',\n    shorthand: true\n  },\n  'list-style': {\n    components: [\n      'list-style-type',\n      'list-style-position',\n      'list-style-image'\n    ],\n    canOverride: canOverride.always,\n    breakUp: breakUp.listStyle,\n    restore: restore.withoutDefaults,\n    defaultValue: 'outside', // can't use 'disc' because that'd override default 'decimal' for <ol>\n    shortestValue: 'none',\n    shorthand: true\n  },\n  'list-style-type' : {\n    canOverride: canOverride.always,\n    defaultValue: '__hack',\n    // NOTE: we can't tell the real default value here, it's 'disc' for <ul> and 'decimal' for <ol>\n    //       -- this is a hack, but it doesn't matter because this value will be either overridden or it will disappear at the final step anyway\n    shortestValue: 'none'\n  },\n  'list-style-position' : {\n    canOverride: canOverride.always,\n    defaultValue: 'outside',\n    shortestValue: 'inside'\n  },\n  'list-style-image' : {\n    canOverride: canOverride.always,\n    defaultValue: 'none'\n  },\n  'outline': {\n    components: [\n      'outline-color',\n      'outline-style',\n      'outline-width'\n    ],\n    breakUp: breakUp.outline,\n    restore: restore.withoutDefaults,\n    defaultValue: '0',\n    shorthand: true\n  },\n  'outline-color': {\n    canOverride: canOverride.color,\n    defaultValue: 'invert',\n    shortestValue: 'red'\n  },\n  'outline-style': {\n    canOverride: canOverride.always,\n    defaultValue: 'none'\n  },\n  'outline-width': {\n    canOverride: canOverride.unit,\n    defaultValue: 'medium',\n    shortestValue: '0'\n  },\n  '-moz-transform': {\n    canOverride: canOverride.sameFunctionOrValue\n  },\n  '-ms-transform': {\n    canOverride: canOverride.sameFunctionOrValue\n  },\n  '-webkit-transform': {\n    canOverride: canOverride.sameFunctionOrValue\n  },\n  'transform': {\n    canOverride: canOverride.sameFunctionOrValue\n  }\n};\n\nvar addFourValueShorthand = function (prop, components, options) {\n  options = options || {};\n  compactable[prop] = {\n    canOverride: options.canOverride,\n    components: components,\n    breakUp: options.breakUp || breakUp.fourValues,\n    defaultValue: options.defaultValue || '0',\n    restore: options.restore || restore.fourValues,\n    shortestValue: options.shortestValue,\n    shorthand: true\n  };\n  for (var i = 0; i < components.length; i++) {\n    compactable[components[i]] = {\n      breakUp: options.breakUp || breakUp.fourValues,\n      canOverride: options.canOverride || canOverride.unit,\n      defaultValue: options.defaultValue || '0',\n      shortestValue: options.shortestValue\n    };\n  }\n};\n\n['', '-moz-', '-o-'].forEach(function (prefix) {\n  addFourValueShorthand(prefix + 'border-radius', [\n    prefix + 'border-top-left-radius',\n    prefix + 'border-top-right-radius',\n    prefix + 'border-bottom-right-radius',\n    prefix + 'border-bottom-left-radius'\n  ], {\n    breakUp: breakUp.borderRadius,\n    restore: restore.borderRadius\n  });\n});\n\naddFourValueShorthand('border-color', [\n  'border-top-color',\n  'border-right-color',\n  'border-bottom-color',\n  'border-left-color'\n], {\n  breakUp: breakUp.fourValues,\n  canOverride: canOverride.color,\n  defaultValue: 'none',\n  shortestValue: 'red'\n});\n\naddFourValueShorthand('border-style', [\n  'border-top-style',\n  'border-right-style',\n  'border-bottom-style',\n  'border-left-style'\n], {\n  breakUp: breakUp.fourValues,\n  canOverride: canOverride.always,\n  defaultValue: 'none'\n});\n\naddFourValueShorthand('border-width', [\n  'border-top-width',\n  'border-right-width',\n  'border-bottom-width',\n  'border-left-width'\n], {\n  defaultValue: 'medium',\n  shortestValue: '0'\n});\n\naddFourValueShorthand('padding', [\n  'padding-top',\n  'padding-right',\n  'padding-bottom',\n  'padding-left'\n]);\n\naddFourValueShorthand('margin', [\n  'margin-top',\n  'margin-right',\n  'margin-bottom',\n  'margin-left'\n]);\n\n// Adds `componentOf` field to all longhands\nfor (var property in compactable) {\n  if (compactable[property].shorthand) {\n    for (var i = 0, l = compactable[property].components.length; i < l; i++) {\n      compactable[compactable[property].components[i]].componentOf = property;\n    }\n  }\n}\n\nmodule.exports = compactable;\n","var wrapSingle = require('./wrap-for-optimizing').single;\nvar InvalidPropertyError = require('./invalid-property-error');\n\nvar split = require('../utils/split');\nvar MULTIPLEX_SEPARATOR = ',';\n\nfunction _colorFilter(validator) {\n  return function (value) {\n    return value[0] == 'invert' || validator.isValidColor(value[0]);\n  };\n}\n\nfunction _styleFilter(validator) {\n  return function (value) {\n    return value[0] != 'inherit' && validator.isValidStyle(value[0]) && !validator.isValidColorValue(value[0]);\n  };\n}\n\nfunction _wrapDefault(name, property, compactable) {\n  var descriptor = compactable[name];\n  if (descriptor.doubleValues && descriptor.defaultValue.length == 2)\n    return wrapSingle([[name, property.important], [descriptor.defaultValue[0]], [descriptor.defaultValue[1]]]);\n  else if (descriptor.doubleValues && descriptor.defaultValue.length == 1)\n    return wrapSingle([[name, property.important], [descriptor.defaultValue[0]]]);\n  else\n    return wrapSingle([[name, property.important], [descriptor.defaultValue]]);\n}\n\nfunction _widthFilter(validator) {\n  return function (value) {\n    return value[0] != 'inherit' && validator.isValidWidth(value[0]) && !validator.isValidStyleKeyword(value[0]) && !validator.isValidColorValue(value[0]);\n  };\n}\n\nfunction background(property, compactable, validator) {\n  var image = _wrapDefault('background-image', property, compactable);\n  var position = _wrapDefault('background-position', property, compactable);\n  var size = _wrapDefault('background-size', property, compactable);\n  var repeat = _wrapDefault('background-repeat', property, compactable);\n  var attachment = _wrapDefault('background-attachment', property, compactable);\n  var origin = _wrapDefault('background-origin', property, compactable);\n  var clip = _wrapDefault('background-clip', property, compactable);\n  var color = _wrapDefault('background-color', property, compactable);\n  var components = [image, position, size, repeat, attachment, origin, clip, color];\n  var values = property.value;\n\n  var positionSet = false;\n  var clipSet = false;\n  var originSet = false;\n  var repeatSet = false;\n\n  if (property.value.length == 1 && property.value[0][0] == 'inherit') {\n    // NOTE: 'inherit' is not a valid value for background-attachment\n    color.value = image.value =  repeat.value = position.value = size.value = origin.value = clip.value = property.value;\n    return components;\n  }\n\n  for (var i = values.length - 1; i >= 0; i--) {\n    var value = values[i];\n\n    if (validator.isValidBackgroundAttachment(value[0])) {\n      attachment.value = [value];\n    } else if (validator.isValidBackgroundBox(value[0])) {\n      if (clipSet) {\n        origin.value = [value];\n        originSet = true;\n      } else {\n        clip.value = [value];\n        clipSet = true;\n      }\n    } else if (validator.isValidBackgroundRepeat(value[0])) {\n      if (repeatSet) {\n        repeat.value.unshift(value);\n      } else {\n        repeat.value = [value];\n        repeatSet = true;\n      }\n    } else if (validator.isValidBackgroundPositionPart(value[0]) || validator.isValidBackgroundSizePart(value[0])) {\n      if (i > 0) {\n        var previousValue = values[i - 1];\n\n        if (previousValue[0].indexOf('/') > 0) {\n          var twoParts = split(previousValue[0], '/');\n          // NOTE: we do this slicing as value may contain metadata too, like for source maps\n          size.value = [[twoParts.pop()].concat(previousValue.slice(1)), value];\n          values[i - 1] = [twoParts.pop()].concat(previousValue.slice(1));\n        } else if (i > 1 && values[i - 2][0] == '/') {\n          size.value = [previousValue, value];\n          i -= 2;\n        } else if (previousValue[0] == '/') {\n          size.value = [value];\n        } else {\n          if (!positionSet)\n            position.value = [];\n\n          position.value.unshift(value);\n          positionSet = true;\n        }\n      } else {\n        if (!positionSet)\n          position.value = [];\n\n        position.value.unshift(value);\n        positionSet = true;\n      }\n    } else if (validator.isValidBackgroundPositionAndSize(value[0])) {\n      var sizeValue = split(value[0], '/');\n      // NOTE: we do this slicing as value may contain metadata too, like for source maps\n      size.value = [[sizeValue.pop()].concat(value.slice(1))];\n      position.value = [[sizeValue.pop()].concat(value.slice(1))];\n    } else if ((color.value[0][0] == compactable[color.name].defaultValue || color.value[0][0] == 'none') && validator.isValidColor(value[0])) {\n      color.value = [value];\n    } else if (validator.isValidUrl(value[0]) || validator.isValidFunction(value[0])) {\n      image.value = [value];\n    }\n  }\n\n  if (clipSet && !originSet)\n    origin.value = clip.value.slice(0);\n\n  return components;\n}\n\nfunction borderRadius(property, compactable) {\n  var values = property.value;\n  var splitAt = -1;\n\n  for (var i = 0, l = values.length; i < l; i++) {\n    if (values[i][0] == '/') {\n      splitAt = i;\n      break;\n    }\n  }\n\n  if (splitAt === 0 || splitAt === values.length - 1) {\n    throw new InvalidPropertyError('Invalid border-radius value.');\n  }\n\n  var target = _wrapDefault(property.name, property, compactable);\n  target.value = splitAt > -1 ?\n    values.slice(0, splitAt) :\n    values.slice(0);\n  target.components = fourValues(target, compactable);\n\n  var remainder = _wrapDefault(property.name, property, compactable);\n  remainder.value = splitAt > -1 ?\n    values.slice(splitAt + 1) :\n    values.slice(0);\n  remainder.components = fourValues(remainder, compactable);\n\n  for (var j = 0; j < 4; j++) {\n    target.components[j].multiplex = true;\n    target.components[j].value = target.components[j].value.concat(remainder.components[j].value);\n  }\n\n  return target.components;\n}\n\nfunction fourValues(property, compactable) {\n  var componentNames = compactable[property.name].components;\n  var components = [];\n  var value = property.value;\n\n  if (value.length < 1)\n    return [];\n\n  if (value.length < 2)\n    value[1] = value[0].slice(0);\n  if (value.length < 3)\n    value[2] = value[0].slice(0);\n  if (value.length < 4)\n    value[3] = value[1].slice(0);\n\n  for (var i = componentNames.length - 1; i >= 0; i--) {\n    var component = wrapSingle([[componentNames[i], property.important]]);\n    component.value = [value[i]];\n    components.unshift(component);\n  }\n\n  return components;\n}\n\nfunction multiplex(splitWith) {\n  return function (property, compactable, validator) {\n    var splitsAt = [];\n    var values = property.value;\n    var i, j, l, m;\n\n    // find split commas\n    for (i = 0, l = values.length; i < l; i++) {\n      if (values[i][0] == ',')\n        splitsAt.push(i);\n    }\n\n    if (splitsAt.length === 0)\n      return splitWith(property, compactable, validator);\n\n    var splitComponents = [];\n\n    // split over commas, and into components\n    for (i = 0, l = splitsAt.length; i <= l; i++) {\n      var from = i === 0 ? 0 : splitsAt[i - 1] + 1;\n      var to = i < l ? splitsAt[i] : values.length;\n\n      var _property = _wrapDefault(property.name, property, compactable);\n      _property.value = values.slice(from, to);\n\n      splitComponents.push(splitWith(_property, compactable, validator));\n    }\n\n    var components = splitComponents[0];\n\n    // group component values from each split\n    for (i = 0, l = components.length; i < l; i++) {\n      components[i].multiplex = true;\n\n      for (j = 1, m = splitComponents.length; j < m; j++) {\n        components[i].value.push([MULTIPLEX_SEPARATOR]);\n        Array.prototype.push.apply(components[i].value, splitComponents[j][i].value);\n      }\n    }\n\n    return components;\n  };\n}\n\nfunction listStyle(property, compactable, validator) {\n  var type = _wrapDefault('list-style-type', property, compactable);\n  var position = _wrapDefault('list-style-position', property, compactable);\n  var image = _wrapDefault('list-style-image', property, compactable);\n  var components = [type, position, image];\n\n  if (property.value.length == 1 && property.value[0][0] == 'inherit') {\n    type.value = position.value = image.value = [property.value[0]];\n    return components;\n  }\n\n  var values = property.value.slice(0);\n  var total = values.length;\n  var index = 0;\n\n  // `image` first...\n  for (index = 0, total = values.length; index < total; index++) {\n    if (validator.isValidUrl(values[index][0]) || values[index][0] == '0') {\n      image.value = [values[index]];\n      values.splice(index, 1);\n      break;\n    }\n  }\n\n  // ... then `type`...\n  for (index = 0, total = values.length; index < total; index++) {\n    if (validator.isValidListStyleType(values[index][0])) {\n      type.value = [values[index]];\n      values.splice(index, 1);\n      break;\n    }\n  }\n\n  // ... and what's left is a `position`\n  if (values.length > 0 && validator.isValidListStylePosition(values[0][0]))\n    position.value = [values[0]];\n\n  return components;\n}\n\nfunction widthStyleColor(property, compactable, validator) {\n  var descriptor = compactable[property.name];\n  var components = [\n    _wrapDefault(descriptor.components[0], property, compactable),\n    _wrapDefault(descriptor.components[1], property, compactable),\n    _wrapDefault(descriptor.components[2], property, compactable)\n  ];\n  var color, style, width;\n\n  for (var i = 0; i < 3; i++) {\n    var component = components[i];\n\n    if (component.name.indexOf('color') > 0)\n      color = component;\n    else if (component.name.indexOf('style') > 0)\n      style = component;\n    else\n      width = component;\n  }\n\n  if ((property.value.length == 1 && property.value[0][0] == 'inherit') ||\n      (property.value.length == 3 && property.value[0][0] == 'inherit' && property.value[1][0] == 'inherit' && property.value[2][0] == 'inherit')) {\n    color.value = style.value = width.value = [property.value[0]];\n    return components;\n  }\n\n  var values = property.value.slice(0);\n  var match, matches;\n\n  // NOTE: usually users don't follow the required order of parts in this shorthand,\n  // so we'll try to parse it caring as little about order as possible\n\n  if (values.length > 0) {\n    matches = values.filter(_widthFilter(validator));\n    match = matches.length > 1 && (matches[0][0] == 'none' || matches[0][0] == 'auto') ? matches[1] : matches[0];\n    if (match) {\n      width.value = [match];\n      values.splice(values.indexOf(match), 1);\n    }\n  }\n\n  if (values.length > 0) {\n    match = values.filter(_styleFilter(validator))[0];\n    if (match) {\n      style.value = [match];\n      values.splice(values.indexOf(match), 1);\n    }\n  }\n\n  if (values.length > 0) {\n    match = values.filter(_colorFilter(validator))[0];\n    if (match) {\n      color.value = [match];\n      values.splice(values.indexOf(match), 1);\n    }\n  }\n\n  return components;\n}\n\nmodule.exports = {\n  background: background,\n  border: widthStyleColor,\n  borderRadius: borderRadius,\n  fourValues: fourValues,\n  listStyle: listStyle,\n  multiplex: multiplex,\n  outline: widthStyleColor\n};\n","function InvalidPropertyError(message) {\n  this.name = 'InvalidPropertyError';\n  this.message = message;\n  this.stack = (new Error()).stack;\n}\n\nInvalidPropertyError.prototype = Object.create(Error.prototype);\nInvalidPropertyError.prototype.constructor = InvalidPropertyError;\n\nmodule.exports = InvalidPropertyError;\n","// Functions that decide what value can override what.\n// The main purpose is to disallow removing CSS fallbacks.\n// A separate implementation is needed for every different kind of CSS property.\n// -----\n// The generic idea is that properties that have wider browser support are 'more understandable'\n// than others and that 'less understandable' values can't override more understandable ones.\n\n// Use when two tokens of the same property can always be merged\nfunction always() {\n  return true;\n}\n\nfunction alwaysButIntoFunction(property1, property2, validator) {\n  var value1 = property1.value[0][0];\n  var value2 = property2.value[0][0];\n\n  var validFunction1 = validator.isValidFunction(value1);\n  var validFunction2 = validator.isValidFunction(value2);\n\n  if (validFunction1 && validFunction2) {\n    return validator.areSameFunction(value1, value2);\n  } else if (!validFunction1 && validFunction2) {\n    return false;\n  } else {\n    return true;\n  }\n}\n\nfunction backgroundImage(property1, property2, validator) {\n  // The idea here is that 'more understandable' values override 'less understandable' values, but not vice versa\n  // Understandability: (none | url | inherit) > (same function) > (same value)\n\n  // (none | url)\n  var image1 = property1.value[0][0];\n  var image2 = property2.value[0][0];\n\n  if (image2 == 'none' || image2 == 'inherit' || validator.isValidUrl(image2))\n    return true;\n  if (image1 == 'none' || image1 == 'inherit' || validator.isValidUrl(image1))\n    return false;\n\n  // Functions with the same name can override each other; same values can override each other\n  return sameFunctionOrValue(property1, property2, validator);\n}\n\nfunction border(property1, property2, validator) {\n  return color(property1.components[2], property2.components[2], validator);\n}\n\n// Use for color properties (color, background-color, border-color, etc.)\nfunction color(property1, property2, validator) {\n  // The idea here is that 'more understandable' values override 'less understandable' values, but not vice versa\n  // Understandability: (hex | named) > (rgba | hsla) > (same function name) > anything else\n  // NOTE: at this point rgb and hsl are replaced by hex values by clean-css\n\n  var color1 = property1.value[0][0];\n  var color2 = property2.value[0][0];\n\n  if (!validator.colorOpacity && (validator.isValidRgbaColor(color1) || validator.isValidHslaColor(color1)))\n    return false;\n  if (!validator.colorOpacity && (validator.isValidRgbaColor(color2) || validator.isValidHslaColor(color2)))\n    return false;\n\n  // (hex | named)\n  if (validator.isValidNamedColor(color2) || validator.isValidHexColor(color2))\n    return true;\n  if (validator.isValidNamedColor(color1) || validator.isValidHexColor(color1))\n    return false;\n\n  // (rgba|hsla)\n  if (validator.isValidRgbaColor(color2) || validator.isValidHslaColor(color2))\n    return true;\n  if (validator.isValidRgbaColor(color1) || validator.isValidHslaColor(color1))\n    return false;\n\n  // Functions with the same name can override each other; same values can override each other\n  return sameFunctionOrValue(property1, property2, validator);\n}\n\nfunction twoOptionalFunctions(property1, property2, validator) {\n  var value1 = property1.value[0][0];\n  var value2 = property2.value[0][0];\n\n  return !(validator.isValidFunction(value1) ^ validator.isValidFunction(value2));\n}\n\nfunction sameValue(property1, property2) {\n  var value1 = property1.value[0][0];\n  var value2 = property2.value[0][0];\n\n  return value1 === value2;\n}\n\nfunction sameFunctionOrValue(property1, property2, validator) {\n  var value1 = property1.value[0][0];\n  var value2 = property2.value[0][0];\n\n  // Functions with the same name can override each other\n  if (validator.areSameFunction(value1, value2))\n    return true;\n\n  return value1 === value2;\n}\n\n// Use for properties containing CSS units (margin-top, padding-left, etc.)\nfunction unit(property1, property2, validator) {\n  // The idea here is that 'more understandable' values override 'less understandable' values, but not vice versa\n  // Understandability: (unit without functions) > (same functions | standard functions) > anything else\n  // NOTE: there is no point in having different vendor-specific functions override each other or standard functions,\n  //       or having standard functions override vendor-specific functions, but standard functions can override each other\n  // NOTE: vendor-specific property values are not taken into consideration here at the moment\n  var value1 = property1.value[0][0];\n  var value2 = property2.value[0][0];\n\n  if (validator.isValidAndCompatibleUnitWithoutFunction(value1) && !validator.isValidAndCompatibleUnitWithoutFunction(value2))\n    return false;\n\n  if (validator.isValidUnitWithoutFunction(value2))\n    return true;\n  if (validator.isValidUnitWithoutFunction(value1))\n    return false;\n\n  // Standard non-vendor-prefixed functions can override each other\n  if (validator.isValidFunctionWithoutVendorPrefix(value2) && validator.isValidFunctionWithoutVendorPrefix(value1)) {\n    return true;\n  }\n\n  // Functions with the same name can override each other; same values can override each other\n  return sameFunctionOrValue(property1, property2, validator);\n}\n\nmodule.exports = {\n  always: always,\n  alwaysButIntoFunction: alwaysButIntoFunction,\n  backgroundImage: backgroundImage,\n  border: border,\n  color: color,\n  sameValue: sameValue,\n  sameFunctionOrValue: sameFunctionOrValue,\n  twoOptionalFunctions: twoOptionalFunctions,\n  unit: unit\n};\n","var shallowClone = require('./clone').shallow;\nvar MULTIPLEX_SEPARATOR = ',';\nvar SIZE_POSITION_SEPARATOR = '/';\n\nfunction isInheritOnly(values) {\n  for (var i = 0, l = values.length; i < l; i++) {\n    var value = values[i][0];\n\n    if (value != 'inherit' && value != MULTIPLEX_SEPARATOR && value != SIZE_POSITION_SEPARATOR)\n      return false;\n  }\n\n  return true;\n}\n\nfunction background(property, compactable, lastInMultiplex) {\n  var components = property.components;\n  var restored = [];\n  var needsOne, needsBoth;\n\n  function restoreValue(component) {\n    Array.prototype.unshift.apply(restored, component.value);\n  }\n\n  function isDefaultValue(component) {\n    var descriptor = compactable[component.name];\n    if (descriptor.doubleValues) {\n      if (descriptor.defaultValue.length == 1)\n        return component.value[0][0] == descriptor.defaultValue[0] && (component.value[1] ? component.value[1][0] == descriptor.defaultValue[0] : true);\n      else\n        return component.value[0][0] == descriptor.defaultValue[0] && (component.value[1] ? component.value[1][0] : component.value[0][0]) == descriptor.defaultValue[1];\n    } else {\n      return component.value[0][0] == descriptor.defaultValue;\n    }\n  }\n\n  for (var i = components.length - 1; i >= 0; i--) {\n    var component = components[i];\n    var isDefault = isDefaultValue(component);\n\n    if (component.name == 'background-clip') {\n      var originComponent = components[i - 1];\n      var isOriginDefault = isDefaultValue(originComponent);\n\n      needsOne = component.value[0][0] == originComponent.value[0][0];\n\n      needsBoth = !needsOne && (\n        (isOriginDefault && !isDefault) ||\n        (!isOriginDefault && !isDefault) ||\n        (!isOriginDefault && isDefault && component.value[0][0] != originComponent.value[0][0]));\n\n      if (needsOne) {\n        restoreValue(originComponent);\n      } else if (needsBoth) {\n        restoreValue(component);\n        restoreValue(originComponent);\n      }\n\n      i--;\n    } else if (component.name == 'background-size') {\n      var positionComponent = components[i - 1];\n      var isPositionDefault = isDefaultValue(positionComponent);\n\n      needsOne = !isPositionDefault && isDefault;\n\n      needsBoth = !needsOne &&\n        (isPositionDefault && !isDefault || !isPositionDefault && !isDefault);\n\n      if (needsOne) {\n        restoreValue(positionComponent);\n      } else if (needsBoth) {\n        restoreValue(component);\n        restored.unshift([SIZE_POSITION_SEPARATOR]);\n        restoreValue(positionComponent);\n      } else if (positionComponent.value.length == 1) {\n        restoreValue(positionComponent);\n      }\n\n      i--;\n    } else {\n      if (isDefault || compactable[component.name].multiplexLastOnly && !lastInMultiplex)\n        continue;\n\n      restoreValue(component);\n    }\n  }\n\n  if (restored.length === 0 && property.value.length == 1 && property.value[0][0] == '0')\n    restored.push(property.value[0]);\n\n  if (restored.length === 0)\n    restored.push([compactable[property.name].defaultValue]);\n\n  if (isInheritOnly(restored))\n    return [restored[0]];\n\n  return restored;\n}\n\nfunction borderRadius(property, compactable) {\n  if (property.multiplex) {\n    var horizontal = shallowClone(property);\n    var vertical = shallowClone(property);\n\n    for (var i = 0; i < 4; i++) {\n      var component = property.components[i];\n\n      var horizontalComponent = shallowClone(property);\n      horizontalComponent.value = [component.value[0]];\n      horizontal.components.push(horizontalComponent);\n\n      var verticalComponent = shallowClone(property);\n      // FIXME: only shorthand compactor (see breakup#borderRadius) knows that border radius\n      // longhands have two values, whereas tokenizer does not care about populating 2nd value\n      // if it's missing, hence this fallback\n      verticalComponent.value = [component.value[1] || component.value[0]];\n      vertical.components.push(verticalComponent);\n    }\n\n    var horizontalValues = fourValues(horizontal, compactable);\n    var verticalValues = fourValues(vertical, compactable);\n\n    if (horizontalValues.length == verticalValues.length &&\n        horizontalValues[0][0] == verticalValues[0][0] &&\n        (horizontalValues.length > 1 ? horizontalValues[1][0] == verticalValues[1][0] : true) &&\n        (horizontalValues.length > 2 ? horizontalValues[2][0] == verticalValues[2][0] : true) &&\n        (horizontalValues.length > 3 ? horizontalValues[3][0] == verticalValues[3][0] : true)) {\n      return horizontalValues;\n    } else {\n      return horizontalValues.concat([['/']]).concat(verticalValues);\n    }\n  } else {\n    return fourValues(property, compactable);\n  }\n}\n\nfunction fourValues(property) {\n  var components = property.components;\n  var value1 = components[0].value[0];\n  var value2 = components[1].value[0];\n  var value3 = components[2].value[0];\n  var value4 = components[3].value[0];\n\n  if (value1[0] == value2[0] && value1[0] == value3[0] && value1[0] == value4[0]) {\n    return [value1];\n  } else if (value1[0] == value3[0] && value2[0] == value4[0]) {\n    return [value1, value2];\n  } else if (value2[0] == value4[0]) {\n    return [value1, value2, value3];\n  } else {\n    return [value1, value2, value3, value4];\n  }\n}\n\nfunction multiplex(restoreWith) {\n  return function (property, compactable) {\n    if (!property.multiplex)\n      return restoreWith(property, compactable, true);\n\n    var multiplexSize = 0;\n    var restored = [];\n    var componentMultiplexSoFar = {};\n    var i, l;\n\n    // At this point we don't know what's the multiplex size, e.g. how many background layers are there\n    for (i = 0, l = property.components[0].value.length; i < l; i++) {\n      if (property.components[0].value[i][0] == MULTIPLEX_SEPARATOR)\n        multiplexSize++;\n    }\n\n    for (i = 0; i <= multiplexSize; i++) {\n      var _property = shallowClone(property);\n\n      // We split multiplex into parts and restore them one by one\n      for (var j = 0, m = property.components.length; j < m; j++) {\n        var componentToClone = property.components[j];\n        var _component = shallowClone(componentToClone);\n        _property.components.push(_component);\n\n        // The trick is some properties has more than one value, so we iterate over values looking for\n        // a multiplex separator - a comma\n        for (var k = componentMultiplexSoFar[_component.name] || 0, n = componentToClone.value.length; k < n; k++) {\n          if (componentToClone.value[k][0] == MULTIPLEX_SEPARATOR) {\n            componentMultiplexSoFar[_component.name] = k + 1;\n            break;\n          }\n\n          _component.value.push(componentToClone.value[k]);\n        }\n      }\n\n      // No we can restore shorthand value\n      var lastInMultiplex = i == multiplexSize;\n      var _restored = restoreWith(_property, compactable, lastInMultiplex);\n      Array.prototype.push.apply(restored, _restored);\n\n      if (i < multiplexSize)\n        restored.push([',']);\n    }\n\n    return restored;\n  };\n}\n\nfunction withoutDefaults(property, compactable) {\n  var components = property.components;\n  var restored = [];\n\n  for (var i = components.length - 1; i >= 0; i--) {\n    var component = components[i];\n    var descriptor = compactable[component.name];\n\n    if (component.value[0][0] != descriptor.defaultValue)\n      restored.unshift(component.value[0]);\n  }\n\n  if (restored.length === 0)\n    restored.push([compactable[property.name].defaultValue]);\n\n  if (isInheritOnly(restored))\n    return [restored[0]];\n\n  return restored;\n}\n\nmodule.exports = {\n  background: background,\n  borderRadius: borderRadius,\n  fourValues: fourValues,\n  multiplex: multiplex,\n  withoutDefaults: withoutDefaults\n};\n","var wrapSingle = require('./wrap-for-optimizing').single;\n\nfunction deep(property) {\n  var cloned = shallow(property);\n  for (var i = property.components.length - 1; i >= 0; i--) {\n    var component = shallow(property.components[i]);\n    component.value = property.components[i].value.slice(0);\n    cloned.components.unshift(component);\n  }\n\n  cloned.dirty = true;\n  cloned.value = property.value.slice(0);\n\n  return cloned;\n}\n\nfunction shallow(property) {\n  var cloned = wrapSingle([[property.name, property.important, property.hack]]);\n  cloned.unused = false;\n  return cloned;\n}\n\nmodule.exports = {\n  deep: deep,\n  shallow: shallow\n};\n","function removeUnused(properties) {\n  for (var i = properties.length - 1; i >= 0; i--) {\n    var property = properties[i];\n\n    if (property.unused)\n      property.all.splice(property.position, 1);\n  }\n}\n\nmodule.exports = removeUnused;\n","var optimizeProperties = require('../properties/optimizer');\n\nvar removeDuplicates = require('./remove-duplicates');\nvar mergeAdjacent = require('./merge-adjacent');\nvar reduceNonAdjacent = require('./reduce-non-adjacent');\nvar mergeNonAdjacentBySelector = require('./merge-non-adjacent-by-selector');\nvar mergeNonAdjacentByBody = require('./merge-non-adjacent-by-body');\nvar restructure = require('./restructure');\nvar removeDuplicateMediaQueries = require('./remove-duplicate-media-queries');\nvar mergeMediaQueries = require('./merge-media-queries');\n\nfunction removeEmpty(tokens) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    var isEmpty = false;\n\n    switch (token[0]) {\n      case 'selector':\n        isEmpty = token[1].length === 0 || token[2].length === 0;\n        break;\n      case 'block':\n        removeEmpty(token[2]);\n        isEmpty = token[2].length === 0;\n    }\n\n    if (isEmpty) {\n      tokens.splice(i, 1);\n      i--;\n      l--;\n    }\n  }\n}\n\nfunction recursivelyOptimizeBlocks(tokens, options, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] == 'block') {\n      var isKeyframes = /@(-moz-|-o-|-webkit-)?keyframes/.test(token[1][0]);\n      optimize(token[2], options, context, !isKeyframes);\n    }\n  }\n}\n\nfunction recursivelyOptimizeProperties(tokens, options, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n      case 'selector':\n        optimizeProperties(token[1], token[2], false, true, options, context);\n        break;\n      case 'block':\n        recursivelyOptimizeProperties(token[2], options, context);\n    }\n  }\n}\n\nfunction optimize(tokens, options, context, withRestructuring) {\n  recursivelyOptimizeBlocks(tokens, options, context);\n  recursivelyOptimizeProperties(tokens, options, context);\n\n  removeDuplicates(tokens);\n  mergeAdjacent(tokens, options, context);\n  reduceNonAdjacent(tokens, options, context);\n\n  mergeNonAdjacentBySelector(tokens, options, context);\n  mergeNonAdjacentByBody(tokens, options);\n\n  if (options.restructuring && withRestructuring) {\n    restructure(tokens, options);\n    mergeAdjacent(tokens, options, context);\n  }\n\n  if (options.mediaMerging) {\n    removeDuplicateMediaQueries(tokens);\n    var reduced = mergeMediaQueries(tokens);\n    for (var i = reduced.length - 1; i >= 0; i--) {\n      optimize(reduced[i][2], options, context, false);\n    }\n  }\n\n  removeEmpty(tokens);\n}\n\nmodule.exports = optimize;\n","var compactable = require('./compactable');\nvar wrapForOptimizing = require('./wrap-for-optimizing').all;\nvar populateComponents = require('./populate-components');\nvar compactOverrides = require('./override-compactor');\nvar compactShorthands = require('./shorthand-compactor');\nvar removeUnused = require('./remove-unused');\nvar restoreFromOptimizing = require('./restore-from-optimizing');\nvar stringifyProperty = require('../stringifier/one-time').property;\n\nvar shorthands = {\n  'animation-delay': ['animation'],\n  'animation-direction': ['animation'],\n  'animation-duration': ['animation'],\n  'animation-fill-mode': ['animation'],\n  'animation-iteration-count': ['animation'],\n  'animation-name': ['animation'],\n  'animation-play-state': ['animation'],\n  'animation-timing-function': ['animation'],\n  '-moz-animation-delay': ['-moz-animation'],\n  '-moz-animation-direction': ['-moz-animation'],\n  '-moz-animation-duration': ['-moz-animation'],\n  '-moz-animation-fill-mode': ['-moz-animation'],\n  '-moz-animation-iteration-count': ['-moz-animation'],\n  '-moz-animation-name': ['-moz-animation'],\n  '-moz-animation-play-state': ['-moz-animation'],\n  '-moz-animation-timing-function': ['-moz-animation'],\n  '-o-animation-delay': ['-o-animation'],\n  '-o-animation-direction': ['-o-animation'],\n  '-o-animation-duration': ['-o-animation'],\n  '-o-animation-fill-mode': ['-o-animation'],\n  '-o-animation-iteration-count': ['-o-animation'],\n  '-o-animation-name': ['-o-animation'],\n  '-o-animation-play-state': ['-o-animation'],\n  '-o-animation-timing-function': ['-o-animation'],\n  '-webkit-animation-delay': ['-webkit-animation'],\n  '-webkit-animation-direction': ['-webkit-animation'],\n  '-webkit-animation-duration': ['-webkit-animation'],\n  '-webkit-animation-fill-mode': ['-webkit-animation'],\n  '-webkit-animation-iteration-count': ['-webkit-animation'],\n  '-webkit-animation-name': ['-webkit-animation'],\n  '-webkit-animation-play-state': ['-webkit-animation'],\n  '-webkit-animation-timing-function': ['-webkit-animation'],\n  'border-color': ['border'],\n  'border-style': ['border'],\n  'border-width': ['border'],\n  'border-bottom': ['border'],\n  'border-bottom-color': ['border-bottom', 'border-color', 'border'],\n  'border-bottom-style': ['border-bottom', 'border-style', 'border'],\n  'border-bottom-width': ['border-bottom', 'border-width', 'border'],\n  'border-left': ['border'],\n  'border-left-color': ['border-left', 'border-color', 'border'],\n  'border-left-style': ['border-left', 'border-style', 'border'],\n  'border-left-width': ['border-left', 'border-width', 'border'],\n  'border-right': ['border'],\n  'border-right-color': ['border-right', 'border-color', 'border'],\n  'border-right-style': ['border-right', 'border-style', 'border'],\n  'border-right-width': ['border-right', 'border-width', 'border'],\n  'border-top': ['border'],\n  'border-top-color': ['border-top', 'border-color', 'border'],\n  'border-top-style': ['border-top', 'border-style', 'border'],\n  'border-top-width': ['border-top', 'border-width', 'border'],\n  'font-family': ['font'],\n  'font-size': ['font'],\n  'font-style': ['font'],\n  'font-variant': ['font'],\n  'font-weight': ['font'],\n  'transition-delay': ['transition'],\n  'transition-duration': ['transition'],\n  'transition-property': ['transition'],\n  'transition-timing-function': ['transition'],\n  '-moz-transition-delay': ['-moz-transition'],\n  '-moz-transition-duration': ['-moz-transition'],\n  '-moz-transition-property': ['-moz-transition'],\n  '-moz-transition-timing-function': ['-moz-transition'],\n  '-o-transition-delay': ['-o-transition'],\n  '-o-transition-duration': ['-o-transition'],\n  '-o-transition-property': ['-o-transition'],\n  '-o-transition-timing-function': ['-o-transition'],\n  '-webkit-transition-delay': ['-webkit-transition'],\n  '-webkit-transition-duration': ['-webkit-transition'],\n  '-webkit-transition-property': ['-webkit-transition'],\n  '-webkit-transition-timing-function': ['-webkit-transition']\n};\n\nfunction _optimize(properties, mergeAdjacent, aggressiveMerging, validator) {\n  var overrideMapping = {};\n  var lastName = null;\n  var lastProperty;\n  var j;\n\n  function mergeablePosition(position) {\n    if (mergeAdjacent === false || mergeAdjacent === true)\n      return mergeAdjacent;\n\n    return mergeAdjacent.indexOf(position) > -1;\n  }\n\n  function sameValue(position) {\n    var left = properties[position - 1];\n    var right = properties[position];\n\n    return stringifyProperty(left.all, left.position) == stringifyProperty(right.all, right.position);\n  }\n\n  propertyLoop:\n  for (var position = 0, total = properties.length; position < total; position++) {\n    var property = properties[position];\n    var _name = (property.name == '-ms-filter' || property.name == 'filter') ?\n      (lastName == 'background' || lastName == 'background-image' ? lastName : property.name) :\n      property.name;\n    var isImportant = property.important;\n    var isHack = property.hack;\n\n    if (property.unused)\n      continue;\n\n    if (position > 0 && lastProperty && _name == lastName && isImportant == lastProperty.important && isHack == lastProperty.hack && sameValue(position) && !lastProperty.unused) {\n      property.unused = true;\n      continue;\n    }\n\n    // comment is necessary - we assume that if two properties are one after another\n    // then it is intentional way of redefining property which may not be widely supported\n    // e.g. a{display:inline-block;display:-moz-inline-box}\n    // however if `mergeablePosition` yields true then the rule does not apply\n    // (e.g merging two adjacent selectors: `a{display:block}a{display:block}`)\n    if (_name in overrideMapping && (aggressiveMerging && _name != lastName || mergeablePosition(position))) {\n      var toOverridePositions = overrideMapping[_name];\n      var canOverride = compactable[_name] && compactable[_name].canOverride;\n      var anyRemoved = false;\n\n      for (j = toOverridePositions.length - 1; j >= 0; j--) {\n        var toRemove = properties[toOverridePositions[j]];\n        var longhandToShorthand = toRemove.name != _name;\n        var wasImportant = toRemove.important;\n        var wasHack = toRemove.hack;\n\n        if (toRemove.unused)\n          continue;\n\n        if (longhandToShorthand && wasImportant)\n          continue;\n\n        if (!wasImportant && (wasHack && !isHack || !wasHack && isHack))\n          continue;\n\n        if (wasImportant && (isHack == 'star' || isHack == 'underscore'))\n          continue;\n\n        if (!wasHack && !isHack && !longhandToShorthand && canOverride && !canOverride(toRemove, property, validator))\n          continue;\n\n        if (wasImportant && !isImportant || wasImportant && isHack) {\n          property.unused = true;\n          lastProperty = property;\n          continue propertyLoop;\n        } else {\n          anyRemoved = true;\n          toRemove.unused = true;\n        }\n      }\n\n      if (anyRemoved) {\n        position = -1;\n        lastProperty = null;\n        lastName = null;\n        overrideMapping = {};\n        continue;\n      }\n    } else {\n      overrideMapping[_name] = overrideMapping[_name] || [];\n      overrideMapping[_name].push(position);\n\n      // TODO: to be removed with\n      // certain shorthand (see values of `shorthands`) should trigger removal of\n      // longhand properties (see keys of `shorthands`)\n      var _shorthands = shorthands[_name];\n      if (_shorthands) {\n        for (j = _shorthands.length - 1; j >= 0; j--) {\n          var shorthand = _shorthands[j];\n          overrideMapping[shorthand] = overrideMapping[shorthand] || [];\n          overrideMapping[shorthand].push(position);\n        }\n      }\n    }\n\n    lastName = _name;\n    lastProperty = property;\n  }\n}\n\nfunction optimize(selector, properties, mergeAdjacent, withCompacting, options, context) {\n  var validator = context.validator;\n  var warnings = context.warnings;\n\n  var _properties = wrapForOptimizing(properties);\n  populateComponents(_properties, validator, warnings);\n  _optimize(_properties, mergeAdjacent, options.aggressiveMerging, validator);\n\n  for (var i = 0, l = _properties.length; i < l; i++) {\n    var _property = _properties[i];\n    if (_property.variable && _property.block)\n      optimize(selector, _property.value[0], mergeAdjacent, withCompacting, options, context);\n  }\n\n  if (withCompacting && options.shorthandCompacting) {\n    compactOverrides(_properties, options.compatibility, validator);\n    compactShorthands(_properties, options.sourceMap, validator);\n  }\n\n  restoreFromOptimizing(_properties);\n  removeUnused(_properties);\n}\n\nmodule.exports = optimize;\n","var compactable = require('./compactable');\nvar InvalidPropertyError = require('./invalid-property-error');\n\nfunction populateComponents(properties, validator, warnings) {\n  for (var i = properties.length - 1; i >= 0; i--) {\n    var property = properties[i];\n    var descriptor = compactable[property.name];\n\n    if (descriptor && descriptor.shorthand) {\n      property.shorthand = true;\n      property.dirty = true;\n\n      try {\n        property.components = descriptor.breakUp(property, compactable, validator);\n      } catch (e) {\n        if (e instanceof InvalidPropertyError) {\n          property.components = []; // this will set property.unused to true below\n          warnings.push(e.message);\n        } else {\n          throw e;\n        }\n      }\n\n      if (property.components.length > 0)\n        property.multiplex = property.components[0].multiplex;\n      else\n        property.unused = true;\n    }\n  }\n}\n\nmodule.exports = populateComponents;\n","var canOverride = require('./can-override');\nvar compactable = require('./compactable');\nvar deepClone = require('./clone').deep;\nvar shallowClone = require('./clone').shallow;\nvar hasInherit = require('./has-inherit');\nvar restoreFromOptimizing = require('./restore-from-optimizing');\nvar everyCombination = require('./every-combination');\nvar sameVendorPrefixesIn = require('./vendor-prefixes').same;\n\nvar stringifyProperty = require('../stringifier/one-time').property;\n\nvar MULTIPLEX_SEPARATOR = ',';\n\n// Used when searching for a component that matches property\nfunction nameMatchFilter(to) {\n  return function (property) {\n    return to.name === property.name;\n  };\n}\n\nfunction wouldBreakCompatibility(property, validator) {\n  for (var i = 0; i < property.components.length; i++) {\n    var component = property.components[i];\n    var descriptor = compactable[component.name];\n    var canOverride = descriptor && descriptor.canOverride || canOverride.sameValue;\n\n    var _component = shallowClone(component);\n    _component.value = [[descriptor.defaultValue]];\n\n    if (!canOverride(_component, component, validator))\n      return true;\n  }\n\n  return false;\n}\n\nfunction isComponentOf(shorthand, longhand) {\n  return compactable[shorthand.name].components.indexOf(longhand.name) > -1;\n}\n\nfunction overrideIntoMultiplex(property, by) {\n  by.unused = true;\n\n  turnIntoMultiplex(by, multiplexSize(property));\n  property.value = by.value;\n}\n\nfunction overrideByMultiplex(property, by) {\n  by.unused = true;\n  property.multiplex = true;\n  property.value = by.value;\n}\n\nfunction overrideSimple(property, by) {\n  by.unused = true;\n  property.value = by.value;\n}\n\nfunction override(property, by) {\n  if (by.multiplex)\n    overrideByMultiplex(property, by);\n  else if (property.multiplex)\n    overrideIntoMultiplex(property, by);\n  else\n    overrideSimple(property, by);\n}\n\nfunction overrideShorthand(property, by) {\n  by.unused = true;\n\n  for (var i = 0, l = property.components.length; i < l; i++) {\n    override(property.components[i], by.components[i], property.multiplex);\n  }\n}\n\nfunction turnIntoMultiplex(property, size) {\n  property.multiplex = true;\n\n  for (var i = 0, l = property.components.length; i < l; i++) {\n    var component = property.components[i];\n    if (component.multiplex)\n      continue;\n\n    var value = component.value.slice(0);\n\n    for (var j = 1; j < size; j++) {\n      component.value.push([MULTIPLEX_SEPARATOR]);\n      Array.prototype.push.apply(component.value, value);\n    }\n  }\n}\n\nfunction multiplexSize(component) {\n  var size = 0;\n\n  for (var i = 0, l = component.value.length; i < l; i++) {\n    if (component.value[i][0] == MULTIPLEX_SEPARATOR)\n      size++;\n  }\n\n  return size + 1;\n}\n\nfunction lengthOf(property) {\n  var fakeAsArray = [[property.name]].concat(property.value);\n  return stringifyProperty([fakeAsArray], 0).length;\n}\n\nfunction moreSameShorthands(properties, startAt, name) {\n  // Since we run the main loop in `compactOverrides` backwards, at this point some\n  // properties may not be marked as unused.\n  // We should consider reverting the order if possible\n  var count = 0;\n\n  for (var i = startAt; i >= 0; i--) {\n    if (properties[i].name == name && !properties[i].unused)\n      count++;\n    if (count > 1)\n      break;\n  }\n\n  return count > 1;\n}\n\nfunction overridingFunction(shorthand, validator) {\n  for (var i = 0, l = shorthand.components.length; i < l; i++) {\n    if (anyValue(validator.isValidFunction, shorthand.components[i]))\n      return true;\n  }\n\n  return false;\n}\n\nfunction anyValue(fn, property) {\n  for (var i = 0, l = property.value.length; i < l; i++) {\n    if (property.value[i][0] == MULTIPLEX_SEPARATOR)\n      continue;\n\n    if (fn(property.value[i][0]))\n      return true;\n  }\n\n  return false;\n}\n\nfunction wouldResultInLongerValue(left, right) {\n  if (!left.multiplex && !right.multiplex || left.multiplex && right.multiplex)\n    return false;\n\n  var multiplex = left.multiplex ? left : right;\n  var simple = left.multiplex ? right : left;\n  var component;\n\n  var multiplexClone = deepClone(multiplex);\n  restoreFromOptimizing([multiplexClone]);\n\n  var simpleClone = deepClone(simple);\n  restoreFromOptimizing([simpleClone]);\n\n  var lengthBefore = lengthOf(multiplexClone) + 1 + lengthOf(simpleClone);\n\n  if (left.multiplex) {\n    component = multiplexClone.components.filter(nameMatchFilter(simpleClone))[0];\n    overrideIntoMultiplex(component, simpleClone);\n  } else {\n    component = simpleClone.components.filter(nameMatchFilter(multiplexClone))[0];\n    turnIntoMultiplex(simpleClone, multiplexSize(multiplexClone));\n    overrideByMultiplex(component, multiplexClone);\n  }\n\n  restoreFromOptimizing([simpleClone]);\n\n  var lengthAfter = lengthOf(simpleClone);\n\n  return lengthBefore < lengthAfter;\n}\n\nfunction isCompactable(property) {\n  return property.name in compactable;\n}\n\nfunction noneOverrideHack(left, right) {\n  return !left.multiplex &&\n    (left.name == 'background' || left.name == 'background-image') &&\n    right.multiplex &&\n    (right.name == 'background' || right.name == 'background-image') &&\n    anyLayerIsNone(right.value);\n}\n\nfunction anyLayerIsNone(values) {\n  var layers = intoLayers(values);\n\n  for (var i = 0, l = layers.length; i < l; i++) {\n    if (layers[i].length == 1 && layers[i][0][0] == 'none')\n      return true;\n  }\n\n  return false;\n}\n\nfunction intoLayers(values) {\n  var layers = [];\n\n  for (var i = 0, layer = [], l = values.length; i < l; i++) {\n    var value = values[i];\n    if (value[0] == MULTIPLEX_SEPARATOR) {\n      layers.push(layer);\n      layer = [];\n    } else {\n      layer.push(value);\n    }\n  }\n\n  layers.push(layer);\n  return layers;\n}\n\nfunction compactOverrides(properties, compatibility, validator) {\n  var mayOverride, right, left, component;\n  var i, j, k;\n\n  propertyLoop:\n  for (i = properties.length - 1; i >= 0; i--) {\n    right = properties[i];\n\n    if (!isCompactable(right))\n      continue;\n\n    if (right.variable)\n      continue;\n\n    mayOverride = compactable[right.name].canOverride || canOverride.sameValue;\n\n    for (j = i - 1; j >= 0; j--) {\n      left = properties[j];\n\n      if (!isCompactable(left))\n        continue;\n\n      if (left.variable)\n        continue;\n\n      if (left.unused || right.unused)\n        continue;\n\n      if (left.hack && !right.hack || !left.hack && right.hack)\n        continue;\n\n      if (hasInherit(right))\n        continue;\n\n      if (noneOverrideHack(left, right))\n        continue;\n\n      if (!left.shorthand && right.shorthand && isComponentOf(right, left)) {\n        // maybe `left` can be overridden by `right` which is a shorthand?\n        if (!right.important && left.important)\n          continue;\n\n        if (!sameVendorPrefixesIn([left], right.components))\n          continue;\n\n        if (!anyValue(validator.isValidFunction, left) && overridingFunction(right, validator))\n          continue;\n\n        component = right.components.filter(nameMatchFilter(left))[0];\n        mayOverride = (compactable[left.name] && compactable[left.name].canOverride) || canOverride.sameValue;\n        if (everyCombination(mayOverride, left, component, validator)) {\n          left.unused = true;\n        }\n      } else if (left.shorthand && !right.shorthand && isComponentOf(left, right)) {\n        // maybe `right` can be pulled into `left` which is a shorthand?\n        if (right.important && !left.important)\n          continue;\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue;\n        }\n\n        // Pending more clever algorithm in #527\n        if (moreSameShorthands(properties, i - 1, left.name))\n          continue;\n\n        if (overridingFunction(left, validator))\n          continue;\n\n        component = left.components.filter(nameMatchFilter(right))[0];\n        if (everyCombination(mayOverride, component, right, validator)) {\n          var disabledBackgroundMerging =\n            !compatibility.properties.backgroundClipMerging && component.name.indexOf('background-clip') > -1 ||\n            !compatibility.properties.backgroundOriginMerging && component.name.indexOf('background-origin') > -1 ||\n            !compatibility.properties.backgroundSizeMerging && component.name.indexOf('background-size') > -1;\n          var nonMergeableValue = compactable[right.name].nonMergeableValue === right.value[0][0];\n\n          if (disabledBackgroundMerging || nonMergeableValue)\n            continue;\n\n          if (!compatibility.properties.merging && wouldBreakCompatibility(left, validator))\n            continue;\n\n          if (component.value[0][0] != right.value[0][0] && (hasInherit(left) || hasInherit(right)))\n            continue;\n\n          if (wouldResultInLongerValue(left, right))\n            continue;\n\n          if (!left.multiplex && right.multiplex)\n            turnIntoMultiplex(left, multiplexSize(right));\n\n          override(component, right);\n          left.dirty = true;\n        }\n      } else if (left.shorthand && right.shorthand && left.name == right.name) {\n        // merge if all components can be merged\n\n        if (!left.multiplex && right.multiplex)\n          continue;\n\n        if (!right.important && left.important) {\n          right.unused = true;\n          continue propertyLoop;\n        }\n\n        if (right.important && !left.important) {\n          left.unused = true;\n          continue;\n        }\n\n        for (k = left.components.length - 1; k >= 0; k--) {\n          var leftComponent = left.components[k];\n          var rightComponent = right.components[k];\n\n          mayOverride = compactable[leftComponent.name].canOverride || canOverride.sameValue;\n          if (!everyCombination(mayOverride, leftComponent, rightComponent, validator))\n            continue propertyLoop;\n          if (!everyCombination(canOverride.twoOptionalFunctions, leftComponent, rightComponent, validator) && validator.isValidFunction(rightComponent))\n            continue propertyLoop;\n        }\n\n        overrideShorthand(left, right);\n        left.dirty = true;\n      } else if (left.shorthand && right.shorthand && isComponentOf(left, right)) {\n        // border is a shorthand but any of its components is a shorthand too\n\n        if (!left.important && right.important)\n          continue;\n\n        component = left.components.filter(nameMatchFilter(right))[0];\n        mayOverride = compactable[right.name].canOverride || canOverride.sameValue;\n        if (!everyCombination(mayOverride, component, right, validator))\n          continue;\n\n        if (left.important && !right.important) {\n          right.unused = true;\n          continue;\n        }\n\n        var rightRestored = compactable[right.name].restore(right, compactable);\n        if (rightRestored.length > 1)\n          continue;\n\n        component = left.components.filter(nameMatchFilter(right))[0];\n        override(component, right);\n        right.dirty = true;\n      } else if (left.name == right.name) {\n        // two non-shorthands should be merged based on understandability\n\n        if (left.important && !right.important) {\n          right.unused = true;\n          continue;\n        }\n\n        mayOverride = compactable[right.name].canOverride || canOverride.sameValue;\n        if (!everyCombination(mayOverride, left, right, validator))\n          continue;\n\n        left.unused = true;\n      }\n    }\n  }\n}\n\nmodule.exports = compactOverrides;\n","function hasInherit(property) {\n  for (var i = property.value.length - 1; i >= 0; i--) {\n    if (property.value[i][0] == 'inherit')\n      return true;\n  }\n\n  return false;\n}\n\nmodule.exports = hasInherit;\n","var shallowClone = require('./clone').shallow;\n\nvar MULTIPLEX_SEPARATOR = ',';\n\nfunction everyCombination(fn, left, right, validator) {\n  var samePositon = !left.shorthand && !right.shorthand && !left.multiplex && !right.multiplex;\n  var _left = shallowClone(left);\n  var _right = shallowClone(right);\n\n  for (var i = 0, l = left.value.length; i < l; i++) {\n    for (var j = 0, m = right.value.length; j < m; j++) {\n      if (left.value[i][0] == MULTIPLEX_SEPARATOR || right.value[j][0] == MULTIPLEX_SEPARATOR)\n        continue;\n\n      if (samePositon && i != j)\n        continue;\n\n      _left.value = [left.value[i]];\n      _right.value = [right.value[j]];\n      if (!fn(_left, _right, validator))\n        return false;\n    }\n  }\n\n  return true;\n}\n\nmodule.exports = everyCombination;\n","var VENDOR_PREFIX_PATTERN = /$\\-moz\\-|\\-ms\\-|\\-o\\-|\\-webkit\\-/;\n\nfunction prefixesIn(tokens) {\n  var prefixes = [];\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    for (var j = 0, m = token.value.length; j < m; j++) {\n      var match = VENDOR_PREFIX_PATTERN.exec(token.value[j][0]);\n\n      if (match && prefixes.indexOf(match[0]) == -1)\n        prefixes.push(match[0]);\n    }\n  }\n\n  return prefixes;\n}\n\nfunction same(left, right) {\n  return prefixesIn(left).sort().join(',') == prefixesIn(right).sort().join(',');\n}\n\nmodule.exports = {\n  same: same\n};\n","var helpers = require('./helpers');\n\nfunction store(token, context) {\n  context.output.push(typeof token == 'string' ? token : token[0]);\n}\n\nfunction context() {\n  return {\n    output: [],\n    store: store\n  };\n}\n\nfunction all(tokens) {\n  var fakeContext = context();\n  helpers.all(tokens, fakeContext);\n  return fakeContext.output.join('');\n}\n\nfunction body(tokens) {\n  var fakeContext = context();\n  helpers.body(tokens, fakeContext);\n  return fakeContext.output.join('');\n}\n\nfunction property(tokens, position) {\n  var fakeContext = context();\n  helpers.property(tokens, position, true, fakeContext);\n  return fakeContext.output.join('');\n}\n\nfunction selectors(tokens) {\n  var fakeContext = context();\n  helpers.selectors(tokens, fakeContext);\n  return fakeContext.output.join('');\n}\n\nfunction value(tokens, position) {\n  var fakeContext = context();\n  helpers.value(tokens, position, true, fakeContext);\n  return fakeContext.output.join('');\n}\n\nmodule.exports = {\n  all: all,\n  body: body,\n  property: property,\n  selectors: selectors,\n  value: value\n};\n","var lineBreak = require('os').EOL;\n\nvar AT_RULE = 'at-rule';\nvar PROPERTY_SEPARATOR = ';';\n\nfunction hasMoreProperties(tokens, index) {\n  for (var i = index, l = tokens.length; i < l; i++) {\n    if (typeof tokens[i] != 'string')\n      return true;\n  }\n\n  return false;\n}\n\nfunction supportsAfterClosingBrace(token) {\n  return token[0][0] == 'background' || token[0][0] == 'transform' || token[0][0] == 'src';\n}\n\nfunction afterClosingBrace(token, valueIndex) {\n  return token[valueIndex][0][token[valueIndex][0].length - 1] == ')' || token[valueIndex][0].indexOf('__ESCAPED_URL_CLEAN_CSS') === 0;\n}\n\nfunction afterComma(token, valueIndex) {\n  return token[valueIndex][0] == ',';\n}\n\nfunction afterSlash(token, valueIndex) {\n  return token[valueIndex][0] == '/';\n}\n\nfunction beforeComma(token, valueIndex) {\n  return token[valueIndex + 1] && token[valueIndex + 1][0] == ',';\n}\n\nfunction beforeSlash(token, valueIndex) {\n  return token[valueIndex + 1] && token[valueIndex + 1][0] == '/';\n}\n\nfunction inFilter(token) {\n  return token[0][0] == 'filter' || token[0][0] == '-ms-filter';\n}\n\nfunction inSpecialContext(token, valueIndex, context) {\n  return !context.spaceAfterClosingBrace && supportsAfterClosingBrace(token) && afterClosingBrace(token, valueIndex) ||\n    beforeSlash(token, valueIndex) ||\n    afterSlash(token, valueIndex) ||\n    beforeComma(token, valueIndex) ||\n    afterComma(token, valueIndex);\n}\n\nfunction selectors(tokens, context) {\n  var store = context.store;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    store(tokens[i], context);\n\n    if (i < l - 1)\n      store(',', context);\n  }\n}\n\nfunction body(tokens, context) {\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    property(tokens, i, i == l - 1, context);\n  }\n}\n\nfunction property(tokens, position, isLast, context) {\n  var store = context.store;\n  var token = tokens[position];\n\n  if (typeof token == 'string') {\n    store(token, context);\n  } else if (token[0] == AT_RULE) {\n    propertyAtRule(token[1], false, context);\n  } else {\n    store(token[0], context);\n    store(':', context);\n    value(tokens, position, isLast, context);\n  }\n}\n\nfunction propertyAtRule(value, isLast, context) {\n  var store = context.store;\n\n  store(value, context);\n  if (!isLast)\n    store(PROPERTY_SEPARATOR, context);\n}\n\nfunction value(tokens, position, isLast, context) {\n  var store = context.store;\n  var token = tokens[position];\n  var isVariableDeclaration = token[0][0].indexOf('--') === 0;\n  var isBlockVariable = isVariableDeclaration && Array.isArray(token[1][0]);\n\n  if (isVariableDeclaration && isBlockVariable && atRulesOrProperties(token[1])) {\n    store('{', context);\n    body(token[1], context);\n    store('};', context);\n    return;\n  }\n\n  for (var j = 1, m = token.length; j < m; j++) {\n    store(token[j], context);\n\n    if (j < m - 1 && (inFilter(token) || !inSpecialContext(token, j, context))) {\n      store(' ', context);\n    } else if (j == m - 1 && !isLast && hasMoreProperties(tokens, position + 1)) {\n      store(PROPERTY_SEPARATOR, context);\n    }\n  }\n}\n\nfunction atRulesOrProperties(values) {\n  for (var i = 0, l = values.length; i < l; i++) {\n    if (values[i][0] == AT_RULE || Array.isArray(values[i][0]))\n      return true;\n  }\n\n  return false;\n}\n\nfunction all(tokens, context) {\n  var joinCharacter = context.keepBreaks ? lineBreak : '';\n  var store = context.store;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    switch (token[0]) {\n      case 'at-rule':\n      case 'text':\n        store(token[1][0], context);\n        store(joinCharacter, context);\n        break;\n      case 'block':\n        selectors([token[1]], context);\n        store('{', context);\n        all(token[2], context);\n        store('}', context);\n        store(joinCharacter, context);\n        break;\n      case 'flat-block':\n        selectors([token[1]], context);\n        store('{', context);\n        body(token[2], context);\n        store('}', context);\n        store(joinCharacter, context);\n        break;\n      default:\n        selectors(token[1], context);\n        store('{', context);\n        body(token[2], context);\n        store('}', context);\n        store(joinCharacter, context);\n    }\n  }\n}\n\nmodule.exports = {\n  all: all,\n  body: body,\n  property: property,\n  selectors: selectors,\n  value: value\n};\n","var compactable = require('./compactable');\nvar deepClone = require('./clone').deep;\nvar hasInherit = require('./has-inherit');\nvar populateComponents = require('./populate-components');\nvar wrapSingle = require('./wrap-for-optimizing').single;\nvar everyCombination = require('./every-combination');\n\nfunction mixedImportance(components) {\n  var important;\n\n  for (var name in components) {\n    if (undefined !== important && components[name].important != important)\n      return true;\n\n    important = components[name].important;\n  }\n\n  return false;\n}\n\nfunction componentSourceMaps(components) {\n  var sourceMapping = [];\n\n  for (var name in components) {\n    var component = components[name];\n    var originalValue = component.all[component.position];\n    var mapping = originalValue[0][originalValue[0].length - 1];\n\n    if (Array.isArray(mapping))\n      Array.prototype.push.apply(sourceMapping, mapping);\n  }\n\n  return sourceMapping;\n}\n\nfunction replaceWithShorthand(properties, candidateComponents, name, sourceMaps, validator) {\n  var descriptor = compactable[name];\n  var newValuePlaceholder = [[name], [descriptor.defaultValue]];\n  var all;\n\n  var newProperty = wrapSingle(newValuePlaceholder);\n  newProperty.shorthand = true;\n  newProperty.dirty = true;\n\n  populateComponents([newProperty], validator, []);\n\n  for (var i = 0, l = descriptor.components.length; i < l; i++) {\n    var component = candidateComponents[descriptor.components[i]];\n    var canOverride = compactable[component.name].canOverride;\n\n    if (hasInherit(component))\n      return;\n\n    if (!everyCombination(canOverride, newProperty.components[i], component, validator))\n      return;\n\n    newProperty.components[i] = deepClone(component);\n    newProperty.important = component.important;\n\n    all = component.all;\n  }\n\n  for (var componentName in candidateComponents) {\n    candidateComponents[componentName].unused = true;\n  }\n\n  if (sourceMaps) {\n    var sourceMapping = componentSourceMaps(candidateComponents);\n    if (sourceMapping.length > 0)\n      newValuePlaceholder[0].push(sourceMapping);\n  }\n\n  newProperty.position = all.length;\n  newProperty.all = all;\n  newProperty.all.push(newValuePlaceholder);\n\n  properties.push(newProperty);\n}\n\nfunction invalidateOrCompact(properties, position, candidates, sourceMaps, validator) {\n  var property = properties[position];\n\n  for (var name in candidates) {\n    if (undefined !== property && name == property.name)\n      continue;\n\n    var descriptor = compactable[name];\n    var candidateComponents = candidates[name];\n    if (descriptor.components.length > Object.keys(candidateComponents).length) {\n      delete candidates[name];\n      continue;\n    }\n\n    if (mixedImportance(candidateComponents))\n      continue;\n\n    replaceWithShorthand(properties, candidateComponents, name, sourceMaps, validator);\n  }\n}\n\nfunction compactShortands(properties, sourceMaps, validator) {\n  var candidates = {};\n\n  if (properties.length < 3)\n    return;\n\n  for (var i = 0, l = properties.length; i < l; i++) {\n    var property = properties[i];\n    if (property.unused)\n      continue;\n\n    if (property.hack)\n      continue;\n\n    if (property.variable)\n      continue;\n\n    var descriptor = compactable[property.name];\n    if (!descriptor || !descriptor.componentOf)\n      continue;\n\n    if (property.shorthand) {\n      invalidateOrCompact(properties, i, candidates, sourceMaps, validator);\n    } else {\n      var componentOf = descriptor.componentOf;\n      candidates[componentOf] = candidates[componentOf] || {};\n      candidates[componentOf][property.name] = property;\n    }\n  }\n\n  invalidateOrCompact(properties, i, candidates, sourceMaps, validator);\n}\n\nmodule.exports = compactShortands;\n","var stringifyBody = require('../stringifier/one-time').body;\nvar stringifySelectors = require('../stringifier/one-time').selectors;\n\nfunction removeDuplicates(tokens) {\n  var matched = {};\n  var moreThanOnce = [];\n  var id, token;\n  var body, bodies;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    if (token[0] != 'selector')\n      continue;\n\n    id = stringifySelectors(token[1]);\n\n    if (matched[id] && matched[id].length == 1)\n      moreThanOnce.push(id);\n    else\n      matched[id] = matched[id] || [];\n\n    matched[id].push(i);\n  }\n\n  for (i = 0, l = moreThanOnce.length; i < l; i++) {\n    id = moreThanOnce[i];\n    bodies = [];\n\n    for (var j = matched[id].length - 1; j >= 0; j--) {\n      token = tokens[matched[id][j]];\n      body = stringifyBody(token[2]);\n\n      if (bodies.indexOf(body) > -1)\n        token[2] = [];\n      else\n        bodies.push(body);\n    }\n  }\n}\n\nmodule.exports = removeDuplicates;\n","var optimizeProperties = require('../properties/optimizer');\n\nvar stringifyBody = require('../stringifier/one-time').body;\nvar stringifySelectors = require('../stringifier/one-time').selectors;\nvar cleanUpSelectors = require('./clean-up').selectors;\nvar isSpecial = require('./is-special');\n\nfunction mergeAdjacent(tokens, options, context) {\n  var lastToken = [null, [], []];\n  var adjacentSpace = options.compatibility.selectors.adjacentSpace;\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n\n    if (token[0] != 'selector') {\n      lastToken = [null, [], []];\n      continue;\n    }\n\n    if (lastToken[0] == 'selector' && stringifySelectors(token[1]) == stringifySelectors(lastToken[1])) {\n      var joinAt = [lastToken[2].length];\n      Array.prototype.push.apply(lastToken[2], token[2]);\n      optimizeProperties(token[1], lastToken[2], joinAt, true, options, context);\n      token[2] = [];\n    } else if (lastToken[0] == 'selector' && stringifyBody(token[2]) == stringifyBody(lastToken[2]) &&\n        !isSpecial(options, stringifySelectors(token[1])) && !isSpecial(options, stringifySelectors(lastToken[1]))) {\n      lastToken[1] = cleanUpSelectors(lastToken[1].concat(token[1]), false, adjacentSpace);\n      token[2] = [];\n    } else {\n      lastToken = token;\n    }\n  }\n}\n\nmodule.exports = mergeAdjacent;\n","function isSpecial(options, selector) {\n  return options.compatibility.selectors.special.test(selector);\n}\n\nmodule.exports = isSpecial;\n","var optimizeProperties = require('../properties/optimizer');\nvar stringifyBody = require('../stringifier/one-time').body;\nvar stringifySelectors = require('../stringifier/one-time').selectors;\nvar isSpecial = require('./is-special');\nvar cloneArray = require('../utils/clone-array');\n\nfunction reduceNonAdjacent(tokens, options, context) {\n  var candidates = {};\n  var repeated = [];\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n\n    if (token[0] != 'selector')\n      continue;\n    if (token[2].length === 0)\n      continue;\n\n    var selectorAsString = stringifySelectors(token[1]);\n    var isComplexAndNotSpecial = token[1].length > 1 && !isSpecial(options, selectorAsString);\n    var wrappedSelectors = options.sourceMap ? wrappedSelectorsFrom(token[1]) : token[1];\n    var selectors = isComplexAndNotSpecial ?\n      [selectorAsString].concat(wrappedSelectors) :\n      [selectorAsString];\n\n    for (var j = 0, m = selectors.length; j < m; j++) {\n      var selector = selectors[j];\n\n      if (!candidates[selector])\n        candidates[selector] = [];\n      else\n        repeated.push(selector);\n\n      candidates[selector].push({\n        where: i,\n        list: wrappedSelectors,\n        isPartial: isComplexAndNotSpecial && j > 0,\n        isComplex: isComplexAndNotSpecial && j === 0\n      });\n    }\n  }\n\n  reduceSimpleNonAdjacentCases(tokens, repeated, candidates, options, context);\n  reduceComplexNonAdjacentCases(tokens, candidates, options, context);\n}\n\nfunction wrappedSelectorsFrom(list) {\n  var wrapped = [];\n\n  for (var i = 0; i < list.length; i++) {\n    wrapped.push([list[i][0]]);\n  }\n\n  return wrapped;\n}\n\nfunction reduceSimpleNonAdjacentCases(tokens, repeated, candidates, options, context) {\n  function filterOut(idx, bodies) {\n    return data[idx].isPartial && bodies.length === 0;\n  }\n\n  function reduceBody(token, newBody, processedCount, tokenIdx) {\n    if (!data[processedCount - tokenIdx - 1].isPartial)\n      token[2] = newBody;\n  }\n\n  for (var i = 0, l = repeated.length; i < l; i++) {\n    var selector = repeated[i];\n    var data = candidates[selector];\n\n    reduceSelector(tokens, selector, data, {\n      filterOut: filterOut,\n      callback: reduceBody\n    }, options, context);\n  }\n}\n\nfunction reduceComplexNonAdjacentCases(tokens, candidates, options, context) {\n  var localContext = {};\n\n  function filterOut(idx) {\n    return localContext.data[idx].where < localContext.intoPosition;\n  }\n\n  function collectReducedBodies(token, newBody, processedCount, tokenIdx) {\n    if (tokenIdx === 0)\n      localContext.reducedBodies.push(newBody);\n  }\n\n  allSelectors:\n  for (var complexSelector in candidates) {\n    var into = candidates[complexSelector];\n    if (!into[0].isComplex)\n      continue;\n\n    var intoPosition = into[into.length - 1].where;\n    var intoToken = tokens[intoPosition];\n    var reducedBodies = [];\n\n    var selectors = isSpecial(options, complexSelector) ?\n      [complexSelector] :\n      into[0].list;\n\n    localContext.intoPosition = intoPosition;\n    localContext.reducedBodies = reducedBodies;\n\n    for (var j = 0, m = selectors.length; j < m; j++) {\n      var selector = selectors[j];\n      var data = candidates[selector];\n\n      if (data.length < 2)\n        continue allSelectors;\n\n      localContext.data = data;\n\n      reduceSelector(tokens, selector, data, {\n        filterOut: filterOut,\n        callback: collectReducedBodies\n      }, options, context);\n\n      if (stringifyBody(reducedBodies[reducedBodies.length - 1]) != stringifyBody(reducedBodies[0]))\n        continue allSelectors;\n    }\n\n    intoToken[2] = reducedBodies[0];\n  }\n}\n\nfunction reduceSelector(tokens, selector, data, context, options, outerContext) {\n  var bodies = [];\n  var bodiesAsList = [];\n  var joinsAt = [];\n  var processedTokens = [];\n\n  for (var j = data.length - 1, m = 0; j >= 0; j--) {\n    if (context.filterOut(j, bodies))\n      continue;\n\n    var where = data[j].where;\n    var token = tokens[where];\n    var clonedBody = cloneArray(token[2]);\n\n    bodies = bodies.concat(clonedBody);\n    bodiesAsList.push(clonedBody);\n    processedTokens.push(where);\n  }\n\n  for (j = 0, m = bodiesAsList.length; j < m; j++) {\n    if (bodiesAsList[j].length > 0)\n      joinsAt.push((joinsAt.length > 0 ? joinsAt[joinsAt.length - 1] : 0) + bodiesAsList[j].length);\n  }\n\n  optimizeProperties(selector, bodies, joinsAt, false, options, outerContext);\n\n  var processedCount = processedTokens.length;\n  var propertyIdx = bodies.length - 1;\n  var tokenIdx = processedCount - 1;\n\n  while (tokenIdx >= 0) {\n     if ((tokenIdx === 0 || (bodies[propertyIdx] && bodiesAsList[tokenIdx].indexOf(bodies[propertyIdx]) > -1)) && propertyIdx > -1) {\n      propertyIdx--;\n      continue;\n    }\n\n    var newBody = bodies.splice(propertyIdx + 1);\n    context.callback(tokens[processedTokens[tokenIdx]], newBody, processedCount, tokenIdx);\n\n    tokenIdx--;\n  }\n}\n\nmodule.exports = reduceNonAdjacent;\n","function cloneArray(array) {\n  var cloned = array.slice(0);\n\n  for (var i = 0, l = cloned.length; i < l; i++) {\n    if (Array.isArray(cloned[i]))\n      cloned[i] = cloneArray(cloned[i]);\n  }\n\n  return cloned;\n}\n\nmodule.exports = cloneArray;\n","var optimizeProperties = require('../properties/optimizer');\nvar stringifySelectors = require('../stringifier/one-time').selectors;\nvar extractProperties = require('./extractor');\nvar canReorder = require('./reorderable').canReorder;\n\nfunction mergeNonAdjacentBySelector(tokens, options, context) {\n  var allSelectors = {};\n  var repeatedSelectors = [];\n  var i;\n\n  for (i = tokens.length - 1; i >= 0; i--) {\n    if (tokens[i][0] != 'selector')\n      continue;\n    if (tokens[i][2].length === 0)\n      continue;\n\n    var selector = stringifySelectors(tokens[i][1]);\n    allSelectors[selector] = [i].concat(allSelectors[selector] || []);\n\n    if (allSelectors[selector].length == 2)\n      repeatedSelectors.push(selector);\n  }\n\n  for (i = repeatedSelectors.length - 1; i >= 0; i--) {\n    var positions = allSelectors[repeatedSelectors[i]];\n\n    selectorIterator:\n    for (var j = positions.length - 1; j > 0; j--) {\n      var positionOne = positions[j - 1];\n      var tokenOne = tokens[positionOne];\n      var positionTwo = positions[j];\n      var tokenTwo = tokens[positionTwo];\n\n      directionIterator:\n      for (var direction = 1; direction >= -1; direction -= 2) {\n        var topToBottom = direction == 1;\n        var from = topToBottom ? positionOne + 1 : positionTwo - 1;\n        var to = topToBottom ? positionTwo : positionOne;\n        var delta = topToBottom ? 1 : -1;\n        var moved = topToBottom ? tokenOne : tokenTwo;\n        var target = topToBottom ? tokenTwo : tokenOne;\n        var movedProperties = extractProperties(moved);\n        var joinAt;\n\n        while (from != to) {\n          var traversedProperties = extractProperties(tokens[from]);\n          from += delta;\n\n          // traversed then moved as we move selectors towards the start\n          var reorderable = topToBottom ?\n            canReorder(movedProperties, traversedProperties) :\n            canReorder(traversedProperties, movedProperties);\n\n          if (!reorderable && !topToBottom)\n            continue selectorIterator;\n          if (!reorderable && topToBottom)\n            continue directionIterator;\n        }\n\n        if (topToBottom) {\n          joinAt = [moved[2].length];\n          Array.prototype.push.apply(moved[2], target[2]);\n          target[2] = moved[2];\n        } else {\n          joinAt = [target[2].length];\n          Array.prototype.push.apply(target[2], moved[2]);\n        }\n\n        optimizeProperties(target[1], target[2], joinAt, true, options, context);\n        moved[2] = [];\n      }\n    }\n  }\n}\n\nmodule.exports = mergeNonAdjacentBySelector;\n","// This extractor is used in advanced optimizations\n// IMPORTANT: Mind Token class and this code is not related!\n// Properties will be tokenized in one step, see #429\n\nvar stringifySelectors = require('../stringifier/one-time').selectors;\nvar stringifyValue = require('../stringifier/one-time').value;\n\nvar AT_RULE = 'at-rule';\n\nfunction extract(token) {\n  var properties = [];\n\n  if (token[0] == 'selector') {\n    var inSpecificSelector = !/[\\.\\+>~]/.test(stringifySelectors(token[1]));\n    for (var i = 0, l = token[2].length; i < l; i++) {\n      var property = token[2][i];\n\n      if (property.indexOf('__ESCAPED') === 0)\n        continue;\n\n      if (property[0] == AT_RULE)\n        continue;\n\n      var name = token[2][i][0][0];\n      if (name.length === 0)\n        continue;\n\n      if (name.indexOf('--') === 0)\n        continue;\n\n      var value = stringifyValue(token[2], i);\n\n      properties.push([\n        name,\n        value,\n        findNameRoot(name),\n        token[2][i],\n        name + ':' + value,\n        token[1],\n        inSpecificSelector\n      ]);\n    }\n  } else if (token[0] == 'block') {\n    for (var j = 0, k = token[2].length; j < k; j++) {\n      properties = properties.concat(extract(token[2][j]));\n    }\n  }\n\n  return properties;\n}\n\nfunction findNameRoot(name) {\n  if (name == 'list-style')\n    return name;\n  if (name.indexOf('-radius') > 0)\n    return 'border-radius';\n  if (name == 'border-collapse' || name == 'border-spacing' || name == 'border-image')\n    return name;\n  if (name.indexOf('border-') === 0 && /^border\\-\\w+\\-\\w+$/.test(name))\n    return name.match(/border\\-\\w+/)[0];\n  if (name.indexOf('border-') === 0 && /^border\\-\\w+$/.test(name))\n    return 'border';\n  if (name.indexOf('text-') === 0)\n    return name;\n\n  return name.replace(/^\\-\\w+\\-/, '').match(/([a-zA-Z]+)/)[0].toLowerCase();\n}\n\nmodule.exports = extract;\n","// TODO: it'd be great to merge it with the other canReorder functionality\n\nvar FLEX_PROPERTIES = /align\\-items|box\\-align|box\\-pack|flex|justify/;\nvar BORDER_PROPERTIES = /^border\\-(top|right|bottom|left|color|style|width|radius)/;\n\nfunction canReorder(left, right) {\n  for (var i = right.length - 1; i >= 0; i--) {\n    for (var j = left.length - 1; j >= 0; j--) {\n      if (!canReorderSingle(left[j], right[i]))\n        return false;\n    }\n  }\n\n  return true;\n}\n\nfunction canReorderSingle(left, right) {\n  var leftName = left[0];\n  var leftValue = left[1];\n  var leftNameRoot = left[2];\n  var leftSelector = left[5];\n  var leftInSpecificSelector = left[6];\n  var rightName = right[0];\n  var rightValue = right[1];\n  var rightNameRoot = right[2];\n  var rightSelector = right[5];\n  var rightInSpecificSelector = right[6];\n\n  if (leftName == 'font' && rightName == 'line-height' || rightName == 'font' && leftName == 'line-height')\n    return false;\n  if (FLEX_PROPERTIES.test(leftName) && FLEX_PROPERTIES.test(rightName))\n    return false;\n  if (leftNameRoot == rightNameRoot && unprefixed(leftName) == unprefixed(rightName) && (vendorPrefixed(leftName) ^ vendorPrefixed(rightName)))\n    return false;\n  if (leftNameRoot == 'border' && BORDER_PROPERTIES.test(rightNameRoot) && (leftName == 'border' || leftName == rightNameRoot || (leftValue != rightValue && sameBorderComponent(leftName, rightName))))\n    return false;\n  if (rightNameRoot == 'border' && BORDER_PROPERTIES.test(leftNameRoot) && (rightName == 'border' || rightName == leftNameRoot || (leftValue != rightValue && sameBorderComponent(leftName, rightName))))\n    return false;\n  if (leftNameRoot == 'border' && rightNameRoot == 'border' && leftName != rightName && (isSideBorder(leftName) && isStyleBorder(rightName) || isStyleBorder(leftName) && isSideBorder(rightName)))\n    return false;\n  if (leftNameRoot != rightNameRoot)\n    return true;\n  if (leftName == rightName && leftNameRoot == rightNameRoot && (leftValue == rightValue || withDifferentVendorPrefix(leftValue, rightValue)))\n    return true;\n  if (leftName != rightName && leftNameRoot == rightNameRoot && leftName != leftNameRoot && rightName != rightNameRoot)\n    return true;\n  if (leftName != rightName && leftNameRoot == rightNameRoot && leftValue == rightValue)\n    return true;\n  if (rightInSpecificSelector && leftInSpecificSelector && !inheritable(leftNameRoot) && !inheritable(rightNameRoot) && selectorsDoNotOverlap(rightSelector, leftSelector))\n    return true;\n\n  return false;\n}\n\nfunction vendorPrefixed(name) {\n  return /^\\-(?:moz|webkit|ms|o)\\-/.test(name);\n}\n\nfunction unprefixed(name) {\n  return name.replace(/^\\-(?:moz|webkit|ms|o)\\-/, '');\n}\n\nfunction sameBorderComponent(name1, name2) {\n  return name1.split('-').pop() == name2.split('-').pop();\n}\n\nfunction isSideBorder(name) {\n  return name == 'border-top' || name == 'border-right' || name == 'border-bottom' || name == 'border-left';\n}\n\nfunction isStyleBorder(name) {\n  return name == 'border-color' || name == 'border-style' || name == 'border-width';\n}\n\nfunction withDifferentVendorPrefix(value1, value2) {\n  return vendorPrefixed(value1) && vendorPrefixed(value2) && value1.split('-')[1] != value2.split('-')[2];\n}\n\nfunction selectorsDoNotOverlap(s1, s2) {\n  for (var i = 0, l = s1.length; i < l; i++) {\n    for (var j = 0, m = s2.length; j < m; j++) {\n      if (s1[i][0] == s2[j][0])\n        return false;\n    }\n  }\n\n  return true;\n}\n\nfunction inheritable(name) {\n  // According to http://www.w3.org/TR/CSS21/propidx.html\n  // Others will be catched by other, preceeding rules\n  return name == 'font' || name == 'line-height' || name == 'list-style';\n}\n\nmodule.exports = {\n  canReorder: canReorder,\n  canReorderSingle: canReorderSingle\n};\n","var stringifyBody = require('../stringifier/one-time').body;\nvar stringifySelectors = require('../stringifier/one-time').selectors;\nvar cleanUpSelectors = require('./clean-up').selectors;\nvar isSpecial = require('./is-special');\n\nfunction unsafeSelector(value) {\n  return /\\.|\\*| :/.test(value);\n}\n\nfunction isBemElement(token) {\n  var asString = stringifySelectors(token[1]);\n  return asString.indexOf('__') > -1 || asString.indexOf('--') > -1;\n}\n\nfunction withoutModifier(selector) {\n  return selector.replace(/--[^ ,>\\+~:]+/g, '');\n}\n\nfunction removeAnyUnsafeElements(left, candidates) {\n  var leftSelector = withoutModifier(stringifySelectors(left[1]));\n\n  for (var body in candidates) {\n    var right = candidates[body];\n    var rightSelector = withoutModifier(stringifySelectors(right[1]));\n\n    if (rightSelector.indexOf(leftSelector) > -1 || leftSelector.indexOf(rightSelector) > -1)\n      delete candidates[body];\n  }\n}\n\nfunction mergeNonAdjacentByBody(tokens, options) {\n  var candidates = {};\n  var adjacentSpace = options.compatibility.selectors.adjacentSpace;\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    if (token[0] != 'selector')\n      continue;\n\n    if (token[2].length > 0 && (!options.semanticMerging && unsafeSelector(stringifySelectors(token[1]))))\n      candidates = {};\n\n    if (token[2].length > 0 && options.semanticMerging && isBemElement(token))\n      removeAnyUnsafeElements(token, candidates);\n\n    var candidateBody = stringifyBody(token[2]);\n    var oldToken = candidates[candidateBody];\n    if (oldToken && !isSpecial(options, stringifySelectors(token[1])) && !isSpecial(options, stringifySelectors(oldToken[1]))) {\n      token[1] = token[2].length > 0 ?\n        cleanUpSelectors(oldToken[1].concat(token[1]), false, adjacentSpace) :\n        oldToken[1].concat(token[1]);\n\n      oldToken[2] = [];\n      candidates[candidateBody] = null;\n    }\n\n    candidates[stringifyBody(token[2])] = token;\n  }\n}\n\nmodule.exports = mergeNonAdjacentByBody;\n","var extractProperties = require('./extractor');\nvar canReorderSingle = require('./reorderable').canReorderSingle;\nvar stringifyBody = require('../stringifier/one-time').body;\nvar stringifySelectors = require('../stringifier/one-time').selectors;\nvar cleanUpSelectorDuplicates = require('./clean-up').selectorDuplicates;\nvar isSpecial = require('./is-special');\nvar cloneArray = require('../utils/clone-array');\n\nfunction naturalSorter(a, b) {\n  return a > b;\n}\n\nfunction cloneAndMergeSelectors(propertyA, propertyB) {\n  var cloned = cloneArray(propertyA);\n  cloned[5] = cloned[5].concat(propertyB[5]);\n\n  return cloned;\n}\n\nfunction restructure(tokens, options) {\n  var movableTokens = {};\n  var movedProperties = [];\n  var multiPropertyMoveCache = {};\n  var movedToBeDropped = [];\n  var maxCombinationsLevel = 2;\n  var ID_JOIN_CHARACTER = '%';\n\n  function sendToMultiPropertyMoveCache(position, movedProperty, allFits) {\n    for (var i = allFits.length - 1; i >= 0; i--) {\n      var fit = allFits[i][0];\n      var id = addToCache(movedProperty, fit);\n\n      if (multiPropertyMoveCache[id].length > 1 && processMultiPropertyMove(position, multiPropertyMoveCache[id])) {\n        removeAllMatchingFromCache(id);\n        break;\n      }\n    }\n  }\n\n  function addToCache(movedProperty, fit) {\n    var id = cacheId(fit);\n    multiPropertyMoveCache[id] = multiPropertyMoveCache[id] || [];\n    multiPropertyMoveCache[id].push([movedProperty, fit]);\n    return id;\n  }\n\n  function removeAllMatchingFromCache(matchId) {\n    var matchSelectors = matchId.split(ID_JOIN_CHARACTER);\n    var forRemoval = [];\n    var i;\n\n    for (var id in multiPropertyMoveCache) {\n      var selectors = id.split(ID_JOIN_CHARACTER);\n      for (i = selectors.length - 1; i >= 0; i--) {\n        if (matchSelectors.indexOf(selectors[i]) > -1) {\n          forRemoval.push(id);\n          break;\n        }\n      }\n    }\n\n    for (i = forRemoval.length - 1; i >= 0; i--) {\n      delete multiPropertyMoveCache[forRemoval[i]];\n    }\n  }\n\n  function cacheId(cachedTokens) {\n    var id = [];\n    for (var i = 0, l = cachedTokens.length; i < l; i++) {\n      id.push(stringifySelectors(cachedTokens[i][1]));\n    }\n    return id.join(ID_JOIN_CHARACTER);\n  }\n\n  function tokensToMerge(sourceTokens) {\n    var uniqueTokensWithBody = [];\n    var mergeableTokens = [];\n\n    for (var i = sourceTokens.length - 1; i >= 0; i--) {\n      if (isSpecial(options, stringifySelectors(sourceTokens[i][1])))\n        continue;\n\n      mergeableTokens.unshift(sourceTokens[i]);\n      if (sourceTokens[i][2].length > 0 && uniqueTokensWithBody.indexOf(sourceTokens[i]) == -1)\n        uniqueTokensWithBody.push(sourceTokens[i]);\n    }\n\n    return uniqueTokensWithBody.length > 1 ?\n      mergeableTokens :\n      [];\n  }\n\n  function shortenIfPossible(position, movedProperty) {\n    var name = movedProperty[0];\n    var value = movedProperty[1];\n    var key = movedProperty[4];\n    var valueSize = name.length + value.length + 1;\n    var allSelectors = [];\n    var qualifiedTokens = [];\n\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n    if (mergeableTokens.length < 2)\n      return;\n\n    var allFits = findAllFits(mergeableTokens, valueSize, 1);\n    var bestFit = allFits[0];\n    if (bestFit[1] > 0)\n      return sendToMultiPropertyMoveCache(position, movedProperty, allFits);\n\n    for (var i = bestFit[0].length - 1; i >=0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = cleanUpSelectorDuplicates(allSelectors);\n    dropAsNewTokenAt(position, [movedProperty], allSelectors, qualifiedTokens);\n  }\n\n  function fitSorter(fit1, fit2) {\n    return fit1[1] > fit2[1];\n  }\n\n  function findAllFits(mergeableTokens, propertySize, propertiesCount) {\n    var combinations = allCombinations(mergeableTokens, propertySize, propertiesCount, maxCombinationsLevel - 1);\n    return combinations.sort(fitSorter);\n  }\n\n  function allCombinations(tokensVariant, propertySize, propertiesCount, level) {\n    var differenceVariants = [[tokensVariant, sizeDifference(tokensVariant, propertySize, propertiesCount)]];\n    if (tokensVariant.length > 2 && level > 0) {\n      for (var i = tokensVariant.length - 1; i >= 0; i--) {\n        var subVariant = Array.prototype.slice.call(tokensVariant, 0);\n        subVariant.splice(i, 1);\n        differenceVariants = differenceVariants.concat(allCombinations(subVariant, propertySize, propertiesCount, level - 1));\n      }\n    }\n\n    return differenceVariants;\n  }\n\n  function sizeDifference(tokensVariant, propertySize, propertiesCount) {\n    var allSelectorsSize = 0;\n    for (var i = tokensVariant.length - 1; i >= 0; i--) {\n      allSelectorsSize += tokensVariant[i][2].length > propertiesCount ? stringifySelectors(tokensVariant[i][1]).length : -1;\n    }\n    return allSelectorsSize - (tokensVariant.length - 1) * propertySize + 1;\n  }\n\n  function dropAsNewTokenAt(position, properties, allSelectors, mergeableTokens) {\n    var i, j, k, m;\n    var allProperties = [];\n\n    for (i = mergeableTokens.length - 1; i >= 0; i--) {\n      var mergeableToken = mergeableTokens[i];\n\n      for (j = mergeableToken[2].length - 1; j >= 0; j--) {\n        var mergeableProperty = mergeableToken[2][j];\n\n        for (k = 0, m = properties.length; k < m; k++) {\n          var property = properties[k];\n\n          var mergeablePropertyName = mergeableProperty[0][0];\n          var propertyName = property[0];\n          var propertyBody = property[4];\n          if (mergeablePropertyName == propertyName && stringifyBody([mergeableProperty]) == propertyBody) {\n            mergeableToken[2].splice(j, 1);\n            break;\n          }\n        }\n      }\n    }\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      allProperties.unshift(properties[i][3]);\n    }\n\n    var newToken = ['selector', allSelectors, allProperties];\n    tokens.splice(position, 0, newToken);\n  }\n\n  function dropPropertiesAt(position, movedProperty) {\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n\n    if (toMove && toMove.length > 1) {\n      if (!shortenMultiMovesIfPossible(position, movedProperty))\n        shortenIfPossible(position, movedProperty);\n    }\n  }\n\n  function shortenMultiMovesIfPossible(position, movedProperty) {\n    var candidates = [];\n    var propertiesAndMergableTokens = [];\n    var key = movedProperty[4];\n    var j, k;\n\n    var mergeableTokens = tokensToMerge(movableTokens[key]);\n    if (mergeableTokens.length < 2)\n      return;\n\n    movableLoop:\n    for (var value in movableTokens) {\n      var tokensList = movableTokens[value];\n\n      for (j = mergeableTokens.length - 1; j >= 0; j--) {\n        if (tokensList.indexOf(mergeableTokens[j]) == -1)\n          continue movableLoop;\n      }\n\n      candidates.push(value);\n    }\n\n    if (candidates.length < 2)\n      return false;\n\n    for (j = candidates.length - 1; j >= 0; j--) {\n      for (k = movedProperties.length - 1; k >= 0; k--) {\n        if (movedProperties[k][4] == candidates[j]) {\n          propertiesAndMergableTokens.unshift([movedProperties[k], mergeableTokens]);\n          break;\n        }\n      }\n    }\n\n    return processMultiPropertyMove(position, propertiesAndMergableTokens);\n  }\n\n  function processMultiPropertyMove(position, propertiesAndMergableTokens) {\n    var valueSize = 0;\n    var properties = [];\n    var property;\n\n    for (var i = propertiesAndMergableTokens.length - 1; i >= 0; i--) {\n      property = propertiesAndMergableTokens[i][0];\n      var fullValue = property[4];\n      valueSize += fullValue.length + (i > 0 ? 1 : 0);\n\n      properties.push(property);\n    }\n\n    var mergeableTokens = propertiesAndMergableTokens[0][1];\n    var bestFit = findAllFits(mergeableTokens, valueSize, properties.length)[0];\n    if (bestFit[1] > 0)\n      return false;\n\n    var allSelectors = [];\n    var qualifiedTokens = [];\n    for (i = bestFit[0].length - 1; i >= 0; i--) {\n      allSelectors = bestFit[0][i][1].concat(allSelectors);\n      qualifiedTokens.unshift(bestFit[0][i]);\n    }\n\n    allSelectors = cleanUpSelectorDuplicates(allSelectors);\n    dropAsNewTokenAt(position, properties, allSelectors, qualifiedTokens);\n\n    for (i = properties.length - 1; i >= 0; i--) {\n      property = properties[i];\n      var index = movedProperties.indexOf(property);\n\n      delete movableTokens[property[4]];\n\n      if (index > -1 && movedToBeDropped.indexOf(index) == -1)\n        movedToBeDropped.push(index);\n    }\n\n    return true;\n  }\n\n  function boundToAnotherPropertyInCurrrentToken(property, movedProperty, token) {\n    var propertyName = property[0];\n    var movedPropertyName = movedProperty[0];\n    if (propertyName != movedPropertyName)\n      return false;\n\n    var key = movedProperty[4];\n    var toMove = movableTokens[key];\n    return toMove && toMove.indexOf(token) > -1;\n  }\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    var isSelector;\n    var j, k, m;\n    var samePropertyAt;\n\n    if (token[0] == 'selector') {\n      isSelector = true;\n    } else if (token[0] == 'block') {\n      isSelector = false;\n    } else {\n      continue;\n    }\n\n    // We cache movedProperties.length as it may change in the loop\n    var movedCount = movedProperties.length;\n\n    var properties = extractProperties(token);\n    movedToBeDropped = [];\n\n    var unmovableInCurrentToken = [];\n    for (j = properties.length - 1; j >= 0; j--) {\n      for (k = j - 1; k >= 0; k--) {\n        if (!canReorderSingle(properties[j], properties[k])) {\n          unmovableInCurrentToken.push(j);\n          break;\n        }\n      }\n    }\n\n    for (j = properties.length - 1; j >= 0; j--) {\n      var property = properties[j];\n      var movedSameProperty = false;\n\n      for (k = 0; k < movedCount; k++) {\n        var movedProperty = movedProperties[k];\n\n        if (movedToBeDropped.indexOf(k) == -1 && !canReorderSingle(property, movedProperty) && !boundToAnotherPropertyInCurrrentToken(property, movedProperty, token)) {\n          dropPropertiesAt(i + 1, movedProperty, token);\n\n          if (movedToBeDropped.indexOf(k) == -1) {\n            movedToBeDropped.push(k);\n            delete movableTokens[movedProperty[4]];\n          }\n        }\n\n        if (!movedSameProperty) {\n          movedSameProperty = property[0] == movedProperty[0] && property[1] == movedProperty[1];\n\n          if (movedSameProperty) {\n            samePropertyAt = k;\n          }\n        }\n      }\n\n      if (!isSelector || unmovableInCurrentToken.indexOf(j) > -1)\n        continue;\n\n      var key = property[4];\n      movableTokens[key] = movableTokens[key] || [];\n      movableTokens[key].push(token);\n\n      if (movedSameProperty) {\n        movedProperties[samePropertyAt] = cloneAndMergeSelectors(movedProperties[samePropertyAt], property);\n      } else {\n        movedProperties.push(property);\n      }\n    }\n\n    movedToBeDropped = movedToBeDropped.sort(naturalSorter);\n    for (j = 0, m = movedToBeDropped.length; j < m; j++) {\n      var dropAt = movedToBeDropped[j] - j;\n      movedProperties.splice(dropAt, 1);\n    }\n  }\n\n  var position = tokens[0] && tokens[0][0] == 'at-rule' && tokens[0][1][0].indexOf('@charset') === 0 ? 1 : 0;\n  for (; position < tokens.length - 1; position++) {\n    var isImportRule = tokens[position][0] === 'at-rule' && tokens[position][1][0].indexOf('@import') === 0;\n    var isEscapedCommentSpecial = tokens[position][0] === 'text' && tokens[position][1][0].indexOf('__ESCAPED_COMMENT_SPECIAL') === 0;\n    if (!(isImportRule || isEscapedCommentSpecial))\n      break;\n  }\n\n  for (i = 0; i < movedProperties.length; i++) {\n    dropPropertiesAt(position, movedProperties[i]);\n  }\n}\n\nmodule.exports = restructure;\n","var stringifyAll = require('../stringifier/one-time').all;\n\nfunction removeDuplicateMediaQueries(tokens) {\n  var candidates = {};\n\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    var token = tokens[i];\n    if (token[0] != 'block')\n      continue;\n\n    var key = token[1][0] + '%' + stringifyAll(token[2]);\n    var candidate = candidates[key];\n\n    if (candidate)\n      candidate[2] = [];\n\n    candidates[key] = token;\n  }\n}\n\nmodule.exports = removeDuplicateMediaQueries;\n","var canReorder = require('./reorderable').canReorder;\nvar extractProperties = require('./extractor');\n\nfunction mergeMediaQueries(tokens) {\n  var candidates = {};\n  var reduced = [];\n\n  for (var i = tokens.length - 1; i >= 0; i--) {\n    var token = tokens[i];\n    if (token[0] != 'block')\n      continue;\n\n    var candidate = candidates[token[1][0]];\n    if (!candidate) {\n      candidate = [];\n      candidates[token[1][0]] = candidate;\n    }\n\n    candidate.push(i);\n  }\n\n  for (var name in candidates) {\n    var positions = candidates[name];\n\n    positionLoop:\n    for (var j = positions.length - 1; j > 0; j--) {\n      var positionOne = positions[j];\n      var tokenOne = tokens[positionOne];\n      var positionTwo = positions[j - 1];\n      var tokenTwo = tokens[positionTwo];\n\n      directionLoop:\n      for (var direction = 1; direction >= -1; direction -= 2) {\n        var topToBottom = direction == 1;\n        var from = topToBottom ? positionOne + 1 : positionTwo - 1;\n        var to = topToBottom ? positionTwo : positionOne;\n        var delta = topToBottom ? 1 : -1;\n        var source = topToBottom ? tokenOne : tokenTwo;\n        var target = topToBottom ? tokenTwo : tokenOne;\n        var movedProperties = extractProperties(source);\n\n        while (from != to) {\n          var traversedProperties = extractProperties(tokens[from]);\n          from += delta;\n\n          if (!canReorder(movedProperties, traversedProperties))\n            continue directionLoop;\n        }\n\n        target[2] = topToBottom ?\n          source[2].concat(target[2]) :\n          target[2].concat(source[2]);\n        source[2] = [];\n\n        reduced.push(target);\n        continue positionLoop;\n      }\n    }\n  }\n\n  return reduced;\n}\n\nmodule.exports = mergeMediaQueries;\n","var all = require('./helpers').all;\n\nfunction store(token, context) {\n  context.output.push(typeof token == 'string' ? token : token[0]);\n}\n\nfunction stringify(tokens, options, restoreCallback) {\n  var context = {\n    keepBreaks: options.keepBreaks,\n    output: [],\n    spaceAfterClosingBrace: options.compatibility.properties.spaceAfterClosingBrace,\n    store: store\n  };\n\n  all(tokens, context, false);\n\n  return {\n    styles: restoreCallback(context.output.join('')).trim()\n  };\n}\n\nmodule.exports = stringify;\n","var SourceMapGenerator = require('source-map').SourceMapGenerator;\nvar all = require('./helpers').all;\n\nvar isWindows = process.platform == 'win32';\nvar unknownSource = '$stdin';\n\nfunction store(element, context) {\n  var fromString = typeof element == 'string';\n  var value = fromString ? element : element[0];\n\n  if (value.indexOf('_') > -1)\n    value = context.restore(value, prefixContentFrom(context.output));\n\n  track(value, fromString ? null : element, context);\n  context.output.push(value);\n}\n\nfunction prefixContentFrom(values) {\n  var content = [];\n\n  for (var i = values.length - 1; i >= 0; i--) {\n    var value = values[i];\n    content.unshift(value);\n\n    if (value == '{' || value == ';')\n      break;\n  }\n\n  return content.join('');\n}\n\nfunction track(value, element, context) {\n  if (element)\n    trackAllMappings(element, context);\n\n  var parts = value.split('\\n');\n  context.line += parts.length - 1;\n  context.column = parts.length > 1 ? 0 : (context.column + parts.pop().length);\n}\n\nfunction trackAllMappings(element, context) {\n  var mapping = element[element.length - 1];\n\n  if (!Array.isArray(mapping))\n    return;\n\n  for (var i = 0, l = mapping.length; i < l; i++) {\n    trackMapping(mapping[i], context);\n  }\n}\n\nfunction trackMapping(mapping, context) {\n  var source = mapping[2] || unknownSource;\n\n  if (isWindows)\n    source = source.replace(/\\\\/g, '/');\n\n  context.outputMap.addMapping({\n    generated: {\n      line: context.line,\n      column: context.column\n    },\n    source: source,\n    original: {\n      line: mapping[0],\n      column: mapping[1]\n    }\n  });\n\n  if (mapping[3])\n    context.outputMap.setSourceContent(source, mapping[3][mapping[2]]);\n}\n\nfunction stringify(tokens, options, restoreCallback, inputMapTracker) {\n  var context = {\n    column: 0,\n    inputMapTracker: inputMapTracker,\n    keepBreaks: options.keepBreaks,\n    line: 1,\n    output: [],\n    outputMap: new SourceMapGenerator(),\n    restore: restoreCallback,\n    sourceMapInlineSources: options.sourceMapInlineSources,\n    spaceAfterClosingBrace: options.compatibility.properties.spaceAfterClosingBrace,\n    store: store\n  };\n\n  all(tokens, context, false);\n\n  return {\n    sourceMap: context.outputMap,\n    styles: context.output.join('').trim()\n  };\n}\n\nmodule.exports = stringify;\n","var EscapeStore = require('./escape-store');\nvar QuoteScanner = require('../utils/quote-scanner');\n\nvar SPECIAL_COMMENT_PREFIX = '/*!';\nvar COMMENT_PREFIX = '/*';\nvar COMMENT_SUFFIX = '*/';\n\nvar lineBreak = require('os').EOL;\n\nfunction CommentsProcessor(context, keepSpecialComments, keepBreaks, saveWaypoints) {\n  this.comments = new EscapeStore('COMMENT');\n  this.specialComments = new EscapeStore('COMMENT_SPECIAL');\n\n  this.context = context;\n  this.restored = 0;\n  this.keepAll = keepSpecialComments == '*';\n  this.keepOne = keepSpecialComments == '1' || keepSpecialComments === 1;\n  this.keepBreaks = keepBreaks;\n  this.saveWaypoints = saveWaypoints;\n}\n\nfunction quoteScannerFor(data) {\n  var quoteMap = [];\n  new QuoteScanner(data).each(function (quotedString, _, startsAt) {\n    quoteMap.push([startsAt, startsAt + quotedString.length]);\n  });\n\n  return function (position) {\n    for (var i = 0, l = quoteMap.length; i < l; i++) {\n      if (quoteMap[i][0] < position && quoteMap[i][1] > position)\n        return true;\n    }\n\n    return false;\n  };\n}\n\nCommentsProcessor.prototype.escape = function (data) {\n  var tempData = [];\n  var nextStart = 0;\n  var nextEnd = 0;\n  var cursor = 0;\n  var indent = 0;\n  var breaksCount;\n  var lastBreakAt;\n  var newIndent;\n  var isQuotedAt = quoteScannerFor(data);\n  var saveWaypoints = this.saveWaypoints;\n\n  for (; nextEnd < data.length;) {\n    nextStart = data.indexOf(COMMENT_PREFIX, cursor);\n    if (nextStart == -1)\n      break;\n\n    if (isQuotedAt(nextStart)) {\n      tempData.push(data.substring(cursor, nextStart + COMMENT_PREFIX.length));\n      cursor = nextStart + COMMENT_PREFIX.length;\n      continue;\n    }\n\n    nextEnd = data.indexOf(COMMENT_SUFFIX, nextStart + COMMENT_PREFIX.length);\n    if (nextEnd == -1) {\n      this.context.warnings.push('Broken comment: \\'' + data.substring(nextStart) + '\\'.');\n      nextEnd = data.length - 2;\n    }\n\n    tempData.push(data.substring(cursor, nextStart));\n\n    var comment = data.substring(nextStart, nextEnd + COMMENT_SUFFIX.length);\n    var isSpecialComment = comment.indexOf(SPECIAL_COMMENT_PREFIX) === 0;\n\n    if (saveWaypoints) {\n      breaksCount = comment.split(lineBreak).length - 1;\n      lastBreakAt = comment.lastIndexOf(lineBreak);\n      newIndent = lastBreakAt > 0 ?\n        comment.substring(lastBreakAt + lineBreak.length).length :\n        indent + comment.length;\n    }\n\n    if (saveWaypoints || isSpecialComment) {\n      var metadata = saveWaypoints ? [breaksCount, newIndent] : null;\n      var placeholder = isSpecialComment ?\n        this.specialComments.store(comment, metadata) :\n        this.comments.store(comment, metadata);\n      tempData.push(placeholder);\n    }\n\n    if (saveWaypoints)\n      indent = newIndent + 1;\n    cursor = nextEnd + COMMENT_SUFFIX.length;\n  }\n\n  return tempData.length > 0 ?\n    tempData.join('') + data.substring(cursor, data.length) :\n    data;\n};\n\nfunction restore(context, data, from, isSpecial) {\n  var tempData = [];\n  var cursor = 0;\n\n  for (; cursor < data.length;) {\n    var nextMatch = from.nextMatch(data, cursor);\n    if (nextMatch.start < 0)\n      break;\n\n    tempData.push(data.substring(cursor, nextMatch.start));\n    var comment = from.restore(nextMatch.match);\n\n    if (isSpecial && (context.keepAll || (context.keepOne && context.restored === 0))) {\n      context.restored++;\n      tempData.push(comment);\n\n      cursor = nextMatch.end;\n    } else {\n      cursor = nextMatch.end + (context.keepBreaks && data.substring(nextMatch.end, nextMatch.end + lineBreak.length) == lineBreak ? lineBreak.length : 0);\n    }\n  }\n\n  return tempData.length > 0 ?\n    tempData.join('') + data.substring(cursor, data.length) :\n    data;\n}\n\nCommentsProcessor.prototype.restore = function (data) {\n  data = restore(this, data, this.comments, false);\n  data = restore(this, data, this.specialComments, true);\n  return data;\n};\n\nmodule.exports = CommentsProcessor;\n","var placeholderBrace = '__';\n\nfunction EscapeStore(placeholderRoot) {\n  this.placeholderRoot = 'ESCAPED_' + placeholderRoot + '_CLEAN_CSS';\n  this.placeholderToData = {};\n  this.dataToPlaceholder = {};\n  this.count = 0;\n  this.restoreMatcher = new RegExp(this.placeholderRoot + '(\\\\d+)');\n}\n\nEscapeStore.prototype._nextPlaceholder = function (metadata) {\n  return {\n    index: this.count,\n    value: placeholderBrace + this.placeholderRoot + this.count++ + metadata + placeholderBrace\n  };\n};\n\nEscapeStore.prototype.store = function (data, metadata) {\n  var encodedMetadata = metadata ?\n    '(' + metadata.join(',') + ')' :\n    '';\n  var placeholder = this.dataToPlaceholder[data];\n\n  if (!placeholder) {\n    var nextPlaceholder = this._nextPlaceholder(encodedMetadata);\n    placeholder = nextPlaceholder.value;\n    this.placeholderToData[nextPlaceholder.index] = data;\n    this.dataToPlaceholder[data] = nextPlaceholder.value;\n  }\n\n  if (metadata)\n    placeholder = placeholder.replace(/\\([^\\)]+\\)/, encodedMetadata);\n\n  return placeholder;\n};\n\nEscapeStore.prototype.nextMatch = function (data, cursor) {\n  var next = {};\n\n  next.start = data.indexOf(this.placeholderRoot, cursor) - placeholderBrace.length;\n  next.end = data.indexOf(placeholderBrace, next.start + placeholderBrace.length) + placeholderBrace.length;\n  if (next.start > -1 && next.end > -1)\n    next.match = data.substring(next.start, next.end);\n\n  return next;\n};\n\nEscapeStore.prototype.restore = function (placeholder) {\n  var index = this.restoreMatcher.exec(placeholder)[1];\n  return this.placeholderToData[index];\n};\n\nmodule.exports = EscapeStore;\n","var COMMENT_START_MARK = '/*';\n\nfunction QuoteScanner(data) {\n  this.data = data;\n}\n\nvar findQuoteEnd = function (data, matched, cursor, oldCursor) {\n  var commentEndMark = '*/';\n  var escapeMark = '\\\\';\n  var blockEndMark = '}';\n  var dataPrefix = data.substring(oldCursor, cursor);\n  var commentEndedAt = dataPrefix.lastIndexOf(commentEndMark, cursor);\n  var commentStartedAt = findLastCommentStartedAt(dataPrefix, cursor);\n  var commentStarted = false;\n\n  if (commentEndedAt >= cursor && commentStartedAt > -1)\n    commentStarted = true;\n  if (commentStartedAt < cursor && commentStartedAt > commentEndedAt)\n    commentStarted = true;\n\n  if (commentStarted) {\n    var commentEndsAt = data.indexOf(commentEndMark, cursor);\n    if (commentEndsAt > -1)\n      return commentEndsAt;\n\n    commentEndsAt = data.indexOf(blockEndMark, cursor);\n    return commentEndsAt > -1 ? commentEndsAt - 1 : data.length;\n  }\n\n  while (true) {\n    if (data[cursor] === undefined)\n      break;\n    if (data[cursor] == matched && (data[cursor - 1] != escapeMark || data[cursor - 2] == escapeMark))\n      break;\n\n    cursor++;\n  }\n\n  return cursor;\n};\n\nfunction findLastCommentStartedAt(data, cursor) {\n  var position = cursor;\n\n  while (position > -1) {\n    position = data.lastIndexOf(COMMENT_START_MARK, position);\n\n    if (position > -1 && data[position - 1] != '*') {\n      break;\n    } else {\n      position--;\n    }\n  }\n\n  return position;\n}\n\nfunction findNext(data, mark, startAt) {\n  var escapeMark = '\\\\';\n  var candidate = startAt;\n\n  while (true) {\n    candidate = data.indexOf(mark, candidate + 1);\n    if (candidate == -1)\n      return -1;\n    if (data[candidate - 1] != escapeMark)\n      return candidate;\n  }\n}\n\nQuoteScanner.prototype.each = function (callback) {\n  var data = this.data;\n  var tempData = [];\n  var nextStart = 0;\n  var nextEnd = 0;\n  var cursor = 0;\n  var matchedMark = null;\n  var singleMark = '\\'';\n  var doubleMark = '\"';\n  var dataLength = data.length;\n\n  for (; nextEnd < data.length;) {\n    var nextStartSingle = findNext(data, singleMark, nextEnd);\n    var nextStartDouble = findNext(data, doubleMark, nextEnd);\n\n    if (nextStartSingle == -1)\n      nextStartSingle = dataLength;\n    if (nextStartDouble == -1)\n      nextStartDouble = dataLength;\n\n    if (nextStartSingle < nextStartDouble) {\n      nextStart = nextStartSingle;\n      matchedMark = singleMark;\n    } else {\n      nextStart = nextStartDouble;\n      matchedMark = doubleMark;\n    }\n\n    if (nextStart == -1)\n      break;\n\n    nextEnd = findQuoteEnd(data, matchedMark, nextStart + 1, cursor);\n    if (nextEnd == -1)\n      break;\n\n    var text = data.substring(nextStart, nextEnd + 1);\n    tempData.push(data.substring(cursor, nextStart));\n    if (text.length > 0)\n      callback(text, tempData, nextStart);\n\n    cursor = nextEnd + 1;\n  }\n\n  return tempData.length > 0 ?\n    tempData.join('') + data.substring(cursor, data.length) :\n    data;\n};\n\nmodule.exports = QuoteScanner;\n","var EscapeStore = require('./escape-store');\n\nvar EXPRESSION_NAME = 'expression';\nvar EXPRESSION_START = '(';\nvar EXPRESSION_END = ')';\nvar EXPRESSION_PREFIX = EXPRESSION_NAME + EXPRESSION_START;\nvar BODY_START = '{';\nvar BODY_END = '}';\n\nvar lineBreak = require('os').EOL;\n\nfunction findEnd(data, start) {\n  var end = start + EXPRESSION_NAME.length;\n  var level = 0;\n  var quoted = false;\n  var braced = false;\n\n  while (true) {\n    var current = data[end++];\n\n    if (quoted) {\n      quoted = current != '\\'' && current != '\"';\n    } else {\n      quoted = current == '\\'' || current == '\"';\n\n      if (current == EXPRESSION_START)\n        level++;\n      if (current == EXPRESSION_END)\n        level--;\n      if (current == BODY_START)\n        braced = true;\n      if (current == BODY_END && !braced && level == 1) {\n        end--;\n        level--;\n      }\n    }\n\n    if (level === 0 && current == EXPRESSION_END)\n      break;\n    if (!current) {\n      end = data.substring(0, end).lastIndexOf(BODY_END);\n      break;\n    }\n  }\n\n  return end;\n}\n\nfunction ExpressionsProcessor(saveWaypoints) {\n  this.expressions = new EscapeStore('EXPRESSION');\n  this.saveWaypoints = saveWaypoints;\n}\n\nExpressionsProcessor.prototype.escape = function (data) {\n  var nextStart = 0;\n  var nextEnd = 0;\n  var cursor = 0;\n  var tempData = [];\n  var indent = 0;\n  var breaksCount;\n  var lastBreakAt;\n  var newIndent;\n  var saveWaypoints = this.saveWaypoints;\n\n  for (; nextEnd < data.length;) {\n    nextStart = data.indexOf(EXPRESSION_PREFIX, nextEnd);\n    if (nextStart == -1)\n      break;\n\n    nextEnd = findEnd(data, nextStart);\n\n    var expression = data.substring(nextStart, nextEnd);\n    if (saveWaypoints) {\n      breaksCount = expression.split(lineBreak).length - 1;\n      lastBreakAt = expression.lastIndexOf(lineBreak);\n      newIndent = lastBreakAt > 0 ?\n        expression.substring(lastBreakAt + lineBreak.length).length :\n        indent + expression.length;\n    }\n\n    var metadata = saveWaypoints ? [breaksCount, newIndent] : null;\n    var placeholder = this.expressions.store(expression, metadata);\n    tempData.push(data.substring(cursor, nextStart));\n    tempData.push(placeholder);\n\n    if (saveWaypoints)\n      indent = newIndent + 1;\n    cursor = nextEnd;\n  }\n\n  return tempData.length > 0 ?\n    tempData.join('') + data.substring(cursor, data.length) :\n    data;\n};\n\nExpressionsProcessor.prototype.restore = function (data) {\n  var tempData = [];\n  var cursor = 0;\n\n  for (; cursor < data.length;) {\n    var nextMatch = this.expressions.nextMatch(data, cursor);\n    if (nextMatch.start < 0)\n      break;\n\n    tempData.push(data.substring(cursor, nextMatch.start));\n    var comment = this.expressions.restore(nextMatch.match);\n    tempData.push(comment);\n\n    cursor = nextMatch.end;\n  }\n\n  return tempData.length > 0 ?\n    tempData.join('') + data.substring(cursor, data.length) :\n    data;\n};\n\nmodule.exports = ExpressionsProcessor;\n","var EscapeStore = require('./escape-store');\nvar QuoteScanner = require('../utils/quote-scanner');\n\nvar lineBreak = require('os').EOL;\n\nfunction FreeTextProcessor(saveWaypoints) {\n  this.matches = new EscapeStore('FREE_TEXT');\n  this.saveWaypoints = saveWaypoints;\n}\n\n// Strip content tags by replacing them by the a special\n// marker for further restoring. It's done via string scanning\n// instead of regexps to speed up the process.\nFreeTextProcessor.prototype.escape = function (data) {\n  var self = this;\n  var breaksCount;\n  var lastBreakAt;\n  var indent;\n  var metadata;\n  var saveWaypoints = this.saveWaypoints;\n\n  return new QuoteScanner(data).each(function (match, store) {\n    if (saveWaypoints) {\n      breaksCount = match.split(lineBreak).length - 1;\n      lastBreakAt = match.lastIndexOf(lineBreak);\n      indent = lastBreakAt > 0 ?\n        match.substring(lastBreakAt + lineBreak.length).length :\n        match.length;\n      metadata = [breaksCount, indent];\n    }\n\n    var placeholder = self.matches.store(match, metadata);\n    store.push(placeholder);\n  });\n};\n\nfunction normalize(text, data, prefixContext, cursor) {\n  // FIXME: this is even a bigger hack now - see #407\n  var searchIn = data;\n  if (prefixContext) {\n    searchIn = prefixContext + data.substring(0, data.indexOf('__ESCAPED_FREE_TEXT_CLEAN_CSS'));\n    cursor = searchIn.length;\n  }\n\n  var lastSemicolon = searchIn.lastIndexOf(';', cursor);\n  var lastOpenBrace = searchIn.lastIndexOf('{', cursor);\n  var lastOne = 0;\n\n  if (lastSemicolon > -1 && lastOpenBrace > -1)\n    lastOne = Math.max(lastSemicolon, lastOpenBrace);\n  else if (lastSemicolon == -1)\n    lastOne = lastOpenBrace;\n  else\n    lastOne = lastSemicolon;\n\n  var context = searchIn.substring(lastOne + 1, cursor);\n\n  if (/\\[[\\w\\d\\-]+[\\*\\|\\~\\^\\$]?=$/.test(context)) {\n    text = text\n      .replace(/\\\\\\n|\\\\\\r\\n/g, '')\n      .replace(/\\n|\\r\\n/g, '');\n  }\n\n  if (/^['\"][a-zA-Z][a-zA-Z\\d\\-_]+['\"]$/.test(text) && !/format\\($/.test(context)) {\n    var isFont = /^(font|font\\-family):/.test(context);\n    var isAttribute = /\\[[\\w\\d\\-]+[\\*\\|\\~\\^\\$]?=$/.test(context);\n    var isKeyframe = /@(-moz-|-o-|-webkit-)?keyframes /.test(context);\n    var isAnimation = /^(-moz-|-o-|-webkit-)?animation(-name)?:/.test(context);\n\n    if (isFont || isAttribute || isKeyframe || isAnimation)\n      text = text.substring(1, text.length - 1);\n  }\n\n  return text;\n}\n\nFreeTextProcessor.prototype.restore = function (data, prefixContext) {\n  var tempData = [];\n  var cursor = 0;\n\n  for (; cursor < data.length;) {\n    var nextMatch = this.matches.nextMatch(data, cursor);\n    if (nextMatch.start < 0)\n      break;\n\n    tempData.push(data.substring(cursor, nextMatch.start));\n    var text = normalize(this.matches.restore(nextMatch.match), data, prefixContext, nextMatch.start);\n    tempData.push(text);\n\n    cursor = nextMatch.end;\n  }\n\n  return tempData.length > 0 ?\n    tempData.join('') + data.substring(cursor, data.length) :\n    data;\n};\n\nmodule.exports = FreeTextProcessor;\n","var EscapeStore = require('./escape-store');\nvar reduceUrls = require('../urls/reduce');\n\nvar lineBreak = require('os').EOL;\n\nfunction UrlsProcessor(context, saveWaypoints, keepUrlQuotes) {\n  this.urls = new EscapeStore('URL');\n  this.context = context;\n  this.saveWaypoints = saveWaypoints;\n  this.keepUrlQuotes = keepUrlQuotes;\n}\n\n// Strip urls by replacing them by a special\n// marker for further restoring. It's done via string scanning\n// instead of regexps to speed up the process.\nUrlsProcessor.prototype.escape = function (data) {\n  var breaksCount;\n  var lastBreakAt;\n  var indent;\n  var saveWaypoints = this.saveWaypoints;\n  var self = this;\n\n  return reduceUrls(data, this.context, function (url, tempData) {\n    if (saveWaypoints) {\n      breaksCount = url.split(lineBreak).length - 1;\n      lastBreakAt = url.lastIndexOf(lineBreak);\n      indent = lastBreakAt > 0 ?\n        url.substring(lastBreakAt + lineBreak.length).length :\n        url.length;\n    }\n\n    var placeholder = self.urls.store(url, saveWaypoints ? [breaksCount, indent] : null);\n    tempData.push(placeholder);\n  });\n};\n\nfunction normalize(url, keepUrlQuotes) {\n  url = url\n    .replace(/^url/gi, 'url')\n    .replace(/\\\\?\\n|\\\\?\\r\\n/g, '')\n    .replace(/(\\s{2,}|\\s)/g, ' ')\n    .replace(/^url\\((['\"])? /, 'url($1')\n    .replace(/ (['\"])?\\)$/, '$1)');\n\n  if (/url\\(\".*'.*\"\\)/.test(url) || /url\\('.*\".*'\\)/.test(url))\n    return url;\n\n  if (!keepUrlQuotes && !/^['\"].+['\"]$/.test(url) && !/url\\(.*[\\s\\(\\)].*\\)/.test(url) && !/url\\(['\"]data:[^;]+;charset/.test(url))\n    url = url.replace(/[\"']/g, '');\n\n  return url;\n}\n\nUrlsProcessor.prototype.restore = function (data) {\n  var tempData = [];\n  var cursor = 0;\n\n  for (; cursor < data.length;) {\n    var nextMatch = this.urls.nextMatch(data, cursor);\n    if (nextMatch.start < 0)\n      break;\n\n    tempData.push(data.substring(cursor, nextMatch.start));\n    var url = normalize(this.urls.restore(nextMatch.match), this.keepUrlQuotes);\n    tempData.push(url);\n\n    cursor = nextMatch.end;\n  }\n\n  return tempData.length > 0 ?\n    tempData.join('') + data.substring(cursor, data.length) :\n    data;\n};\n\nmodule.exports = UrlsProcessor;\n","var util = require('util');\n\nvar DEFAULTS = {\n  '*': {\n    colors: {\n      opacity: true // rgba / hsla\n    },\n    properties: {\n      backgroundClipMerging: false, // background-clip to shorthand\n      backgroundOriginMerging: false, // background-origin to shorthand\n      backgroundSizeMerging: false, // background-size to shorthand\n      colors: true, // any kind of color transformations, like `#ff00ff` to `#f0f` or `#fff` into `red`\n      ieBangHack: false, // !ie suffix hacks on IE<8\n      iePrefixHack: false, // underscore / asterisk prefix hacks on IE\n      ieSuffixHack: true, // \\9 suffix hacks on IE6-9\n      merging: true, // merging properties into one\n      shorterLengthUnits: false, // optimize pixel units into `pt`, `pc` or `in` units\n      spaceAfterClosingBrace: true, // 'url() no-repeat' to 'url()no-repeat'\n      urlQuotes: false, // whether to wrap content of `url()` into quotes or not\n      zeroUnits: true // 0[unit] -> 0\n    },\n    selectors: {\n      adjacentSpace: false, // div+ nav Android stock browser hack\n      ie7Hack: false, // *+html hack\n      special: /(\\-moz\\-|\\-ms\\-|\\-o\\-|\\-webkit\\-|:dir\\([a-z-]*\\)|:first(?![a-z-])|:fullscreen|:left|:read-only|:read-write|:right|:placeholder|:host|:content|\\/deep\\/|:shadow|:selection|^,)/ // special selectors which prevent merging\n    },\n    units: {\n      ch: true,\n      in: true,\n      pc: true,\n      pt: true,\n      rem: true,\n      vh: true,\n      vm: true, // vm is vmin on IE9+ see https://developer.mozilla.org/en-US/docs/Web/CSS/length\n      vmax: true,\n      vmin: true,\n      vw: true\n    }\n  },\n  'ie8': {\n    colors: {\n      opacity: false\n    },\n    properties: {\n      backgroundClipMerging: false,\n      backgroundOriginMerging: false,\n      backgroundSizeMerging: false,\n      colors: true,\n      ieBangHack: false,\n      iePrefixHack: true,\n      ieSuffixHack: true,\n      merging: false,\n      shorterLengthUnits: false,\n      spaceAfterClosingBrace: true,\n      urlQuotes: false,\n      zeroUnits: true\n    },\n    selectors: {\n      adjacentSpace: false,\n      ie7Hack: false,\n      special: /(\\-moz\\-|\\-ms\\-|\\-o\\-|\\-webkit\\-|:root|:nth|:first\\-of|:last|:only|:empty|:target|:checked|::selection|:enabled|:disabled|:not|:placeholder|:host|::content|\\/deep\\/|::shadow|^,)/\n    },\n    units: {\n      ch: false,\n      in: true,\n      pc: true,\n      pt: true,\n      rem: false,\n      vh: false,\n      vm: false,\n      vmax: false,\n      vmin: false,\n      vw: false\n    }\n  },\n  'ie7': {\n    colors: {\n      opacity: false\n    },\n    properties: {\n      backgroundClipMerging: false,\n      backgroundOriginMerging: false,\n      backgroundSizeMerging: false,\n      colors: true,\n      ieBangHack: true,\n      iePrefixHack: true,\n      ieSuffixHack: true,\n      merging: false,\n      shorterLengthUnits: false,\n      spaceAfterClosingBrace: true,\n      urlQuotes: false,\n      zeroUnits: true\n    },\n    selectors: {\n      adjacentSpace: false,\n      ie7Hack: true,\n      special: /(\\-moz\\-|\\-ms\\-|\\-o\\-|\\-webkit\\-|:focus|:before|:after|:root|:nth|:first\\-of|:last|:only|:empty|:target|:checked|::selection|:enabled|:disabled|:not|:placeholder|:host|::content|\\/deep\\/|::shadow|^,)/\n    },\n    units: {\n      ch: false,\n      in: true,\n      pc: true,\n      pt: true,\n      rem: false,\n      vh: false,\n      vm: false,\n      vmax: false,\n      vmin: false,\n      vw: false,\n    }\n  }\n};\n\nfunction Compatibility(source) {\n  this.source = source || {};\n}\n\nfunction merge(source, target) {\n  for (var key in source) {\n    var value = source[key];\n\n    if (typeof value === 'object' && !util.isRegExp(value))\n      target[key] = merge(value, target[key] || {});\n    else\n      target[key] = key in target ? target[key] : value;\n  }\n\n  return target;\n}\n\nfunction calculateSource(source) {\n  if (typeof source == 'object')\n    return source;\n\n  if (!/[,\\+\\-]/.test(source))\n    return DEFAULTS[source] || DEFAULTS['*'];\n\n  var parts = source.split(',');\n  var template = parts[0] in DEFAULTS ?\n    DEFAULTS[parts.shift()] :\n    DEFAULTS['*'];\n\n  source = {};\n\n  parts.forEach(function (part) {\n    var isAdd = part[0] == '+';\n    var key = part.substring(1).split('.');\n    var group = key[0];\n    var option = key[1];\n\n    source[group] = source[group] || {};\n    source[group][option] = isAdd;\n  });\n\n  return merge(template, source);\n}\n\nCompatibility.prototype.toOptions = function () {\n  return merge(DEFAULTS['*'], calculateSource(this.source));\n};\n\nmodule.exports = Compatibility;\n","var SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nvar fs = require('fs');\nvar path = require('path');\nvar http = require('http');\nvar https = require('https');\nvar url = require('url');\n\nvar override = require('../utils/object.js').override;\n\nvar MAP_MARKER = /\\/\\*# sourceMappingURL=(\\S+) \\*\\//;\nvar REMOTE_RESOURCE = /^(https?:)?\\/\\//;\nvar DATA_URI = /^data:(\\S*?)?(;charset=[^;]+)?(;[^,]+?)?,(.+)/;\n\nvar unescape = global.unescape;\n\nfunction InputSourceMapStore(outerContext) {\n  this.options = outerContext.options;\n  this.errors = outerContext.errors;\n  this.warnings = outerContext.warnings;\n  this.sourceTracker = outerContext.sourceTracker;\n  this.timeout = this.options.inliner.timeout;\n  this.requestOptions = this.options.inliner.request;\n  this.localOnly = outerContext.localOnly;\n  this.relativeTo = outerContext.options.target || process.cwd();\n\n  this.maps = {};\n  this.sourcesContent = {};\n}\n\nfunction fromString(self, _, whenDone) {\n  self.trackLoaded(undefined, undefined, self.options.sourceMap);\n  return whenDone();\n}\n\nfunction fromSource(self, data, whenDone, context) {\n  var nextAt = 0;\n\n  function proceedToNext() {\n    context.cursor += nextAt + 1;\n    fromSource(self, data, whenDone, context);\n  }\n\n  while (context.cursor < data.length) {\n    var fragment = data.substring(context.cursor);\n\n    var markerStartMatch = self.sourceTracker.nextStart(fragment) || { index: -1 };\n    var markerEndMatch = self.sourceTracker.nextEnd(fragment) || { index: -1 };\n    var mapMatch = MAP_MARKER.exec(fragment) || { index: -1 };\n    var sourceMapFile = mapMatch[1];\n\n    nextAt = data.length;\n    if (markerStartMatch.index > -1)\n      nextAt = markerStartMatch.index;\n    if (markerEndMatch.index > -1 && markerEndMatch.index < nextAt)\n      nextAt = markerEndMatch.index;\n    if (mapMatch.index > -1 && mapMatch.index < nextAt)\n      nextAt = mapMatch.index;\n\n    if (nextAt == data.length)\n      break;\n\n    if (nextAt == markerStartMatch.index) {\n      context.files.push(markerStartMatch.filename);\n    } else if (nextAt == markerEndMatch.index) {\n      context.files.pop();\n    } else if (nextAt == mapMatch.index) {\n      var isRemote = /^https?:\\/\\//.test(sourceMapFile) || /^\\/\\//.test(sourceMapFile);\n      var isDataUri = DATA_URI.test(sourceMapFile);\n\n      if (isRemote) {\n        return fetchMapFile(self, sourceMapFile, context, proceedToNext);\n      } else {\n        var sourceFile = context.files[context.files.length - 1];\n        var sourceMapPath, sourceMapData;\n        var sourceDir = sourceFile ? path.dirname(sourceFile) : self.options.relativeTo;\n\n        if (isDataUri) {\n          // source map's path is the same as the source file it comes from\n          sourceMapPath = path.resolve(self.options.root, sourceFile || '');\n          sourceMapData = fromDataUri(sourceMapFile);\n        } else {\n          sourceMapPath = path.resolve(self.options.root, path.join(sourceDir || '', sourceMapFile));\n          sourceMapData = fs.readFileSync(sourceMapPath, 'utf-8');\n        }\n        self.trackLoaded(sourceFile || undefined, sourceMapPath, sourceMapData);\n      }\n    }\n\n    context.cursor += nextAt + 1;\n  }\n\n  return whenDone();\n}\n\nfunction fromDataUri(uriString) {\n  var match = DATA_URI.exec(uriString);\n  var charset = match[2] ? match[2].split(/[=;]/)[2] : 'us-ascii';\n  var encoding = match[3] ? match[3].split(';')[1] : 'utf8';\n  var data = encoding == 'utf8' ? unescape(match[4]) : match[4];\n\n  var buffer = new Buffer(data, encoding);\n  buffer.charset = charset;\n\n  return buffer.toString();\n}\n\nfunction fetchMapFile(self, sourceUrl, context, done) {\n  fetch(self, sourceUrl, function (data) {\n    self.trackLoaded(context.files[context.files.length - 1] || undefined, sourceUrl, data);\n    done();\n  }, function (message) {\n    context.errors.push('Broken source map at \"' + sourceUrl + '\" - ' + message);\n    return done();\n  });\n}\n\nfunction fetch(self, path, onSuccess, onFailure) {\n  var protocol = path.indexOf('https') === 0 ? https : http;\n  var requestOptions = override(url.parse(path), self.requestOptions);\n  var errorHandled = false;\n\n  protocol\n    .get(requestOptions, function (res) {\n      if (res.statusCode < 200 || res.statusCode > 299)\n        return onFailure(res.statusCode);\n\n      var chunks = [];\n      res.on('data', function (chunk) {\n        chunks.push(chunk.toString());\n      });\n      res.on('end', function () {\n        onSuccess(chunks.join(''));\n      });\n    })\n    .on('error', function (res) {\n      if (errorHandled)\n        return;\n\n      onFailure(res.message);\n      errorHandled = true;\n    })\n    .on('timeout', function () {\n      if (errorHandled)\n        return;\n\n      onFailure('timeout');\n      errorHandled = true;\n    })\n    .setTimeout(self.timeout);\n}\n\nfunction originalPositionIn(trackedSource, line, column, token, allowNFallbacks) {\n  var originalPosition;\n  var maxRange = token.length;\n  var position = {\n    line: line,\n    column: column + maxRange\n  };\n\n  while (maxRange-- > 0) {\n    position.column--;\n    originalPosition = trackedSource.data.originalPositionFor(position);\n\n    if (originalPosition)\n      break;\n  }\n\n  if (originalPosition.line === null && line > 1 && allowNFallbacks > 0)\n    return originalPositionIn(trackedSource, line - 1, column, token, allowNFallbacks - 1);\n\n  if (trackedSource.path && originalPosition.source) {\n    originalPosition.source = REMOTE_RESOURCE.test(trackedSource.path) ?\n      url.resolve(trackedSource.path, originalPosition.source) :\n      path.join(trackedSource.path, originalPosition.source);\n\n    originalPosition.sourceResolved = true;\n  }\n\n  return originalPosition;\n}\n\nfunction trackContentSources(self, sourceFile) {\n  var consumer = self.maps[sourceFile].data;\n  var isRemote = REMOTE_RESOURCE.test(sourceFile);\n  var sourcesMapping = {};\n\n  consumer.sources.forEach(function (file, index) {\n    var uniquePath = isRemote ?\n      url.resolve(path.dirname(sourceFile), file) :\n      path.relative(self.relativeTo, path.resolve(path.dirname(sourceFile || '.'), file));\n\n    sourcesMapping[uniquePath] = consumer.sourcesContent && consumer.sourcesContent[index];\n  });\n  self.sourcesContent[sourceFile] = sourcesMapping;\n}\n\nfunction _resolveSources(self, remaining, whenDone) {\n  function processNext() {\n    return _resolveSources(self, remaining, whenDone);\n  }\n\n  if (remaining.length === 0)\n    return whenDone();\n\n  var current = remaining.shift();\n  var sourceFile = current[0];\n  var originalFile = current[1];\n  var isRemote = REMOTE_RESOURCE.test(sourceFile);\n\n  if (isRemote && self.localOnly) {\n    self.warnings.push('No callback given to `#minify` method, cannot fetch a remote file from \"' + originalFile + '\"');\n    return processNext();\n  }\n\n  if (isRemote) {\n    fetch(self, originalFile, function (data) {\n      self.sourcesContent[sourceFile][originalFile] = data;\n      processNext();\n    }, function (message) {\n      self.warnings.push('Broken original source file at \"' + originalFile + '\" - ' + message);\n      processNext();\n    });\n  } else {\n    var fullPath = path.join(self.options.root, originalFile);\n    if (fs.existsSync(fullPath))\n      self.sourcesContent[sourceFile][originalFile] = fs.readFileSync(fullPath, 'utf-8');\n    else\n      self.warnings.push('Missing original source file at \"' + fullPath + '\".');\n    return processNext();\n  }\n}\n\nInputSourceMapStore.prototype.track = function (data, whenDone) {\n  return typeof this.options.sourceMap == 'string' ?\n    fromString(this, data, whenDone) :\n    fromSource(this, data, whenDone, { files: [], cursor: 0, errors: this.errors });\n};\n\nInputSourceMapStore.prototype.trackLoaded = function (sourcePath, mapPath, mapData) {\n  var relativeTo = this.options.explicitTarget ? this.options.target : this.options.root;\n  var isRemote = REMOTE_RESOURCE.test(sourcePath);\n\n  if (mapPath) {\n    mapPath = isRemote ?\n      path.dirname(mapPath) :\n      path.dirname(path.relative(relativeTo, mapPath));\n  }\n\n  this.maps[sourcePath] = {\n    path: mapPath,\n    data: new SourceMapConsumer(mapData)\n  };\n\n  trackContentSources(this, sourcePath);\n};\n\nInputSourceMapStore.prototype.isTracking = function (source) {\n  return !!this.maps[source];\n};\n\nInputSourceMapStore.prototype.originalPositionFor = function (sourceInfo, token, allowNFallbacks) {\n  return originalPositionIn(this.maps[sourceInfo.source], sourceInfo.line, sourceInfo.column, token, allowNFallbacks);\n};\n\nInputSourceMapStore.prototype.sourcesContentFor = function (contextSource) {\n  return this.sourcesContent[contextSource];\n};\n\nInputSourceMapStore.prototype.resolveSources = function (whenDone) {\n  var toResolve = [];\n\n  for (var sourceFile in this.sourcesContent) {\n    var contents = this.sourcesContent[sourceFile];\n    for (var originalFile in contents) {\n      if (!contents[originalFile])\n        toResolve.push([sourceFile, originalFile]);\n    }\n  }\n\n  return _resolveSources(this, toResolve, whenDone);\n};\n\nmodule.exports = InputSourceMapStore;\n","function SourceTracker() {\n  this.sources = [];\n}\n\nSourceTracker.prototype.store = function (filename, data) {\n  this.sources.push(filename);\n\n  return '__ESCAPED_SOURCE_CLEAN_CSS' + (this.sources.length - 1) + '__' +\n    data +\n    '__ESCAPED_SOURCE_END_CLEAN_CSS__';\n};\n\nSourceTracker.prototype.nextStart = function (data) {\n  var next = /__ESCAPED_SOURCE_CLEAN_CSS(\\d+)__/.exec(data);\n\n  return next ?\n    { index: next.index, filename: this.sources[~~next[1]] } :\n    null;\n};\n\nSourceTracker.prototype.nextEnd = function (data) {\n  return /__ESCAPED_SOURCE_END_CLEAN_CSS__/g.exec(data);\n};\n\nSourceTracker.prototype.removeAll = function (data) {\n  return data\n    .replace(/__ESCAPED_SOURCE_CLEAN_CSS\\d+__/g, '')\n    .replace(/__ESCAPED_SOURCE_END_CLEAN_CSS__/g, '');\n};\n\nmodule.exports = SourceTracker;\n","var path = require('path');\nvar rewriteUrls = require('../urls/rewrite');\n\nvar REMOTE_RESOURCE = /^(https?:)?\\/\\//;\n\nfunction SourceReader(context, data) {\n  this.outerContext = context;\n  this.data = data;\n  this.sources = {};\n}\n\nSourceReader.prototype.sourceAt = function (path) {\n  return this.sources[path];\n};\n\nSourceReader.prototype.trackSource = function (path, source) {\n  this.sources[path] = {};\n  this.sources[path][path] = source;\n};\n\nSourceReader.prototype.toString = function () {\n  if (typeof this.data == 'string')\n    return fromString(this);\n  if (Buffer.isBuffer(this.data))\n    return fromBuffer(this);\n  if (Array.isArray(this.data))\n    return fromArray(this);\n\n  return fromHash(this);\n};\n\nfunction fromString(self) {\n  var data = self.data;\n  self.trackSource(undefined, data);\n  return data;\n}\n\nfunction fromBuffer(self) {\n  var data = self.data.toString();\n  self.trackSource(undefined, data);\n  return data;\n}\n\nfunction fromArray(self) {\n  return self.data\n    .map(function (source) {\n      return self.outerContext.options.processImport === false ?\n        source + '@shallow' :\n        source;\n    })\n    .map(function (source) {\n      return !self.outerContext.options.relativeTo || /^https?:\\/\\//.test(source) ?\n        source :\n        path.relative(self.outerContext.options.relativeTo, source);\n    })\n    .map(function (source) { return '@import url(' + source + ');'; })\n    .join('');\n}\n\nfunction fromHash(self) {\n  var data = [];\n  var toBase = path.resolve(self.outerContext.options.target || self.outerContext.options.root);\n\n  for (var source in self.data) {\n    var styles = self.data[source].styles;\n    var inputSourceMap = self.data[source].sourceMap;\n    var isRemote = REMOTE_RESOURCE.test(source);\n    var absoluteSource = isRemote ? source : path.resolve(source);\n    var absoluteSourcePath = path.dirname(absoluteSource);\n\n    var rewriteOptions = {\n      absolute: self.outerContext.options.explicitRoot,\n      relative: !self.outerContext.options.explicitRoot,\n      imports: true,\n      rebase: self.outerContext.options.rebase,\n      fromBase: absoluteSourcePath,\n      toBase: isRemote ? absoluteSourcePath : toBase,\n      urlQuotes: self.outerContext.options.compatibility.properties.urlQuotes\n    };\n    styles = rewriteUrls(styles, rewriteOptions, self.outerContext);\n\n    self.trackSource(source, styles);\n\n    styles = self.outerContext.sourceTracker.store(source, styles);\n\n    // here we assume source map lies in the same directory as `source` does\n    if (self.outerContext.options.sourceMap && inputSourceMap)\n      self.outerContext.inputSourceMapTracker.trackLoaded(source, source, inputSourceMap);\n\n    data.push(styles);\n  }\n\n  return data.join('');\n}\n\nmodule.exports = SourceReader;\n","// Validates various CSS property values\n\nvar split = require('../utils/split');\n\nvar widthKeywords = ['thin', 'thick', 'medium', 'inherit', 'initial'];\nvar allUnits = ['px', '%', 'em', 'in', 'cm', 'mm', 'ex', 'pt', 'pc', 'ch', 'rem', 'vh', 'vm', 'vmin', 'vmax', 'vw'];\nvar cssUnitRegexStr = '(\\\\-?\\\\.?\\\\d+\\\\.?\\\\d*(' + allUnits.join('|') + '|)|auto|inherit)';\nvar cssCalcRegexStr = '(\\\\-moz\\\\-|\\\\-webkit\\\\-)?calc\\\\([^\\\\)]+\\\\)';\nvar cssFunctionNoVendorRegexStr = '[A-Z]+(\\\\-|[A-Z]|[0-9])+\\\\(.*?\\\\)';\nvar cssFunctionVendorRegexStr = '\\\\-(\\\\-|[A-Z]|[0-9])+\\\\(.*?\\\\)';\nvar cssVariableRegexStr = 'var\\\\(\\\\-\\\\-[^\\\\)]+\\\\)';\nvar cssFunctionAnyRegexStr = '(' + cssVariableRegexStr + '|' + cssFunctionNoVendorRegexStr + '|' + cssFunctionVendorRegexStr + ')';\nvar cssUnitOrCalcRegexStr = '(' + cssUnitRegexStr + '|' + cssCalcRegexStr + ')';\nvar cssUnitAnyRegexStr = '(none|' + widthKeywords.join('|') + '|' + cssUnitRegexStr + '|' + cssVariableRegexStr + '|' + cssFunctionNoVendorRegexStr + '|' + cssFunctionVendorRegexStr + ')';\n\nvar cssFunctionNoVendorRegex = new RegExp('^' + cssFunctionNoVendorRegexStr + '$', 'i');\nvar cssFunctionVendorRegex = new RegExp('^' + cssFunctionVendorRegexStr + '$', 'i');\nvar cssVariableRegex = new RegExp('^' + cssVariableRegexStr + '$', 'i');\nvar cssFunctionAnyRegex = new RegExp('^' + cssFunctionAnyRegexStr + '$', 'i');\nvar cssUnitRegex = new RegExp('^' + cssUnitRegexStr + '$', 'i');\nvar cssUnitOrCalcRegex = new RegExp('^' + cssUnitOrCalcRegexStr + '$', 'i');\nvar cssUnitAnyRegex = new RegExp('^' + cssUnitAnyRegexStr + '$', 'i');\n\nvar backgroundRepeatKeywords = ['repeat', 'no-repeat', 'repeat-x', 'repeat-y', 'inherit'];\nvar backgroundAttachmentKeywords = ['inherit', 'scroll', 'fixed', 'local'];\nvar backgroundPositionKeywords = ['center', 'top', 'bottom', 'left', 'right'];\nvar backgroundSizeKeywords = ['contain', 'cover'];\nvar backgroundBoxKeywords = ['border-box', 'content-box', 'padding-box'];\nvar styleKeywords = ['auto', 'inherit', 'hidden', 'none', 'dotted', 'dashed', 'solid', 'double', 'groove', 'ridge', 'inset', 'outset'];\nvar listStyleTypeKeywords = ['armenian', 'circle', 'cjk-ideographic', 'decimal', 'decimal-leading-zero', 'disc', 'georgian', 'hebrew', 'hiragana', 'hiragana-iroha', 'inherit', 'katakana', 'katakana-iroha', 'lower-alpha', 'lower-greek', 'lower-latin', 'lower-roman', 'none', 'square', 'upper-alpha', 'upper-latin', 'upper-roman'];\nvar listStylePositionKeywords = ['inside', 'outside', 'inherit'];\n\nfunction Validator(compatibility) {\n  var validUnits = allUnits.slice(0).filter(function (value) {\n    return !(value in compatibility.units) || compatibility.units[value] === true;\n  });\n\n  var compatibleCssUnitRegexStr = '(\\\\-?\\\\.?\\\\d+\\\\.?\\\\d*(' + validUnits.join('|') + '|)|auto|inherit)';\n  this.compatibleCssUnitRegex = new RegExp('^' + compatibleCssUnitRegexStr + '$', 'i');\n  this.compatibleCssUnitAnyRegex = new RegExp('^(none|' + widthKeywords.join('|') + '|' + compatibleCssUnitRegexStr + '|' + cssVariableRegexStr + '|' + cssFunctionNoVendorRegexStr + '|' + cssFunctionVendorRegexStr + ')$', 'i');\n\n  this.colorOpacity = compatibility.colors.opacity;\n}\n\nValidator.prototype.isValidHexColor = function (s) {\n  return (s.length === 4 || s.length === 7) && s[0] === '#';\n};\n\nValidator.prototype.isValidRgbaColor = function (s) {\n  s = s.split(' ').join('');\n  return s.length > 0 && s.indexOf('rgba(') === 0 && s.indexOf(')') === s.length - 1;\n};\n\nValidator.prototype.isValidHslaColor = function (s) {\n  s = s.split(' ').join('');\n  return s.length > 0 && s.indexOf('hsla(') === 0 && s.indexOf(')') === s.length - 1;\n};\n\nValidator.prototype.isValidNamedColor = function (s) {\n  // We don't really check if it's a valid color value, but allow any letters in it\n  return s !== 'auto' && (s === 'transparent' || s === 'inherit' || /^[a-zA-Z]+$/.test(s));\n};\n\nValidator.prototype.isValidVariable = function (s) {\n  return cssVariableRegex.test(s);\n};\n\nValidator.prototype.isValidColor = function (s) {\n  return this.isValidNamedColor(s) ||\n    this.isValidColorValue(s) ||\n    this.isValidVariable(s) ||\n    this.isValidVendorPrefixedValue(s);\n};\n\nValidator.prototype.isValidColorValue = function (s) {\n  return this.isValidHexColor(s) ||\n    this.isValidRgbaColor(s) ||\n    this.isValidHslaColor(s);\n};\n\nValidator.prototype.isValidUrl = function (s) {\n  // NOTE: at this point all URLs are replaced with placeholders by clean-css, so we check for those placeholders\n  return s.indexOf('__ESCAPED_URL_CLEAN_CSS') === 0;\n};\n\nValidator.prototype.isValidUnit = function (s) {\n  return cssUnitAnyRegex.test(s);\n};\n\nValidator.prototype.isValidUnitWithoutFunction = function (s) {\n  return cssUnitRegex.test(s);\n};\n\nValidator.prototype.isValidAndCompatibleUnit = function (s) {\n  return this.compatibleCssUnitAnyRegex.test(s);\n};\n\nValidator.prototype.isValidAndCompatibleUnitWithoutFunction = function (s) {\n  return this.compatibleCssUnitRegex.test(s);\n};\n\nValidator.prototype.isValidFunctionWithoutVendorPrefix = function (s) {\n  return cssFunctionNoVendorRegex.test(s);\n};\n\nValidator.prototype.isValidFunctionWithVendorPrefix = function (s) {\n  return cssFunctionVendorRegex.test(s);\n};\n\nValidator.prototype.isValidFunction = function (s) {\n  return cssFunctionAnyRegex.test(s);\n};\n\nValidator.prototype.isValidBackgroundRepeat = function (s) {\n  return backgroundRepeatKeywords.indexOf(s) >= 0 || this.isValidVariable(s);\n};\n\nValidator.prototype.isValidBackgroundAttachment = function (s) {\n  return backgroundAttachmentKeywords.indexOf(s) >= 0 || this.isValidVariable(s);\n};\n\nValidator.prototype.isValidBackgroundBox = function (s) {\n  return backgroundBoxKeywords.indexOf(s) >= 0 || this.isValidVariable(s);\n};\n\nValidator.prototype.isValidBackgroundPositionPart = function (s) {\n  return backgroundPositionKeywords.indexOf(s) >= 0 || cssUnitOrCalcRegex.test(s) || this.isValidVariable(s);\n};\n\nValidator.prototype.isValidBackgroundPosition = function (s) {\n  if (s === 'inherit')\n    return true;\n\n  var parts = s.split(' ');\n  for (var i = 0, l = parts.length; i < l; i++) {\n    if (parts[i] === '')\n      continue;\n    if (this.isValidBackgroundPositionPart(parts[i]) || this.isValidVariable(parts[i]))\n      continue;\n\n    return false;\n  }\n\n  return true;\n};\n\nValidator.prototype.isValidBackgroundSizePart = function (s) {\n  return backgroundSizeKeywords.indexOf(s) >= 0 || cssUnitRegex.test(s) || this.isValidVariable(s);\n};\n\nValidator.prototype.isValidBackgroundPositionAndSize = function (s) {\n  if (s.indexOf('/') < 0)\n    return false;\n\n  var twoParts = split(s, '/');\n  return this.isValidBackgroundSizePart(twoParts.pop()) && this.isValidBackgroundPositionPart(twoParts.pop());\n};\n\nValidator.prototype.isValidListStyleType = function (s) {\n  return listStyleTypeKeywords.indexOf(s) >= 0 || this.isValidVariable(s);\n};\n\nValidator.prototype.isValidListStylePosition = function (s) {\n  return listStylePositionKeywords.indexOf(s) >= 0 || this.isValidVariable(s);\n};\n\nValidator.prototype.isValidStyle = function (s) {\n  return this.isValidStyleKeyword(s) || this.isValidVariable(s);\n};\n\nValidator.prototype.isValidStyleKeyword = function (s) {\n  return styleKeywords.indexOf(s) >= 0;\n};\n\nValidator.prototype.isValidWidth = function (s) {\n  return this.isValidUnit(s) || this.isValidWidthKeyword(s) || this.isValidVariable(s);\n};\n\nValidator.prototype.isValidWidthKeyword = function (s) {\n  return widthKeywords.indexOf(s) >= 0;\n};\n\nValidator.prototype.isValidVendorPrefixedValue = function (s) {\n  return /^-([A-Za-z0-9]|-)*$/gi.test(s);\n};\n\nValidator.prototype.areSameFunction = function (a, b) {\n  if (!this.isValidFunction(a) || !this.isValidFunction(b))\n    return false;\n\n  var f1name = a.substring(0, a.indexOf('('));\n  var f2name = b.substring(0, b.indexOf('('));\n\n  return f1name === f2name;\n};\n\nmodule.exports = Validator;\n"]}